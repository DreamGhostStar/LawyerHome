{"version":3,"sources":["containers/HeaderContainer.tsx","redux/actions.ts","components/home/Header.tsx","components/home/Sider.tsx","components/common/AuthorShow.tsx","components/home/UserVerifyDetail.tsx","components/home/UserVerify.tsx","components/home/AlterUserInfoModal.tsx","components/home/UserList.tsx","http/ErrorMessageApi.tsx","components/home/ErrorDetailModel.tsx","components/home/ErrorList.tsx","pages/home.tsx","components/common/utils.tsx","http/UserApi.tsx","components/common/config.ts","http/Servies.tsx"],"names":["connect","state","user","transform_user","type","USER_DATA","data","history","useHistory","useState","store","getState","avatar","setAvatar","isMouse","setIsMouse","getBasicUser","a","getToken","get_basic_user_info_api","res","tempUserData","console","log","errorToast","push","useEffect","subscribe","className","onClick","onMouseOver","onMouseOut","src","alt","style","color","display","removeToken","successToast","Sider","activeIndex","setActiveSiderIndex","siderData","map","siderItem","index","key","icon","title","top","AuthorShow","realname","createTime","UserVerifyDetail","visible","setVisible","verifyID","getUserVerifyList","verifyDetail","setVerifyDetail","loading","setLoading","handleCancel","getVerifyDetail","getUserVerifyDetailApi","id","code","submit","result","submitUserVerifyResultApi","isAgree","message","onCancel","footer","Loading2","author","content","files","file","danger","UserVerify","userVerifyList","setUserVerifyList","setVerifyID","getUserVerifyListApi","backgroundColor","length","userVerifyItem","abstract","firstPicture","AlterUserInfoModal","userID","getUserList","current","setUser","handleOk","name","phoneNumber","lawyer_number","weixin_number","alter_user_info_api","httpIsSuccess","handleInput","value","getUserDetail","get_user_detail_info_api","onOk","placeholder","onChange","e","target","Option","Select","UserList","userList","setUserList","setCurrent","selectedUserID","setSelectedUserID","num","setNum","handleChange","identifyID","alter_user_identify_api","resetPassword","reset_user_password_api","password","md5","columns","dataIndex","render","_author","record","isMy","indentify","disabled","defaultValue","width","indentifyList","identifyItem","align","text","size","get_user_list_api","userListTemp","userItem","toString","dataSource","pagination","pageSize","total","getErrorListApi","axios","method","url","params","headers","getHeaders","getErrorDetailApi","ErrorDetailModel","errorID","errorDetail","setErrorDetail","getErrorDetail","ErrorList","errorList","setErrorList","radioIdentifyID","setRadioIdentifyID","currentPage","setCurrentPage","pageNum","setPageNum","identifyList","setIdentifyList","setErrorID","getErrorList","page","identityID","list","getIdentifyList","getIdentifyListApi","Group","errorItem","Home","activeSiderIndex","mainPageMap","Map","set","HeaderContainer","get","IconFont","createFromIconfontCN","scriptUrl","msg","success","error","cookies","load","setToken","token","save","maxAge","remove","get_verify_code_api","Http","request","backIP","login_password_api","testIP","defaults","timeout","interceptors","response","use","Promise","reject","resolve","then","catch","err"],"mappings":"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","file":"static/js/6.042ce75e.chunk.js","sourcesContent":["import { connect } from 'react-redux'\r\nimport { transform_user } from 'redux/actions'\r\nimport Header from 'components/home/Header'\r\nexport default connect(\r\n    state => ({\r\n        user: state\r\n    }),\r\n    {transform_user}\r\n)(Header)","// 包含所有的 action creator\r\nimport {\r\n    USER_DATA,\r\n    REMOVE_USER_DATA\r\n} from './action-types';\r\nimport { UserBasicConfig } from 'components/home/Header';\r\n\r\n// TODO: 需修改\r\n// 从register里传递已登录的用户数据到其余各个组件\r\nexport const transform_user = (user: UserBasicConfig)=>({\r\n    type: USER_DATA,\r\n    data: user\r\n}) \r\n\r\n// 退出登录，删去redux的数据\r\nexport const remove_user = (user: UserBasicConfig)=>({\r\n    type: REMOVE_USER_DATA,\r\n    data: user\r\n}) \r\n\r\n// 异步action\r\n// 如果想返回一个函数，必须应用上异步中间件\r\n// export const incrementAsync = (number) => {\r\n//     return dispatch => {\r\n//         // 异步代码\r\n//         setTimeout(() => {\r\n//             // 一秒之后才去分发一个增加的action\r\n//             dispatch(increment(number))\r\n//         }, 1000)\r\n//     }\r\n// }","import React, { useEffect, useState } from 'react'\r\nimport 'styles/home/header.scss'\r\nimport store from 'redux/store'\r\nimport { getToken, IconFont, removeToken, successToast, errorToast } from 'components/common/utils'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { get_basic_user_info_api } from 'http/UserApi'\r\n\r\nconst stylePrefix = 'home-header'\r\n\r\nexport interface UserBasicConfig {\r\n    avatar: string; // 头像\r\n    name: string; // 真实姓名\r\n    lawyer_number: string;\r\n}\r\n\r\ninterface HeaderConfig {\r\n    transform_user: (user: UserBasicConfig) => {\r\n        type: string;\r\n        data: UserBasicConfig;\r\n    }\r\n}\r\n\r\nexport default function Header({ transform_user }: HeaderConfig) {\r\n    const history = useHistory()\r\n    const [avatar, setAvatar] = useState(store.getState().user?.avatar)\r\n    const [isMouse, setIsMouse] = useState(false)\r\n    const getBasicUser = async () => {\r\n        const token: string = getToken()\r\n        if (token && !store.getState().user) {\r\n            const res = await get_basic_user_info_api({});\r\n            const tempUserData: UserBasicConfig = res.data\r\n            console.log(tempUserData)\r\n            setAvatar(tempUserData.avatar)\r\n            transform_user(tempUserData)\r\n        }\r\n\r\n        if (!store.getState().user) {\r\n            errorToast('请先登录')\r\n            history.push('/login')\r\n        }\r\n    }\r\n    const exitLogin = () => {\r\n        removeToken()\r\n        successToast('退出登录成功')\r\n        history.push('/login')\r\n    }\r\n    const gotoHome = () => {\r\n        history.push('/home')\r\n    }\r\n\r\n    useEffect(() => {\r\n        store.subscribe(()=>{\r\n            getBasicUser();\r\n        })\r\n        getBasicUser();\r\n    }, [])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`}>\r\n            <p className={`${stylePrefix}-title`} onClick={gotoHome}>律政云</p>\r\n            <div\r\n                className={`${stylePrefix}-user-layout`}\r\n                onMouseOver={() => setIsMouse(true)}\r\n                onMouseOut={() => setIsMouse(false)}\r\n            >\r\n                <img onClick={() => console.log(avatar)} src={avatar} alt=\"avatar\" className={`${stylePrefix}-avatar`} />\r\n                <IconFont\r\n                    type='icon-xiabiao'\r\n                    className={`${stylePrefix}-icon`}\r\n                    style={{\r\n                        color: isMouse ? '#000' : '#fff'\r\n                    }}\r\n                />\r\n                <div\r\n                    className={`${stylePrefix}-user-operation-layout`}\r\n                    style={{\r\n                        display: isMouse ? 'block' : 'none'\r\n                    }}\r\n                >\r\n                    <p\r\n                        className={`${stylePrefix}-user-operation-word`}\r\n                        onClick={exitLogin}\r\n                    >\r\n                        退出登录\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport 'styles/home/sider.scss'\r\nimport siderData from 'static/sider.json'\r\nimport { IconFont } from 'components/common/utils'\r\n\r\nconst stylePrefix = 'home-sider'\r\n\r\ninterface SiderConfig {\r\n    activeIndex: number\r\n    setActiveSiderIndex: React.Dispatch<React.SetStateAction<number>>\r\n}\r\n\r\nexport default function Sider({ activeIndex, setActiveSiderIndex }: SiderConfig) {\r\n    return (\r\n        <div className={`${stylePrefix}-layout`}>\r\n            {\r\n                siderData.map((siderItem, index) => {\r\n                    return <div\r\n                        key={index}\r\n                        className={`${stylePrefix}-sider-item`}\r\n                        onClick={() => setActiveSiderIndex(index)}\r\n                    >\r\n                        <IconFont type={siderItem.icon} className={`${stylePrefix}-sider-icon`} />\r\n                        <p className={`${stylePrefix}-sider-title`}>{siderItem.title}</p>\r\n                    </div>\r\n                })\r\n            }\r\n            <div\r\n                className={`${stylePrefix}-shadow`}\r\n                style={{\r\n                    top: 60 * activeIndex\r\n                }}\r\n            >\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport 'styles/common/authorShow.scss'\r\n\r\nconst stylePrefix = 'common-author'\r\n\r\ninterface AuthorShowConfig {\r\n    avatar: string\r\n    realname: string\r\n    createTime: string\r\n}\r\n\r\nexport default function AuthorShow({ avatar, realname, createTime }: AuthorShowConfig) {\r\n    return (\r\n        <div className={`${stylePrefix}-author-layout`} >\r\n            <img src={avatar} alt=\"头像\" className={`${stylePrefix}-avatar`} />\r\n            <div className={`${stylePrefix}-author-info`} >\r\n                <p className={`${stylePrefix}-realname`} >{realname}</p>\r\n                <p className={`${stylePrefix}-createTime`} >{createTime}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Modal, Button } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { AuthorConfig, successToast, errorToast } from 'components/common/utils'\r\nimport AuthorShow from 'components/common/AuthorShow'\r\nimport Loading2 from 'components/common/Loading2'\r\nimport { getUserVerifyDetailApi, submitUserVerifyResultApi } from 'http/UserApi'\r\nimport 'styles/home/userVerifyDetail.scss'\r\n\r\nconst stylePrefix = 'home-verifyDetail'\r\n\r\ninterface UserVerifyDetailConfig {\r\n    visible: boolean\r\n    setVisible: React.Dispatch<React.SetStateAction<boolean>>\r\n    verifyID: number | null\r\n    getUserVerifyList: () => Promise<void>\r\n}\r\n\r\ninterface UserVerifyDetailDataConfig {\r\n    author: AuthorConfig,\r\n    createTime: string, // 创建时间，3个月前\r\n    content: string, // 内容\r\n    files: string[]\r\n}\r\n\r\nexport default function UserVerifyDetail({ visible, setVisible, verifyID, getUserVerifyList }: UserVerifyDetailConfig) {\r\n    const [verifyDetail, setVerifyDetail] = useState<UserVerifyDetailDataConfig | null>(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const handleCancel = () => {\r\n        setVisible(false)\r\n        getUserVerifyList()\r\n    }\r\n    const getVerifyDetail = async () => {\r\n        if (verifyID !== null) {\r\n            setLoading(true)\r\n            const res = await getUserVerifyDetailApi({\r\n                id: verifyID\r\n            })\r\n            if (res.code === 0) {\r\n                setLoading(false)\r\n                setVerifyDetail(res.data)\r\n            }\r\n        }\r\n    }\r\n    const submit = async (result: boolean) => {\r\n        if (verifyID) {\r\n            const res = await submitUserVerifyResultApi({\r\n                id: verifyID,\r\n                isAgree: result\r\n            })\r\n            if (res.code === 0) {\r\n                successToast(res.message)\r\n            } else {\r\n                errorToast(res.message)\r\n            }\r\n            handleCancel()\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getVerifyDetail()\r\n    }, [verifyID])\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"用户审核详情\"\r\n            onCancel={handleCancel}\r\n            footer={[]}\r\n        >\r\n            {\r\n                loading\r\n                    ? <Loading2 />\r\n                    : verifyDetail && <>\r\n                        <AuthorShow\r\n                            avatar={verifyDetail.author.avatar}\r\n                            realname={verifyDetail.author.realname}\r\n                            createTime={verifyDetail.createTime}\r\n                        />\r\n                        <p className={`${stylePrefix}-content`} >{verifyDetail.content}</p>\r\n                        <div className={`${stylePrefix}-image-layout`}>\r\n                            {\r\n                                verifyDetail.files.map((file, index) => {\r\n                                    return <img\r\n                                        key={index}\r\n                                        src={file}\r\n                                        className={`${stylePrefix}-image`}\r\n                                        alt=\"图片\"\r\n                                    />\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className={`${stylePrefix}-btn-layout`} >\r\n                            <Button type=\"primary\" onClick={() => submit(true)} >同意审核</Button>\r\n                            <Button type=\"primary\" danger onClick={() => submit(false)} >不同意审核</Button>\r\n                        </div>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport 'styles/home/userVerify.scss'\r\nimport { getUserVerifyListApi } from 'http/UserApi'\r\nimport { AuthorConfig, errorToast } from 'components/common/utils'\r\nimport Loading2 from 'components/common/Loading2'\r\nimport UserVerifyDetail from './UserVerifyDetail'\r\nimport AuthorShow from 'components/common/AuthorShow'\r\nimport userVerifyModelList from 'model/userVerifyList.json'\r\n\r\nconst stylePrefix = 'home-userverify'\r\n\r\ninterface UserVerifyItemConfig {\r\n    id: number, // 审核ID\r\n    author: AuthorConfig\r\n    createTime: string, // 创建时间（距现在多久），如3个月前\r\n    abstract: string, // 摘要30字\r\n    firstPicture: string, // 第一张图片，如果没有则不传\r\n}\r\n\r\nexport default function UserVerify() {\r\n    const [loading, setLoading] = useState(false)\r\n    const [userVerifyList, setUserVerifyList] = useState<UserVerifyItemConfig[]>([])\r\n    const [visible, setVisible] = useState(false)\r\n    const [verifyID, setVerifyID] = useState<null | number>(null)\r\n\r\n    const getUserVerifyList = async () => {\r\n        setLoading(true)\r\n        const res = await getUserVerifyListApi()\r\n        if (res.code === 0) {\r\n            console.log(res.data);\r\n            setUserVerifyList(res.data)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n    const openModal = (id: number) => {\r\n        setVisible(true)\r\n        setVerifyID(id)\r\n    }\r\n    useEffect(() => {\r\n        getUserVerifyList()\r\n    }, [])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            {\r\n                loading\r\n                    ? <Loading2 backgroundColor='#fff' />\r\n                    : userVerifyList.length !== 0\r\n                        ? userVerifyList.map((userVerifyItem, index) => {\r\n                            return <div\r\n                                key={index}\r\n                                className={`${stylePrefix}-user-verify-item`}\r\n                                onClick={() => openModal(userVerifyItem.id)}\r\n                            >\r\n                                <div className={`${stylePrefix}-user-verify-item-main`}>\r\n                                    <AuthorShow\r\n                                        avatar={userVerifyItem.author.avatar}\r\n                                        realname={userVerifyItem.author.realname}\r\n                                        createTime={userVerifyItem.createTime}\r\n                                    />\r\n                                    <p className={`${stylePrefix}-abstract`}>{userVerifyItem.abstract}</p>\r\n                                </div>\r\n                                {\r\n                                    userVerifyItem.firstPicture &&\r\n                                    <img src={userVerifyItem.firstPicture} alt=\"图片\" className={`${stylePrefix}-picture`} />\r\n                                }\r\n                            </div>\r\n                        })\r\n                        : <p className='empty-tip' >暂无信息</p>\r\n            }\r\n            <UserVerifyDetail\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                verifyID={verifyID}\r\n                getUserVerifyList={getUserVerifyList}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Input, Modal } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport 'styles/home/alterUserInfoModal.scss'\r\nimport { alter_user_info_api, get_user_detail_info_api, IAlterUserInfo } from 'http/UserApi'\r\nimport { errorToast, httpIsSuccess, successToast } from 'components/common/utils'\r\nimport Loading2 from 'components/common/Loading2'\r\n\r\nconst stylePrefix = 'home-alterUser'\r\n\r\ninterface AlterUserInfoModalConfig {\r\n    visible: boolean\r\n    setVisible: React.Dispatch<React.SetStateAction<boolean>>\r\n    userID: number | null;\r\n    getUserList: (page: number) => Promise<void>\r\n    current: number\r\n}\r\n\r\nexport interface UserDetailConfig {\r\n    name?: string;\r\n    phoneNumber?: string;\r\n    weixin_number?: string;\r\n    lawyer_number?: string;\r\n}\r\n\r\nexport default function AlterUserInfoModal({ visible, setVisible, userID, getUserList, current }: AlterUserInfoModalConfig) {\r\n    const [loading, setLoading] = useState(false)\r\n    const [user, setUser] = useState<UserDetailConfig | null>(null)\r\n    const handleOk = async () => {\r\n        if (user && user.name && user.phoneNumber && user.lawyer_number && user.weixin_number) {\r\n            setLoading(true)\r\n            const res = await alter_user_info_api((user as IAlterUserInfo))\r\n            if (httpIsSuccess(res.code)) {\r\n                getUserList(current)\r\n                successToast('修改成功')\r\n            } else {\r\n                errorToast(res.message)\r\n            }\r\n            setVisible(false)\r\n            setLoading(false)\r\n        }\r\n    }\r\n    // 处理输入框变化\r\n    const handleInput = (key: string, value: string) => {\r\n        if (user) {\r\n            setUser({\r\n                ...user,\r\n                [key]: value\r\n            })\r\n        }\r\n    }\r\n    // 获取用户详细信息\r\n    const getUserDetail = async () => {\r\n        if (userID !== null) {\r\n            const res = await get_user_detail_info_api({ userID });\r\n            if (httpIsSuccess(res.code)) {\r\n                setUser(res.data)\r\n            } else {\r\n                errorToast(res.message)\r\n            }\r\n        }\r\n    }\r\n    const handleCancel = () => {\r\n        setVisible(false)\r\n    }\r\n    useEffect(() => {\r\n        getUserDetail()\r\n    }, [userID])\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"修改用户信息\"\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            footer={[\r\n                <Button key=\"back\" onClick={handleCancel}>\r\n                    返回\r\n                </Button>,\r\n                <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}>\r\n                    提交\r\n                </Button>,\r\n            ]}\r\n        >\r\n            {\r\n                user ? <>\r\n                    <Input\r\n                        value={user.name || ''}\r\n                        placeholder='姓名'\r\n                        onChange={(e) => handleInput('name', e.target.value)}\r\n                        className={`${stylePrefix}-input`}\r\n                    />\r\n                    <Input\r\n                        value={user.phoneNumber || ''}\r\n                        placeholder='手机号'\r\n                        onChange={(e) => handleInput('phoneNumber', e.target.value)}\r\n                        className={`${stylePrefix}-input`}\r\n                    />\r\n                    <Input\r\n                        value={user.lawyer_number || ''}\r\n                        placeholder='律师证号'\r\n                        onChange={(e) => handleInput('lawyer_number', e.target.value)}\r\n                        className={`${stylePrefix}-input`}\r\n                    />\r\n                    <Input\r\n                        value={user.weixin_number || ''}\r\n                        placeholder='微信号'\r\n                        onChange={(e) => handleInput('weixin_number', e.target.value)}\r\n                        className={`${stylePrefix}-input`}\r\n                    />\r\n                </>\r\n                    : <Loading2 />\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport 'styles/home/userList.scss'\r\nimport { Table, Button, Select, Space } from 'antd';\r\nimport { AuthorConfig, IndentifyConfig, errorToast, successToast, httpIsSuccess } from 'components/common/utils';\r\nimport { get_user_list_api, alter_user_identify_api, reset_user_password_api } from 'http/UserApi';\r\nimport { ColumnsType, TablePaginationConfig } from 'antd/lib/table';\r\nimport AlterUserInfoModal from './AlterUserInfoModal';\r\nimport md5 from 'md5';\r\nimport indentifyList from 'static/identify.json'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst stylePrefix = 'home-userList'\r\nconst { Option } = Select;\r\n\r\nexport interface UserItemConfig {\r\n    id: number;\r\n    key: string\r\n    isMy: boolean\r\n    avatar: string,\r\n    name: string,\r\n    identify: IndentifyConfig;\r\n}\r\n\r\nexport default function UserList() {\r\n    const [loading, setLoading] = useState(false)\r\n    const [userList, setUserList] = useState<UserItemConfig[]>([])\r\n    const [current, setCurrent] = useState(1) // 当前page\r\n    const [visible, setVisible] = useState(false)\r\n    const [selectedUserID, setSelectedUserID] = useState<number | null>(null)\r\n    const [num, setNum] = useState(0)\r\n    const history = useHistory()\r\n    // 修改用户身份\r\n    const handleChange = async (userID: number, identifyID: number) => {\r\n        const res = await alter_user_identify_api({\r\n            userID: userID,\r\n            identifyID: identifyID\r\n        })\r\n        httpIsSuccess(res.code) ? successToast('修改成功') : errorToast(res.message)\r\n    }\r\n    // 重置用户密码\r\n    const resetPassword = async (id: number) => {\r\n        const res = await reset_user_password_api({\r\n            userID: id,\r\n            password: md5('123456')\r\n        })\r\n        httpIsSuccess(res.code) ? successToast('重置密码成功') : errorToast(res.message)\r\n    }\r\n    const openModal = (userID: number) => {\r\n        setSelectedUserID(userID)\r\n        setVisible(true)\r\n    }\r\n    const gotoSalaryPage = (userID: number) => {\r\n        history.push(`/salary/${userID}`);\r\n    }\r\n    const columns: ColumnsType<UserItemConfig> = [\r\n        {\r\n            title: '姓名',\r\n            dataIndex: 'author',\r\n            key: 'author',\r\n            render: (_author: AuthorConfig, record: UserItemConfig) => {\r\n                return (\r\n                    <div className={`${stylePrefix}-author`}>\r\n                        <img className={`${stylePrefix}-avatar`} src={record.avatar} alt=\"头像\" />\r\n                        <p className={`${stylePrefix}-realname`} >{record.name}</p>\r\n                        {\r\n                            record.isMy && <div className={`${stylePrefix}-tag`}>我</div>\r\n                        }\r\n                    </div>\r\n                )\r\n            },\r\n        },\r\n        {\r\n            title: '身份',\r\n            key: 'identify',\r\n            dataIndex: 'identify',\r\n            render: (indentify: IndentifyConfig, record: UserItemConfig) => (\r\n                <Select\r\n                    disabled={record.isMy}\r\n                    defaultValue={indentify.id}\r\n                    style={{ width: 120 }}\r\n                    onChange={(identifyID) => handleChange(record.id, identifyID)}\r\n                >\r\n                    {\r\n                        indentifyList.map((identifyItem, index) => {\r\n                            return <Option key={index} value={identifyItem.id}>{identifyItem.value}</Option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            ),\r\n            align: 'center'\r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'action',\r\n            render: (text: UserItemConfig) => {\r\n                return (\r\n                    <Space size='large' >\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={() => openModal(text.id)}\r\n                        >修改</Button>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={() => resetPassword(text.id)}\r\n                        >\r\n                            重置密码\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => gotoSalaryPage(text.id)}\r\n                        >查看收入</Button>\r\n                    </Space>\r\n                )\r\n            },\r\n            align: 'center'\r\n        },\r\n    ];\r\n    const getUserList = async () => {\r\n        setLoading(true)\r\n        const res = await get_user_list_api()\r\n        if (httpIsSuccess(res.code)) {\r\n            const userListTemp = res.data.map((userItem: any, index: number) => {\r\n                return {\r\n                    ...userItem,\r\n                    key: index.toString()\r\n                }\r\n            })\r\n            setNum(res.data.length)\r\n            setUserList(userListTemp)\r\n            setLoading(false)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n    }\r\n    const handleTableChange = (pagination: TablePaginationConfig) => {\r\n        if (pagination.current) {\r\n            setCurrent(pagination.current)\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getUserList()\r\n    }, [])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            <Table\r\n                loading={loading}\r\n                className={`${stylePrefix}-table`}\r\n                columns={columns}\r\n                dataSource={userList}\r\n                pagination={{\r\n                    current: current,\r\n                    pageSize: 10, // 一页多少项\r\n                    total: num, // 总共多少项\r\n                }}\r\n                onChange={handleTableChange}\r\n            />\r\n            <AlterUserInfoModal\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                userID={selectedUserID}\r\n                getUserList={getUserList}\r\n                current={current}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios'\r\nimport { httpConfig, getHeaders } from 'components/common/utils'\r\n\r\ninterface getErrorListConfig {\r\n    identityID: number\r\n    page: number\r\n}\r\ninterface getErrorDetailConfig {\r\n    errorID: number\r\n}\r\n\r\n// 获取错误列表\r\nexport const getErrorListApi = async (data: getErrorListConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: '/api/error/list',\r\n        params: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取错误详情\r\nexport const getErrorDetailApi = async (data: getErrorDetailConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: '/api/error',\r\n        params: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Modal } from 'antd'\r\nimport AuthorShow from 'components/common/AuthorShow'\r\nimport { AuthorConfig, errorToast } from 'components/common/utils'\r\nimport Loading2 from 'components/common/Loading2'\r\nimport errorDetailModel from 'model/errorDetail.json'\r\nimport 'styles/home/errorDetailModal.scss'\r\nimport { getErrorDetailApi } from 'http/ErrorMessageApi'\r\n\r\nconst stylePrefix = 'home-errorDetail'\r\n\r\ninterface ErrorDetailConfig {\r\n    visible: boolean\r\n    setVisible: React.Dispatch<React.SetStateAction<boolean>>\r\n    errorID: number | null\r\n}\r\n\r\ninterface ErrorDetailDataConfig {\r\n    author: AuthorConfig,\r\n    createTime: string, // 创建时间，3个月前\r\n    content: string, // 内容\r\n    files: string[]\r\n}\r\n\r\nexport default function ErrorDetailModel({ visible, setVisible, errorID }: ErrorDetailConfig) {\r\n    const [errorDetail, setErrorDetail] = useState<ErrorDetailDataConfig | null>(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const handleCancel = () => {\r\n        setVisible(false)\r\n    }\r\n    const getErrorDetail = async () => {\r\n        if (errorID === null) {\r\n            return\r\n        }\r\n        setLoading(true)\r\n        const res = await getErrorDetailApi({\r\n            errorID: errorID\r\n        })\r\n        if (res.code === 0) {\r\n            setErrorDetail(res.data)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n        setLoading(false)\r\n    }\r\n    useEffect(() => {\r\n        getErrorDetail()\r\n    }, [errorID])\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"查看错误详情\"\r\n            onCancel={handleCancel}\r\n            footer={[]}\r\n        >\r\n            {\r\n                loading\r\n                    ? <Loading2 />\r\n                    : <>\r\n                        {\r\n                            errorDetail && <AuthorShow\r\n                                avatar={errorDetail.author.avatar}\r\n                                realname={errorDetail.author.realname}\r\n                                createTime={errorDetail.createTime}\r\n                            />\r\n                        }\r\n                        <p className={`${stylePrefix}-content`} >{errorDetail?.content}</p>\r\n                        <div className={`${stylePrefix}-img-layout`} >\r\n                            {\r\n                                errorDetail && errorDetail.files.map((file, index) => {\r\n                                    return <img\r\n                                        className={`${stylePrefix}-img`}\r\n                                        key={index}\r\n                                        src={file}\r\n                                        alt=\"图片\"\r\n                                    />\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport 'styles/home/errorList.scss'\r\nimport { AuthorConfig, errorToast, IndentifyConfig } from 'components/common/utils'\r\nimport 'styles/home/errorList.scss'\r\nimport Loading2 from 'components/common/Loading2'\r\nimport AuthorShow from 'components/common/AuthorShow'\r\nimport { Radio, Button } from 'antd';\r\nimport { RadioChangeEvent } from 'antd/lib/radio'\r\nimport { getIdentifyListApi } from 'http/UserApi'\r\nimport ErrorDetailModel from './ErrorDetailModel'\r\nimport { getErrorListApi } from 'http/ErrorMessageApi'\r\n\r\nconst stylePrefix = 'home-error'\r\n\r\ninterface ErrorItem {\r\n    id: number, // 错误单项ID\r\n    author: AuthorConfig,\r\n    createTime: string, // 创建时间\r\n    abstract: string, // 摘要30字\r\n}\r\n\r\nexport default function ErrorList() {\r\n    const [loading, setLoading] = useState(false)\r\n    const [errorList, setErrorList] = useState<ErrorItem[]>([])\r\n    const [radioIdentifyID, setRadioIdentifyID] = useState(-1)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [pageNum, setPageNum] = useState(1)\r\n    const [identifyList, setIdentifyList] = useState<IndentifyConfig[]>([])\r\n    const [visible, setVisible] = useState(false)\r\n    const [errorID, setErrorID] = useState<number | null>(null)\r\n\r\n    const getErrorList = async (page: number) => {\r\n        setLoading(true)\r\n        const res = await getErrorListApi({\r\n            identityID: radioIdentifyID,\r\n            page: page\r\n        })\r\n        console.log(res);\r\n        if (res.code === 0) {\r\n            setErrorList(res.data.list)\r\n            setPageNum(res.data.page)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n        setLoading(false)\r\n    }\r\n    const getIdentifyList = async () => {\r\n        const res = await getIdentifyListApi();\r\n        if (res.code === 0) {\r\n            setIdentifyList(res.data)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n    }\r\n    const onChange = (e: RadioChangeEvent) => {\r\n        setRadioIdentifyID(e.target.value)\r\n        setCurrentPage(1)\r\n    }\r\n    const openModal = (id: number) => {\r\n        setErrorID(id)\r\n        setVisible(true)\r\n    }\r\n    useEffect(() => {\r\n        getErrorList(currentPage)\r\n        getIdentifyList()\r\n    }, [currentPage, radioIdentifyID])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            <Radio.Group className={`${stylePrefix}-radio-group`} onChange={onChange} value={radioIdentifyID}>\r\n                <Radio value={-1}>全部</Radio>\r\n                {\r\n                    identifyList.map((identifyItem, index) => {\r\n                        return <Radio\r\n                            key={index}\r\n                            value={identifyItem.id}\r\n                        >\r\n                            {identifyItem.value}\r\n                        </Radio>\r\n                    })\r\n                }\r\n            </Radio.Group>\r\n            {\r\n                loading\r\n                    ? <Loading2 backgroundColor='#fff' />\r\n                    :\r\n                    errorList.map((errorItem, index) => {\r\n                        return <div\r\n                            key={index}\r\n                            className={`${stylePrefix}-errorItem-layout`}\r\n                            onClick={() => openModal(errorItem.id)}\r\n                        >\r\n                            <AuthorShow\r\n                                avatar={errorItem.author.avatar}\r\n                                realname={errorItem.author.realname}\r\n                                createTime={errorItem.createTime}\r\n                            />\r\n                            <p className={`${stylePrefix}-abstract`} >{errorItem.abstract}</p>\r\n                        </div>\r\n                    })\r\n            }\r\n            {\r\n                errorList.length !== 0\r\n                    ? <div className={`${stylePrefix}-btn-layout`}>\r\n                        <Button size='large' onClick={() => setCurrentPage(currentPage - 1)} disabled={currentPage === 1} >Previous</Button>\r\n                        <Button size='large' onClick={() => setCurrentPage(currentPage + 1)} disabled={currentPage === pageNum} >Next</Button>\r\n                    </div>\r\n                    : <p className='empty-tip' >暂无信息</p>\r\n            }\r\n            <ErrorDetailModel\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                errorID={errorID}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport 'styles/pages/home.scss'\r\nimport { Provider } from 'react-redux'\r\nimport store from 'redux/store'\r\nimport HeaderContainer from 'containers/HeaderContainer'\r\nimport Sider from 'components/home/Sider'\r\nimport UserVerify from 'components/home/UserVerify'\r\nimport UserList from 'components/home/UserList'\r\nimport ErrorList from 'components/home/ErrorList'\r\n\r\nconst stylePrefix = 'page-home'\r\n\r\nexport default function Home() {\r\n    const [activeSiderIndex, setActiveSiderIndex] = useState(0)\r\n    const mainPageMap = new Map();\r\n    mainPageMap.set(0, <UserList />)\r\n    mainPageMap.set(1, <UserVerify />)\r\n    mainPageMap.set(2, <ErrorList />)\r\n    return (\r\n        <div className={`${stylePrefix}-layout`}>\r\n            <Provider store={store}>\r\n                <HeaderContainer />\r\n            </Provider>\r\n            <div className={`${stylePrefix}-main`} >\r\n                <Sider activeIndex={activeSiderIndex} setActiveSiderIndex={setActiveSiderIndex} />\r\n                {\r\n                    mainPageMap.get(activeSiderIndex)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { createFromIconfontCN } from '@ant-design/icons';\r\nimport { message } from 'antd';\r\nimport cookies from 'react-cookies'\r\n\r\nexport const IconFont = createFromIconfontCN({\r\n    scriptUrl: 'http://at.alicdn.com/t/font_2103484_f8ge73a2w6v.js',\r\n});\r\n\r\nexport interface httpConfig {\r\n    code: number\r\n    data: any\r\n    message: string\r\n}\r\n\r\nexport const successToast = (msg: string) => {\r\n    message.success(msg);\r\n}\r\n\r\nexport const errorToast = (msg: string) => {\r\n    message.error(msg);\r\n}\r\n\r\nexport const getToken = (): string => {\r\n    return cookies.load('Authorization')\r\n}\r\n\r\nexport const setToken = (token: string) => {\r\n    cookies.save('Authorization', token, {\r\n        maxAge: 60 * 60 * 24 * 7\r\n    })\r\n}\r\n\r\nexport const removeToken = () => {\r\n    cookies.remove('Authorization')\r\n}\r\n\r\nexport const getHeaders = () => {\r\n    const token: string = getToken()\r\n    return {\r\n        'Authorization': token\r\n    }\r\n}\r\n\r\nexport interface AuthorConfig {\r\n    id: number, // 作者ID\r\n    avatar: string, // 作者的头像\r\n    realname: string, // 作者的真实姓名\r\n}\r\n\r\nexport interface IndentifyConfig {\r\n    id: number\r\n    value: string\r\n}\r\n\r\nexport const httpIsSuccess = (code: number) => {\r\n    return code === 0;\r\n}","import axios from 'axios'\r\nimport { backIP, testIP } from 'components/common/config'\r\nimport { httpConfig, getHeaders } from 'components/common/utils'\r\nimport Http from './Servies'\r\n\r\ninterface loginConfig {\r\n    username: string\r\n    password: string\r\n    isAdmin: boolean\r\n}\r\n\r\ninterface getVerifyDetailConfig {\r\n    id: number\r\n}\r\ninterface alterUserConfig {\r\n    userID: number\r\n    username: string\r\n    realname: string\r\n    phoneNumber: string\r\n}\r\ninterface submitUserVerifyResultConfig {\r\n    id: number\r\n    isAgree: boolean\r\n}\r\ninterface resetPasswordConfig {\r\n    userID: number\r\n    password: string\r\n}\r\ninterface alterUserIdentifyConfig {\r\n    userID: number\r\n    identifyID: number\r\n}\r\n\r\n// 登录\r\nexport const loginApi = async (data: loginConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/user/login`,\r\n        data: data\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取所有身份\r\nexport const getIdentifyListApi = async () => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/user/identify`,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取用户验证列表\r\nexport const getUserVerifyListApi = async () => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/user/verify/list`,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取用户验证材料信息\r\nexport const getUserVerifyDetailApi = async (data: getVerifyDetailConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/user/verify`,\r\n        params: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取用户列表信息\r\nexport const getUserListApi = async () => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/admin/user/list`,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 修改用户信息\r\nexport const alterUserApi = async (data: alterUserConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/admin/realname`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 提交用户审核结果\r\nexport const submitUserVerifyResultApi = async (data: submitUserVerifyResultConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/user/verify`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 重置密码\r\nexport const resetPasswordApi = async (data: resetPasswordConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/admin/password`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 修改用户身份\r\nexport const alterUserIdentifyApi = async (data: alterUserIdentifyConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/admin/indentify`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\ninterface ILoginPassword {\r\n    phoneNumber: string;\r\n    password: string;\r\n    verification_code: string;\r\n    platform: number;\r\n}\r\n\r\ninterface IGetBasicUserInfo {\r\n    userID?: number;\r\n}\r\n\r\ninterface IAlterUserIdentify {\r\n    userID: number;\r\n    identifyID: number;\r\n}\r\n\r\ninterface IResetUserPassword {\r\n    userID: number;\r\n    password: string;\r\n}\r\n\r\ninterface IGetDetailUserInfo {\r\n    userID: number;\r\n}\r\n\r\nexport interface IAlterUserInfo {\r\n    name: string ;\r\n    phoneNumber: string ;\r\n    weixin_number: string ;\r\n    lawyer_number: string ;\r\n}\r\n\r\n// 获取图片验证码\r\nexport const get_verify_code_api = async () => {\r\n    return await Http.request(`${backIP}/public/verificationCode/image`, {}, 'GET')\r\n}\r\n\r\n// 管理员手机号密码登录\r\nexport const login_password_api = async (data: ILoginPassword) => {\r\n    return await Http.request(`${backIP}/login/password`, data, 'POST')\r\n}\r\n\r\n// 获取管理员基本信息\r\nexport const get_basic_user_info_api = async (data: IGetBasicUserInfo) => {\r\n    return await Http.request(`${backIP}/user/getBasicInfo`, data, 'GET', getHeaders())\r\n}\r\n\r\n// 获取用户列表\r\nexport const get_user_list_api = async () => {\r\n    return await Http.request(`${testIP}/admin/userList`, {}, 'GET', getHeaders())\r\n}\r\n\r\n// 修改用户身份\r\nexport const alter_user_identify_api = async (data: IAlterUserIdentify) => {\r\n    return await Http.request(`${testIP}/admin/user/identify`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 重置用户密码\r\nexport const reset_user_password_api = async (data: IResetUserPassword) => {\r\n    return await Http.request(`${testIP}/admin/user/password`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 获取用户详细信息\r\nexport const get_user_detail_info_api = async (data: IGetDetailUserInfo) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'GET', getHeaders())\r\n}\r\n\r\n// 修改用户信息\r\nexport const alter_user_info_api = async (data: IAlterUserInfo) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'PUT', getHeaders())\r\n}","export const backIP = 'api'\r\n\r\nexport const testIP = 'https://mock.yonyoucloud.com/mock/16533/api'","import axios from \"axios\";\r\n\r\n// 创建axios默认请求\r\n// axios.defaults.baseURL = \"http://106.14.174.206/api\"; // 后端代码\r\n// 配置超时时间\r\naxios.defaults.timeout = 100000;\r\n// 添加响应拦截器\r\naxios.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninterface BaseHttpResponse {\r\n  code: number;\r\n  data: any;\r\n  message: string;\r\n}\r\n\r\n// 请求的方式\r\ntype IMethod = 'GET' | 'POST' | 'PUT' | 'DELETE'\r\n\r\nclass Http {\r\n  static request(url: string, data: object, method: IMethod, headers?: object): Promise<BaseHttpResponse> {\r\n    if (method === 'GET') {\r\n      return new Promise((resolve, reject) => {\r\n        axios\r\n          .get(url, { data: data, headers: headers })\r\n          .then(res => {\r\n            resolve(res.data);\r\n          })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise((resolve, reject) => {\r\n        axios({\r\n          method: method,\r\n          data: data,\r\n          headers: headers,\r\n          url: url\r\n        }).then(res => {\r\n          resolve(res.data);\r\n        })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Http"],"sourceRoot":""}