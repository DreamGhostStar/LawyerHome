{"version":3,"sources":["components/common/utils.tsx","components/common/config.ts","http/UserApi.tsx","http/Servies.tsx","containers/HeaderContainer.tsx","redux/actions.ts","components/home/Header.tsx","http/Case.tsx","hooks/useThrottle.tsx","components/home/lawyer/CouterStep.tsx","components/home/lawyer/AssistInput.tsx","pages/editCase.tsx"],"names":["successToast","msg","message","success","errorToast","error","getToken","cookies","load","setToken","token","save","maxAge","removeToken","remove","getHeaders","httpIsSuccess","code","backIP","testIP","IconFont","createFromIconfontCN","scriptUrl","get_verify_code_api","a","Http","request","login_password_api","data","get_basic_user_info_api","get_user_list_api","alter_user_identify_api","reset_user_password_api","get_user_detail_info_api","alter_user_info_api","upload_file_api","add_new_user_api","search_user_list_api","axios","defaults","timeout","interceptors","response","use","Promise","reject","url","method","headers","resolve","get","then","res","catch","err","connect","state","user","transform_user","type","USER_DATA","title","history","useHistory","useState","store","getState","avatar","setAvatar","isMouse","setIsMouse","getBasicUser","useCallback","tempUserData","push","useEffect","subscribe","className","onClick","onMouseOver","onMouseOut","console","log","src","alt","style","color","display","get_case_list_api","add_case_api","UseThrottle","func","delay","timer","setTimeout","CouterStep","value","callback","size","min","max","onChange","inputValue","stylePrefix","AssistInput","assistIDList","setAssistIDList","assistValue","setAssistValue","assistOption","setaAssistOption","onSelect","index","item","id","isExist","forEach","assist","parseInt","username","scale","length","placeholder","map","Option","key","assistItem","handleCouterStep","Select","TextArea","Input","EditCase","params","useParams","isAdd","undefined","caseNumber","setCaseNumber","accuser","setAccuser","defendant","setDefendant","StaticCaseTrial","caseTrial","setCaseTrial","StaticCaseType","caseType","setCaseType","caseReason","setCaseReason","detail","setDetail","hostOption","setHostOption","hostValue","setHostValue","hostID","setHostID","hostScale","setHostScale","handleInput","buildInput","e","target","buildSelect","arr","defaultValue","optionItem","onSearch","handleSubmit","infoIsNull","host","assiant","goBack","HeaderContainer","rows"],"mappings":"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","file":"static/js/8.402a1634.chunk.js","sourcesContent":["import { message } from 'antd';\r\nimport cookies from 'react-cookies'\r\n\r\nexport interface httpConfig {\r\n    code: number\r\n    data: any\r\n    message: string\r\n}\r\n\r\nexport const successToast = (msg: string) => {\r\n    message.success(msg);\r\n}\r\n\r\nexport const errorToast = (msg: string) => {\r\n    message.error(msg);\r\n}\r\n\r\nexport const getToken = (): string => {\r\n    return cookies.load('Authorization')\r\n}\r\n\r\nexport const setToken = (token: string) => {\r\n    cookies.save('Authorization', token, {\r\n        maxAge: 60 * 60 * 24 * 7\r\n    })\r\n}\r\n\r\nexport const removeToken = () => {\r\n    cookies.remove('Authorization')\r\n}\r\n\r\nexport const getHeaders = () => {\r\n    const token: string = getToken()\r\n    return {\r\n        'Authorization': token\r\n    }\r\n}\r\n\r\nexport interface AuthorConfig {\r\n    id: number, // 作者ID\r\n    avatar: string, // 作者的头像\r\n    realname: string, // 作者的真实姓名\r\n}\r\n\r\nexport interface IndentifyConfig {\r\n    id: number\r\n    value: string\r\n}\r\n\r\nexport const httpIsSuccess = (code: number) => {\r\n    return code === 0;\r\n}\r\n\r\nexport const isNull = (value: any) => {\r\n    return value === null;\r\n}","import { createFromIconfontCN } from '@ant-design/icons';\r\n\r\nexport const backIP = 'api'\r\n\r\nexport const testIP = 'https://mock.yonyoucloud.com/mock/16533/api'\r\n\r\nexport const IconFont = createFromIconfontCN({\r\n    scriptUrl: 'http://at.alicdn.com/t/font_2274798_m840qtc2j2e.js',\r\n});","import { backIP, testIP } from 'components/common/config'\r\nimport { getHeaders } from 'components/common/utils'\r\nimport Http from './Servies'\r\n\r\ninterface ILoginPassword {\r\n    phoneNumber: string;\r\n    password: string;\r\n    verification_code: string;\r\n    platform: number;\r\n}\r\n\r\ninterface IGetBasicUserInfo {\r\n    userID?: number;\r\n}\r\n\r\ninterface IAlterUserIdentify {\r\n    userID: number;\r\n    identifyID: number;\r\n}\r\n\r\ninterface IResetUserPassword {\r\n    userID: number;\r\n    password: string;\r\n}\r\n\r\ninterface IGetDetailUserInfo {\r\n    userID: number;\r\n}\r\n\r\nexport interface IAlterUserInfo {\r\n    name: string;\r\n    phoneNumber: string;\r\n    weixin_number: string;\r\n    lawyer_number: string;\r\n}\r\n\r\ninterface IAddUser {\r\n    identify: string;\r\n    lawyerNumber: string;\r\n    identifyNumber: string;\r\n    name: string;\r\n    avatar: string;\r\n    qualificationsNumber: string;\r\n    phone: string;\r\n    startTime: string;\r\n}\r\n\r\ninterface ISearchUser {\r\n    value: string;\r\n}\r\n\r\n// 获取图片验证码\r\nexport const get_verify_code_api = async () => {\r\n    return await Http.request(`${backIP}/public/verificationCode/image`, {}, 'GET')\r\n}\r\n\r\n// 管理员手机号密码登录\r\nexport const login_password_api = async (data: ILoginPassword) => {\r\n    return await Http.request(`${backIP}/login/password`, data, 'POST')\r\n}\r\n\r\n// 获取管理员基本信息\r\nexport const get_basic_user_info_api = async (data: IGetBasicUserInfo) => {\r\n    return await Http.request(`${backIP}/user/getBasicInfo`, data, 'GET', getHeaders())\r\n}\r\n\r\n// 获取用户列表\r\nexport const get_user_list_api = async () => {\r\n    return await Http.request(`${testIP}/admin/userList`, {}, 'GET', getHeaders())\r\n}\r\n\r\n// 修改用户身份\r\nexport const alter_user_identify_api = async (data: IAlterUserIdentify) => {\r\n    return await Http.request(`${testIP}/admin/user/identify`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 重置用户密码\r\nexport const reset_user_password_api = async (data: IResetUserPassword) => {\r\n    return await Http.request(`${testIP}/admin/user/password`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 获取用户详细信息\r\nexport const get_user_detail_info_api = async (data: IGetDetailUserInfo) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'GET', getHeaders())\r\n}\r\n\r\n// 修改用户信息\r\nexport const alter_user_info_api = async (data: IAlterUserInfo) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 上传文件\r\nexport const upload_file_api = async (data: FormData) => {\r\n    return await Http.request(`${backIP}/public/upload`, data, 'POST', getHeaders())\r\n}\r\n\r\n// 生成新账号\r\nexport const add_new_user_api = async (data: IAddUser) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'POST', getHeaders())\r\n}\r\n\r\n// 查找数据库用户\r\nexport const search_user_list_api = async (data: ISearchUser) => {\r\n    return await Http.request(`${testIP}/admin/user/tip`, data, 'GET', getHeaders())\r\n}","import axios from \"axios\";\r\n\r\n// 创建axios默认请求\r\n// axios.defaults.baseURL = \"http://106.14.174.206/api\"; // 后端代码\r\n// 配置超时时间\r\naxios.defaults.timeout = 100000;\r\n// 添加响应拦截器\r\naxios.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninterface BaseHttpResponse {\r\n  code: number;\r\n  data: any;\r\n  message: string;\r\n}\r\n\r\n// 请求的方式\r\ntype IMethod = 'GET' | 'POST' | 'PUT' | 'DELETE'\r\n\r\nclass Http {\r\n  static request(url: string, data: object, method: IMethod, headers?: object): Promise<BaseHttpResponse> {\r\n    if (method === 'GET') {\r\n      return new Promise((resolve, reject) => {\r\n        axios\r\n          .get(url, { data: data, headers: headers })\r\n          .then(res => {\r\n            resolve(res.data);\r\n          })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise((resolve, reject) => {\r\n        axios({\r\n          method: method,\r\n          data: data,\r\n          headers: headers,\r\n          url: url\r\n        }).then(res => {\r\n          resolve(res.data);\r\n        })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Http","import { connect } from 'react-redux'\r\nimport { transform_user } from 'redux/actions'\r\nimport Header from 'components/home/Header'\r\nexport default connect(\r\n    state => ({\r\n        user: state\r\n    }),\r\n    {transform_user}\r\n)(Header)","// 包含所有的 action creator\r\nimport {\r\n    USER_DATA,\r\n    REMOVE_USER_DATA\r\n} from './action-types';\r\nimport { UserBasicConfig } from 'components/home/Header';\r\n\r\n// TODO: 需修改\r\n// 从register里传递已登录的用户数据到其余各个组件\r\nexport const transform_user = (user: UserBasicConfig)=>({\r\n    type: USER_DATA,\r\n    data: user\r\n}) \r\n\r\n// 退出登录，删去redux的数据\r\nexport const remove_user = (user: UserBasicConfig)=>({\r\n    type: REMOVE_USER_DATA,\r\n    data: user\r\n}) \r\n\r\n// 异步action\r\n// 如果想返回一个函数，必须应用上异步中间件\r\n// export const incrementAsync = (number) => {\r\n//     return dispatch => {\r\n//         // 异步代码\r\n//         setTimeout(() => {\r\n//             // 一秒之后才去分发一个增加的action\r\n//             dispatch(increment(number))\r\n//         }, 1000)\r\n//     }\r\n// }","import React, { useCallback, useEffect, useState } from 'react'\r\nimport 'styles/home/header.scss'\r\nimport store from 'redux/store'\r\nimport { getToken, removeToken, successToast, errorToast } from 'components/common/utils'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { get_basic_user_info_api } from 'http/UserApi'\r\nimport { IconFont } from 'components/common/config'\r\n\r\nconst stylePrefix = 'home-header'\r\n\r\nexport interface UserBasicConfig {\r\n    avatar: string; // 头像\r\n    name: string; // 真实姓名\r\n    lawyer_number: string;\r\n}\r\n\r\ninterface HeaderConfig {\r\n    transform_user: (user: UserBasicConfig) => {\r\n        type: string;\r\n        data: UserBasicConfig;\r\n    };\r\n    title?: string;\r\n}\r\n\r\nexport default function Header({ transform_user, title }: HeaderConfig) {\r\n    const history = useHistory()\r\n    const [avatar, setAvatar] = useState(store.getState().user?.avatar)\r\n    const [isMouse, setIsMouse] = useState(false)\r\n    const getBasicUser = useCallback(async () => {\r\n        const token: string = getToken()\r\n        if (token && !store.getState().user) {\r\n            const res = await get_basic_user_info_api({});\r\n            const tempUserData: UserBasicConfig = res.data\r\n            setAvatar(tempUserData.avatar)\r\n            transform_user(tempUserData)\r\n        }\r\n\r\n        if (!store.getState().user) {\r\n            errorToast('请先登录')\r\n            history.push('/login')\r\n        }\r\n    }, [history, transform_user])\r\n    const exitLogin = () => {\r\n        removeToken()\r\n        successToast('退出登录成功')\r\n        history.push('/login')\r\n    }\r\n    const gotoHome = () => {\r\n        history.push('/home')\r\n    }\r\n\r\n    useEffect(() => {\r\n        store.subscribe(() => {\r\n            getBasicUser();\r\n        })\r\n        getBasicUser();\r\n    }, [getBasicUser])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`}>\r\n            <p className={`${stylePrefix}-logo`} onClick={gotoHome}>律政云</p>\r\n            {\r\n                title && <p className={`${stylePrefix}-title`}>{title}</p>\r\n            }\r\n            <div\r\n                className={`${stylePrefix}-user-layout`}\r\n                onMouseOver={() => setIsMouse(true)}\r\n                onMouseOut={() => setIsMouse(false)}\r\n            >\r\n                <img onClick={() => console.log(avatar)} src={avatar} alt=\"avatar\" className={`${stylePrefix}-avatar`} />\r\n                <IconFont\r\n                    type='icon-xiabiao'\r\n                    className={`${stylePrefix}-icon`}\r\n                    style={{\r\n                        color: isMouse ? '#000' : '#fff'\r\n                    }}\r\n                />\r\n                <div\r\n                    className={`${stylePrefix}-user-operation-layout`}\r\n                    style={{\r\n                        display: isMouse ? 'block' : 'none'\r\n                    }}\r\n                >\r\n                    <p\r\n                        className={`${stylePrefix}-user-operation-word`}\r\n                        onClick={exitLogin}\r\n                    >\r\n                        退出登录\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { testIP } from \"components/common/config\"\r\nimport { getHeaders } from \"components/common/utils\"\r\nimport Http from \"./Servies\"\r\n\r\ninterface IScale {\r\n    id: number;\r\n    scale: number;\r\n}\r\n\r\ninterface IAddCase {\r\n    caseNumber: string;\r\n    accuser: string;\r\n    defendant: string;\r\n    caseTrial: string;\r\n    caseType: string;\r\n    caseReason: string;\r\n    detail: string;\r\n    host: IScale;\r\n    assiant: IScale[];\r\n}\r\n\r\n// 生成新账号\r\nexport const get_case_list_api = async () => {\r\n    return await Http.request(`${testIP}/admin/case/list`, {}, 'GET', getHeaders())\r\n}\r\n\r\n// 新建案件\r\nexport const add_case_api = async (data: IAddCase) => {\r\n    return await Http.request(`${testIP}/admin/case`, data, 'POST', getHeaders())\r\n}","import { useCallback } from \"react\"\r\n\r\nexport default function UseThrottle(\r\n    func: any,\r\n    delay: number\r\n) {\r\n    let timer: NodeJS.Timeout | null = null\r\n    return useCallback((...args) => {\r\n        if (!timer) {\r\n            timer = setTimeout(() => {\r\n                timer = null\r\n            }, delay)\r\n            func(...args)\r\n        }\r\n    }, [timer])\r\n}\r\n","import { InputNumber } from 'antd'\r\nimport React from 'react'\r\n\r\ninterface CouterStepConfig {\r\n    value: number;\r\n    callback: (value: number) => void;\r\n}\r\n\r\nexport default function CouterStep({ value, callback }: CouterStepConfig) {\r\n    const onChange = (inputValue: number | string | undefined) => {\r\n        callback(inputValue as number)\r\n    }\r\n    return (\r\n        <InputNumber size=\"small\" min={1} max={100} value={value} onChange={onChange} />\r\n    )\r\n}\r\n","import { AutoComplete, Button } from 'antd'\r\nimport { errorToast, httpIsSuccess } from 'components/common/utils'\r\nimport UseThrottle from 'hooks/useThrottle'\r\nimport { search_user_list_api } from 'http/UserApi'\r\nimport { assiantConfig } from 'pages/editCase'\r\nimport React, { useState } from 'react'\r\nimport 'styles/lawyer/assistInput.scss'\r\nimport CouterStep from './CouterStep'\r\nconst stylePrefix = 'lawyer-assistInput'\r\ninterface OptionConfig {\r\n    id: string;\r\n    value: string;\r\n}\r\ninterface AssistInputConfig {\r\n    assistIDList: assiantConfig[];\r\n    setAssistIDList: React.Dispatch<React.SetStateAction<assiantConfig[]>>;\r\n}\r\n\r\nexport default function AssistInput({ assistIDList, setAssistIDList }: AssistInputConfig) {\r\n    const [assistValue, setAssistValue] = useState('')\r\n    const [assistOption, setaAssistOption] = useState<OptionConfig[]>([]) // 协办人选项\r\n    // 当输入的值发生改变，则向后端发起请求符合输入条件的用户列表\r\n    const onSearch = async (value: string) => {\r\n        if (!value) return\r\n        const res = await search_user_list_api({ value });\r\n        if (httpIsSuccess(res.code)) {\r\n            setaAssistOption(res.data)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n    };\r\n    // 选中列表项，添加协办人用户\r\n    const onSelect = (data: string) => {\r\n        for (let index = 0; index < assistOption.length; index++) {\r\n            const item = assistOption[index];\r\n            if (item.id === data) {\r\n                // 说明列表中肯定会有该用户ID，则不予添加并提示当前正在使用的用户\r\n                let isExist = false; // 是否存在\r\n                assistIDList.forEach(assist => {\r\n                    if (assist.id === parseInt(item.id)) {\r\n                        isExist = true\r\n                        return\r\n                    }\r\n                })\r\n                if (isExist) {\r\n                    errorToast('该用户已添加，请检查')\r\n                } else {\r\n                    setAssistIDList([...assistIDList, {\r\n                        id: parseInt(item.id),\r\n                        username: item.value,\r\n                        scale: 0\r\n                    }])\r\n                    setAssistValue('')\r\n                }\r\n                return\r\n            }\r\n        }\r\n    };\r\n    // 处理表中数值变化\r\n    const handleCouterStep = (inputValue: number, assist: assiantConfig) => {\r\n        const res = assistIDList.map(assistItem => {\r\n            if (assist.id === assistItem.id) {\r\n                return {\r\n                    ...assistItem,\r\n                    scale: inputValue\r\n                }\r\n            } else {\r\n                return assistItem\r\n            }\r\n        })\r\n        setAssistIDList(res)\r\n    }\r\n    // 节流模块\r\n    UseThrottle(onSearch, 0.5 * 1000)(assistValue)\r\n\r\n    return (\r\n        <>\r\n            <h3 className={`${stylePrefix}-title`}>协办人</h3>\r\n            <div className={`${stylePrefix}-input-layout`}>\r\n                <AutoComplete\r\n                    value={assistValue}\r\n                    className={`${stylePrefix}-autoComplete`}\r\n                    onSelect={onSelect}\r\n                    onChange={(value) => setAssistValue(value)}\r\n                    placeholder=\"协办人\"\r\n                >\r\n                    {assistOption.map((item, index) => (\r\n                        <AutoComplete.Option key={index} value={item.id}>\r\n                            {item.value}\r\n                        </AutoComplete.Option>\r\n                    ))}\r\n                </AutoComplete>\r\n                <Button>新增</Button>\r\n            </div>\r\n            <div className={`${stylePrefix}-user-show-layout`} >\r\n                {\r\n                    assistIDList.map((assist, index) => {\r\n                        return <div\r\n                            key={index}\r\n                            className={`${stylePrefix}-user-show`}\r\n                        >\r\n                            <p className={`${stylePrefix}-value`} >{assist.username}</p>\r\n                            <div className={`${stylePrefix}-value`}>\r\n                                <CouterStep\r\n                                    value={assist.scale}\r\n                                    callback={(inputValue) => handleCouterStep(inputValue, assist)}\r\n                                />\r\n                                &nbsp; %\r\n                            </div>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { AutoComplete, Button, Input, Select } from 'antd'\r\nimport HeaderContainer from 'containers/HeaderContainer'\r\nimport React, { useState } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport store from 'redux/store'\r\nimport 'styles/pages/editCase.scss'\r\nimport StaticCaseTrial from 'static/caseTrial.json'\r\nimport StaticCaseType from 'static/caseType.json'\r\nimport { search_user_list_api } from 'http/UserApi'\r\nimport { errorToast, httpIsSuccess, successToast } from 'components/common/utils'\r\nimport AssistInput from 'components/home/lawyer/AssistInput'\r\nimport CouterStep from 'components/home/lawyer/CouterStep'\r\nimport { add_case_api } from 'http/Case'\r\nimport UseThrottle from 'hooks/useThrottle'\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst stylePrefix = 'page-editCase'\r\ninterface IParams {\r\n    id: string\r\n}\r\ninterface OptionConfig {\r\n    id: string;\r\n    value: string;\r\n}\r\nexport interface assiantConfig {\r\n    id: number;\r\n    username: string;\r\n    scale: number;\r\n}\r\n\r\nexport default function EditCase() {\r\n    const params = useParams<IParams>()\r\n    const history = useHistory()\r\n    const isAdd = params.id === undefined\r\n    const [caseNumber, setCaseNumber] = useState('') // 案件号\r\n    const [accuser, setAccuser] = useState('') // 原告\r\n    const [defendant, setDefendant] = useState('') // 被告\r\n    const [caseTrial, setCaseTrial] = useState(StaticCaseTrial[0].id) // 审级\r\n    const [caseType, setCaseType] = useState(StaticCaseType[0].id) // 类型\r\n    const [caseReason, setCaseReason] = useState('') // 案由\r\n    const [detail, setDetail] = useState('') // 详情\r\n    const [hostOption, setHostOption] = useState<OptionConfig[]>([]) // 主办人选项\r\n    const [hostValue, setHostValue] = useState('') // 主办人输入框值\r\n    const [hostID, setHostID] = useState<number | null>(null) // 主办人ID\r\n    const [hostScale, setHostScale] = useState(0) // 主办人比例\r\n    const [assistIDList, setAssistIDList] = useState<assiantConfig[]>([]) // 协办人选中的ID列表\r\n    // 负责更新值\r\n    const handleInput = (\r\n        func: React.Dispatch<React.SetStateAction<any>>,\r\n        value: string\r\n    ) => {\r\n        func(value)\r\n    }\r\n\r\n    // 构建输入框\r\n    const buildInput = (\r\n        title: string,\r\n        placeholder: string,\r\n        func: React.Dispatch<React.SetStateAction<any>>\r\n    ) => {\r\n        return <div className={`${stylePrefix}-input-layout`}>\r\n            <p>\r\n                <span className={`${stylePrefix}-title`} >{title}</span>\r\n                <span className={`${stylePrefix}-symbol`} >：</span>\r\n            </p>\r\n            <Input\r\n                onChange={(e) => handleInput(func, e.target.value)}\r\n                className={`${stylePrefix}-input`}\r\n                placeholder={placeholder}\r\n            />\r\n        </div>\r\n    }\r\n\r\n    // 构建多行文本框\r\n    const buildTextArea = (\r\n        title: string,\r\n        placeholder: string,\r\n        func: React.Dispatch<React.SetStateAction<any>>\r\n    ) => {\r\n        return <div className={`${stylePrefix}-input-layout`}>\r\n            <p>\r\n                <span className={`${stylePrefix}-title`} >{title}</span>\r\n                <span className={`${stylePrefix}-symbol`} >：</span>\r\n            </p>\r\n            <TextArea\r\n                className={`${stylePrefix}-input`}\r\n                rows={4}\r\n                placeholder={placeholder}\r\n                onChange={(e) => handleInput(func, e.target.value)}\r\n            />\r\n        </div>\r\n    }\r\n\r\n    // 构建选择框\r\n    const buildSelect = (\r\n        title: string,\r\n        func: React.Dispatch<React.SetStateAction<any>>,\r\n        arr: OptionConfig[],\r\n        value: string\r\n    ) => {\r\n        return <div className={`${stylePrefix}-input-layout`}>\r\n            <p>\r\n                <span className={`${stylePrefix}-title`} >{title}</span>\r\n                <span className={`${stylePrefix}-symbol`} >：</span>\r\n            </p>\r\n            <Select\r\n                defaultValue={value}\r\n                className={`${stylePrefix}-select`}\r\n                onChange={(value) => func(value)}\r\n            >\r\n                {\r\n                    arr.map((optionItem, index) => {\r\n                        return <Option key={index} value={optionItem.id}>{optionItem.value}</Option>\r\n                    })\r\n                }\r\n            </Select>\r\n        </div>\r\n    }\r\n    const onSearch = async (...args: string[]) => {\r\n        const value = args[0]\r\n        if (!value) return\r\n        const res = await search_user_list_api({ value });\r\n        if (httpIsSuccess(res.code)) {\r\n            setHostOption(res.data)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n    };\r\n    const onSelect = (data: string) => {\r\n        for (let index = 0; index < hostOption.length; index++) {\r\n            const item = hostOption[index];\r\n            if (item.id === data) {\r\n                setHostValue(item.value)\r\n                setHostID(parseInt(data))\r\n                return\r\n            }\r\n        }\r\n    };\r\n    const handleSubmit = async () => {\r\n        console.log(hostValue)\r\n        let infoIsNull = false;\r\n        [caseNumber, caseReason, caseTrial, caseType, accuser, defendant, hostID, hostScale].map(item => {\r\n            infoIsNull = infoIsNull ? true : item === null\r\n        })\r\n        if (infoIsNull) {\r\n            errorToast('信息未填写完，请检查后重试')\r\n            return\r\n        }\r\n        const res = await add_case_api({\r\n            caseNumber,\r\n            caseReason,\r\n            caseTrial,\r\n            caseType,\r\n            accuser,\r\n            defendant,\r\n            detail,\r\n            host: {\r\n                id: (hostID as number),\r\n                scale: hostScale\r\n            },\r\n            assiant: assistIDList.map(assist => {\r\n                return {\r\n                    id: assist.id,\r\n                    scale: assist.scale\r\n                }\r\n            })\r\n        })\r\n        if (httpIsSuccess(res.code)) {\r\n            successToast('新建案件成功')\r\n            history.goBack()\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n    }\r\n    UseThrottle(onSearch, 0.5 * 1000)(hostValue)\r\n    return (\r\n        <div className={`${stylePrefix}-layout`}>\r\n            <Provider store={store} >\r\n                <HeaderContainer title={isAdd ? '新建案件' : '修改案件'} />\r\n            </Provider>\r\n            <div className={`${stylePrefix}-main`}>\r\n                {buildInput('案件号', '案件号', setCaseNumber)}\r\n                {buildInput('原告', '原告', setAccuser)}\r\n                {buildInput('被告', '被告', setDefendant)}\r\n                {buildSelect('类型', setCaseType, StaticCaseType, caseType)}\r\n                {buildSelect('审级', setCaseTrial, StaticCaseTrial, caseTrial)}\r\n                {buildInput('案由', '案由', setCaseReason)}\r\n                {buildTextArea('详情', '详情', setDetail)}\r\n                <div className={`${stylePrefix}-input-layout`}>\r\n                    <p>\r\n                        <span className={`${stylePrefix}-title`} >主办人</span>\r\n                        <span className={`${stylePrefix}-symbol`} >：</span>\r\n                    </p>\r\n                    <AutoComplete\r\n                        value={hostValue}\r\n                        className={`${stylePrefix}-autoComplete`}\r\n                        onSelect={onSelect}\r\n                        onChange={(value) => setHostValue(value)}\r\n                        placeholder=\"主办人\"\r\n                    >\r\n                        {hostOption.map((item, index) => (\r\n                            <AutoComplete.Option key={index} value={item.id}>\r\n                                {item.value}\r\n                            </AutoComplete.Option>\r\n                        ))}\r\n                    </AutoComplete>\r\n                </div>\r\n                <div className={`${stylePrefix}-input-layout`}>\r\n                    <p>\r\n                        <span className={`${stylePrefix}-title`} >主办人比例</span>\r\n                        <span className={`${stylePrefix}-symbol`} >：</span>\r\n                    </p>\r\n                    <div className={`${stylePrefix}-couter-step`}>\r\n                        <CouterStep\r\n                            value={hostScale}\r\n                            callback={(inputValue) => setHostScale(inputValue)}\r\n                        />\r\n                        &nbsp; %\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={`${stylePrefix}-main`}>\r\n                <AssistInput\r\n                    assistIDList={assistIDList}\r\n                    setAssistIDList={setAssistIDList}\r\n                />\r\n            </div>\r\n            <div className={`${stylePrefix}-submit-layout`}>\r\n                <Button\r\n                    type='primary'\r\n                    onClick={handleSubmit}\r\n                >提交</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}