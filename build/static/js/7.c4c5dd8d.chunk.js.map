{"version":3,"sources":["containers/HeaderContainer.tsx","redux/actions.ts","components/home/Header.tsx","http/Salary.tsx","components/salary/SalaryList.tsx","components/salary/UserBasicShow.tsx","pages/salary.tsx","components/common/utils.tsx","http/UserApi.tsx","components/common/config.ts","http/Servies.tsx"],"names":["connect","state","user","transform_user","type","USER_DATA","data","history","useHistory","useState","store","getState","avatar","setAvatar","isMouse","setIsMouse","getBasicUser","a","getToken","get_basic_user_info_api","res","tempUserData","console","log","errorToast","push","useEffect","subscribe","className","onClick","onMouseOver","onMouseOut","src","alt","style","color","display","removeToken","successToast","get_user_info_in_salary_api","Http","request","testIP","getHeaders","get_salary_list_api","stylePrefix","SalaryList","userID","salaryList","setSalaryList","getSalaryList","httpIsSuccess","code","message","map","salary","index","key","year","year_salary","case_list","caseItem","case_name","identity","ratio","UserBasicShow","setUser","loading","setLoading","init","buildOtherInfoItem","value","Loading2","name","salaryNum","phoneNumber","weixin_number","lawyer_number","Salary","params","useParams","HeaderContainer","parseInt","id","IconFont","createFromIconfontCN","scriptUrl","msg","success","error","cookies","load","setToken","token","save","maxAge","remove","getIdentifyListApi","axios","method","url","headers","getUserVerifyListApi","getUserVerifyDetailApi","submitUserVerifyResultApi","get_verify_code_api","backIP","login_password_api","get_user_list_api","alter_user_identify_api","reset_user_password_api","get_user_detail_info_api","alter_user_info_api","defaults","timeout","interceptors","response","use","Promise","reject","resolve","get","then","catch","err"],"mappings":"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","file":"static/js/7.c4c5dd8d.chunk.js","sourcesContent":["import { connect } from 'react-redux'\r\nimport { transform_user } from 'redux/actions'\r\nimport Header from 'components/home/Header'\r\nexport default connect(\r\n    state => ({\r\n        user: state\r\n    }),\r\n    {transform_user}\r\n)(Header)","// 包含所有的 action creator\r\nimport {\r\n    USER_DATA,\r\n    REMOVE_USER_DATA\r\n} from './action-types';\r\nimport { UserBasicConfig } from 'components/home/Header';\r\n\r\n// TODO: 需修改\r\n// 从register里传递已登录的用户数据到其余各个组件\r\nexport const transform_user = (user: UserBasicConfig)=>({\r\n    type: USER_DATA,\r\n    data: user\r\n}) \r\n\r\n// 退出登录，删去redux的数据\r\nexport const remove_user = (user: UserBasicConfig)=>({\r\n    type: REMOVE_USER_DATA,\r\n    data: user\r\n}) \r\n\r\n// 异步action\r\n// 如果想返回一个函数，必须应用上异步中间件\r\n// export const incrementAsync = (number) => {\r\n//     return dispatch => {\r\n//         // 异步代码\r\n//         setTimeout(() => {\r\n//             // 一秒之后才去分发一个增加的action\r\n//             dispatch(increment(number))\r\n//         }, 1000)\r\n//     }\r\n// }","import React, { useEffect, useState } from 'react'\r\nimport 'styles/home/header.scss'\r\nimport store from 'redux/store'\r\nimport { getToken, IconFont, removeToken, successToast, errorToast } from 'components/common/utils'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { get_basic_user_info_api } from 'http/UserApi'\r\n\r\nconst stylePrefix = 'home-header'\r\n\r\nexport interface UserBasicConfig {\r\n    avatar: string; // 头像\r\n    name: string; // 真实姓名\r\n    lawyer_number: string;\r\n}\r\n\r\ninterface HeaderConfig {\r\n    transform_user: (user: UserBasicConfig) => {\r\n        type: string;\r\n        data: UserBasicConfig;\r\n    }\r\n}\r\n\r\nexport default function Header({ transform_user }: HeaderConfig) {\r\n    const history = useHistory()\r\n    const [avatar, setAvatar] = useState(store.getState().user?.avatar)\r\n    const [isMouse, setIsMouse] = useState(false)\r\n    const getBasicUser = async () => {\r\n        const token: string = getToken()\r\n        if (token && !store.getState().user) {\r\n            const res = await get_basic_user_info_api({});\r\n            const tempUserData: UserBasicConfig = res.data\r\n            console.log(tempUserData)\r\n            setAvatar(tempUserData.avatar)\r\n            transform_user(tempUserData)\r\n        }\r\n\r\n        if (!store.getState().user) {\r\n            errorToast('请先登录')\r\n            history.push('/login')\r\n        }\r\n    }\r\n    const exitLogin = () => {\r\n        removeToken()\r\n        successToast('退出登录成功')\r\n        history.push('/login')\r\n    }\r\n    const gotoHome = () => {\r\n        history.push('/home')\r\n    }\r\n\r\n    useEffect(() => {\r\n        store.subscribe(()=>{\r\n            getBasicUser();\r\n        })\r\n        getBasicUser();\r\n    }, [])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`}>\r\n            <p className={`${stylePrefix}-title`} onClick={gotoHome}>律政云</p>\r\n            <div\r\n                className={`${stylePrefix}-user-layout`}\r\n                onMouseOver={() => setIsMouse(true)}\r\n                onMouseOut={() => setIsMouse(false)}\r\n            >\r\n                <img onClick={() => console.log(avatar)} src={avatar} alt=\"avatar\" className={`${stylePrefix}-avatar`} />\r\n                <IconFont\r\n                    type='icon-xiabiao'\r\n                    className={`${stylePrefix}-icon`}\r\n                    style={{\r\n                        color: isMouse ? '#000' : '#fff'\r\n                    }}\r\n                />\r\n                <div\r\n                    className={`${stylePrefix}-user-operation-layout`}\r\n                    style={{\r\n                        display: isMouse ? 'block' : 'none'\r\n                    }}\r\n                >\r\n                    <p\r\n                        className={`${stylePrefix}-user-operation-word`}\r\n                        onClick={exitLogin}\r\n                    >\r\n                        退出登录\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { testIP } from \"components/common/config\"\r\nimport { getHeaders } from \"components/common/utils\"\r\nimport Http from \"./Servies\"\r\n\r\ninterface IGetUserInfoInSalary {\r\n    userID: number;\r\n}\r\n\r\n// 收入页面获取用户信息\r\nexport const get_user_info_in_salary_api = async (data: IGetUserInfoInSalary) => {\r\n    return await Http.request(`${testIP}/admin/salary/user`, data, 'GET', getHeaders())\r\n}\r\n\r\n// 获取收入列表\r\nexport const get_salary_list_api = async (data: IGetUserInfoInSalary) => {\r\n    return await Http.request(`${testIP}/admin/salary/list`, data, 'GET', getHeaders())\r\n}","import { errorToast, httpIsSuccess } from 'components/common/utils'\r\nimport { get_salary_list_api } from 'http/Salary'\r\nimport React, { useEffect, useState } from 'react'\r\nimport 'styles/salary/salaryList.scss'\r\nconst stylePrefix = 'salary-salaryList'\r\n\r\ninterface SalaryListConfig {\r\n    userID: number;\r\n}\r\n\r\ninterface CaseItem {\r\n    case_name: string, //案件名称\r\n    identity: string,//主办人还是协办人\r\n    generalSalary: number,//总律师费\r\n    salary: number, //该案件分得的律师费\r\n    ratio: number,//该用户占该案件的金额比例\r\n}\r\n\r\ninterface YearSalaryItem {\r\n    year: number,//年份\r\n    year_salary: number,//该年总收入\r\n    case_list: CaseItem[]\r\n}\r\n\r\nexport default function SalaryList({ userID }: SalaryListConfig) {\r\n    const [salaryList, setSalaryList] = useState<YearSalaryItem[]>([])\r\n    const getSalaryList = async () => {\r\n        const res = await get_salary_list_api({ userID })\r\n        if (httpIsSuccess(res.code)) {\r\n            setSalaryList(res.data)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getSalaryList()\r\n    }, [userID])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            {\r\n                salaryList.map((salary, index) => {\r\n                    return <div\r\n                        key={index}\r\n                        className={`${stylePrefix}-salary-item-layout`}\r\n                    >\r\n                        <p className={`${stylePrefix}-year`}>年份：{salary.year}</p>\r\n                        <p className={`${stylePrefix}-year`}>年度总收入：{salary.year_salary}</p>\r\n                        {\r\n                            salary.case_list.map((caseItem, key) => {\r\n                                return <div\r\n                                    key={key}\r\n                                    className={`${stylePrefix}-case-item`}\r\n                                >\r\n                                    <span>{caseItem.case_name}</span>\r\n                                    <span>{caseItem.identity}</span>\r\n                                    <span>{caseItem.salary}</span>\r\n                                    <span>{caseItem.ratio}</span>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import Loading2 from 'components/common/Loading2';\r\nimport { errorToast, httpIsSuccess } from 'components/common/utils';\r\nimport { UserDetailConfig } from 'components/home/AlterUserInfoModal';\r\nimport { get_user_info_in_salary_api } from 'http/Salary';\r\nimport React, { useEffect, useState } from 'react'\r\nimport 'styles/salary/userBasicShow.scss'\r\n\r\nconst stylePrefix = 'salary-userBasicShow'\r\n\r\ninterface UserBasicShowConfig {\r\n    userID: number;\r\n}\r\n\r\ninterface UserDetailInfoConfig extends UserDetailConfig {\r\n    salaryNum?: string;\r\n    avatar?: string;\r\n}\r\n\r\nexport default function UserBasicShow({ userID }: UserBasicShowConfig) {\r\n    const [user, setUser] = useState<UserDetailInfoConfig>({})\r\n    const [loading, setLoading] = useState(false)\r\n    // 初始化用户信息\r\n    const init = async () => {\r\n        setLoading(true)\r\n        const res = await get_user_info_in_salary_api({ userID })\r\n        if (httpIsSuccess(res.code)) {\r\n            setUser(res.data);\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n        setLoading(false)\r\n    }\r\n    useEffect(() => {\r\n        init()\r\n    }, [userID])\r\n    const buildOtherInfoItem = (key: string, value: string) => {\r\n        return <p>\r\n            <span className={`${stylePrefix}-title`} >{key}：</span>\r\n            <span className={`${stylePrefix}-value`}>{value}</span>\r\n        </p>\r\n    }\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            {\r\n                !loading\r\n                    ? <div className={`${stylePrefix}-main`} >\r\n                        <div className={`${stylePrefix}-name-avatar-layout`} >\r\n                            <img src={user.avatar} className={`${stylePrefix}-avatar`} alt=\"\" />\r\n                            <p className={`${stylePrefix}-name`} >{user.name}</p>\r\n                        </div>\r\n                        <div className={`${stylePrefix}-other-info`} >\r\n                            {buildOtherInfoItem('收入总额', `${user.salaryNum || '0'}元`)}\r\n                            {buildOtherInfoItem('手机号', user.phoneNumber || '无')}\r\n                            {buildOtherInfoItem('微信号', user.weixin_number || '无')}\r\n                            {buildOtherInfoItem('律师证号', user.lawyer_number || '无')}\r\n                        </div>\r\n                    </div>\r\n                    : <Loading2 />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import SalaryList from 'components/salary/SalaryList'\r\nimport UserBasicShow from 'components/salary/UserBasicShow'\r\nimport HeaderContainer from 'containers/HeaderContainer'\r\nimport React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport store from 'redux/store'\r\nimport 'styles/pages/salary.scss'\r\nconst stylePrefix = 'page-salary'\r\n\r\ninterface salaryParams {\r\n    id: string;\r\n}\r\n\r\nexport default function Salary() {\r\n    const params = useParams<salaryParams>()\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            <Provider store={store}>\r\n                <HeaderContainer />\r\n            </Provider>\r\n            <div className={`${stylePrefix}-main`} >\r\n                <UserBasicShow userID={parseInt(params.id)} />\r\n                <SalaryList userID={parseInt(params.id)}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { createFromIconfontCN } from '@ant-design/icons';\r\nimport { message } from 'antd';\r\nimport cookies from 'react-cookies'\r\n\r\nexport const IconFont = createFromIconfontCN({\r\n    scriptUrl: 'http://at.alicdn.com/t/font_2103484_f8ge73a2w6v.js',\r\n});\r\n\r\nexport interface httpConfig {\r\n    code: number\r\n    data: any\r\n    message: string\r\n}\r\n\r\nexport const successToast = (msg: string) => {\r\n    message.success(msg);\r\n}\r\n\r\nexport const errorToast = (msg: string) => {\r\n    message.error(msg);\r\n}\r\n\r\nexport const getToken = (): string => {\r\n    return cookies.load('Authorization')\r\n}\r\n\r\nexport const setToken = (token: string) => {\r\n    cookies.save('Authorization', token, {\r\n        maxAge: 60 * 60 * 24 * 7\r\n    })\r\n}\r\n\r\nexport const removeToken = () => {\r\n    cookies.remove('Authorization')\r\n}\r\n\r\nexport const getHeaders = () => {\r\n    const token: string = getToken()\r\n    return {\r\n        'Authorization': token\r\n    }\r\n}\r\n\r\nexport interface AuthorConfig {\r\n    id: number, // 作者ID\r\n    avatar: string, // 作者的头像\r\n    realname: string, // 作者的真实姓名\r\n}\r\n\r\nexport interface IndentifyConfig {\r\n    id: number\r\n    value: string\r\n}\r\n\r\nexport const httpIsSuccess = (code: number) => {\r\n    return code === 0;\r\n}","import axios from 'axios'\r\nimport { backIP, testIP } from 'components/common/config'\r\nimport { httpConfig, getHeaders } from 'components/common/utils'\r\nimport Http from './Servies'\r\n\r\ninterface loginConfig {\r\n    username: string\r\n    password: string\r\n    isAdmin: boolean\r\n}\r\n\r\ninterface getVerifyDetailConfig {\r\n    id: number\r\n}\r\ninterface alterUserConfig {\r\n    userID: number\r\n    username: string\r\n    realname: string\r\n    phoneNumber: string\r\n}\r\ninterface submitUserVerifyResultConfig {\r\n    id: number\r\n    isAgree: boolean\r\n}\r\ninterface resetPasswordConfig {\r\n    userID: number\r\n    password: string\r\n}\r\ninterface alterUserIdentifyConfig {\r\n    userID: number\r\n    identifyID: number\r\n}\r\n\r\n// 登录\r\nexport const loginApi = async (data: loginConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/user/login`,\r\n        data: data\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取所有身份\r\nexport const getIdentifyListApi = async () => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/user/identify`,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取用户验证列表\r\nexport const getUserVerifyListApi = async () => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/user/verify/list`,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取用户验证材料信息\r\nexport const getUserVerifyDetailApi = async (data: getVerifyDetailConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/user/verify`,\r\n        params: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取用户列表信息\r\nexport const getUserListApi = async () => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/admin/user/list`,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 修改用户信息\r\nexport const alterUserApi = async (data: alterUserConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/admin/realname`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 提交用户审核结果\r\nexport const submitUserVerifyResultApi = async (data: submitUserVerifyResultConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/user/verify`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 重置密码\r\nexport const resetPasswordApi = async (data: resetPasswordConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/admin/password`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 修改用户身份\r\nexport const alterUserIdentifyApi = async (data: alterUserIdentifyConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/admin/indentify`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\ninterface ILoginPassword {\r\n    phoneNumber: string;\r\n    password: string;\r\n    verification_code: string;\r\n    platform: number;\r\n}\r\n\r\ninterface IGetBasicUserInfo {\r\n    userID?: number;\r\n}\r\n\r\ninterface IAlterUserIdentify {\r\n    userID: number;\r\n    identifyID: number;\r\n}\r\n\r\ninterface IResetUserPassword {\r\n    userID: number;\r\n    password: string;\r\n}\r\n\r\ninterface IGetDetailUserInfo {\r\n    userID: number;\r\n}\r\n\r\nexport interface IAlterUserInfo {\r\n    name: string ;\r\n    phoneNumber: string ;\r\n    weixin_number: string ;\r\n    lawyer_number: string ;\r\n}\r\n\r\n// 获取图片验证码\r\nexport const get_verify_code_api = async () => {\r\n    return await Http.request(`${backIP}/public/verificationCode/image`, {}, 'GET')\r\n}\r\n\r\n// 管理员手机号密码登录\r\nexport const login_password_api = async (data: ILoginPassword) => {\r\n    return await Http.request(`${backIP}/login/password`, data, 'POST')\r\n}\r\n\r\n// 获取管理员基本信息\r\nexport const get_basic_user_info_api = async (data: IGetBasicUserInfo) => {\r\n    return await Http.request(`${backIP}/user/getBasicInfo`, data, 'GET', getHeaders())\r\n}\r\n\r\n// 获取用户列表\r\nexport const get_user_list_api = async () => {\r\n    return await Http.request(`${testIP}/admin/userList`, {}, 'GET', getHeaders())\r\n}\r\n\r\n// 修改用户身份\r\nexport const alter_user_identify_api = async (data: IAlterUserIdentify) => {\r\n    return await Http.request(`${testIP}/admin/user/identify`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 重置用户密码\r\nexport const reset_user_password_api = async (data: IResetUserPassword) => {\r\n    return await Http.request(`${testIP}/admin/user/password`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 获取用户详细信息\r\nexport const get_user_detail_info_api = async (data: IGetDetailUserInfo) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'GET', getHeaders())\r\n}\r\n\r\n// 修改用户信息\r\nexport const alter_user_info_api = async (data: IAlterUserInfo) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'PUT', getHeaders())\r\n}","export const backIP = 'api'\r\n\r\nexport const testIP = 'https://mock.yonyoucloud.com/mock/16533/api'","import axios from \"axios\";\r\n\r\n// 创建axios默认请求\r\n// axios.defaults.baseURL = \"http://106.14.174.206/api\"; // 后端代码\r\n// 配置超时时间\r\naxios.defaults.timeout = 100000;\r\n// 添加响应拦截器\r\naxios.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninterface BaseHttpResponse {\r\n  code: number;\r\n  data: any;\r\n  message: string;\r\n}\r\n\r\n// 请求的方式\r\ntype IMethod = 'GET' | 'POST' | 'PUT' | 'DELETE'\r\n\r\nclass Http {\r\n  static request(url: string, data: object, method: IMethod, headers?: object): Promise<BaseHttpResponse> {\r\n    if (method === 'GET') {\r\n      return new Promise((resolve, reject) => {\r\n        axios\r\n          .get(url, { data: data, headers: headers })\r\n          .then(res => {\r\n            resolve(res.data);\r\n          })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise((resolve, reject) => {\r\n        axios({\r\n          method: method,\r\n          data: data,\r\n          headers: headers,\r\n          url: url\r\n        }).then(res => {\r\n          resolve(res.data);\r\n        })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Http"],"sourceRoot":""}