{"version":3,"sources":["components/common/utils.tsx","components/common/config.ts","http/UserApi.tsx","http/Servies.tsx","containers/HeaderContainer.tsx","redux/actions.ts","components/home/Header.tsx","http/Case.tsx","components/home/Sider.tsx","components/home/user/AlterUserInfoModal.tsx","components/home/user/AddUserInfoModel.tsx","components/home/user/UserList.tsx","components/common/Tag.tsx","components/home/lawyer/CaseList.tsx","pages/home.tsx"],"names":["successToast","msg","message","success","errorToast","error","getToken","cookies","load","setToken","token","save","maxAge","removeToken","remove","getHeaders","httpIsSuccess","code","formatTime","date","year","getFullYear","month","getMonth","day","getDay","hour","getHours","minute","getMinutes","seconds","getSeconds","backIP","testIP","IconFont","createFromIconfontCN","scriptUrl","get_verify_code_api","a","Http","request","login_password_api","data","get_basic_user_info_api","get_user_list_api","alter_user_identify_api","reset_user_password_api","get_user_detail_info_api","alter_user_info_api","upload_file_api","add_new_user_api","search_user_list_api","axios","defaults","timeout","interceptors","response","use","Promise","reject","url","method","headers","resolve","get","params","then","res","catch","err","connect","state","user","transform_user","type","USER_DATA","title","history","useHistory","useState","store","getState","avatar","setAvatar","isMouse","setIsMouse","getBasicUser","useCallback","tempUserData","push","useEffect","subscribe","className","onClick","onMouseOver","onMouseOut","console","log","src","alt","style","color","display","get_case_list_api","add_case_api","Sider","activeIndex","setActiveSiderIndex","siderData","map","siderItem","index","key","icon","top","AlterUserInfoModal","visible","setVisible","userID","getUserList","current","loading","setLoading","setUser","handleOk","name","phoneNumber","lawyer_number","weixin_number","handleInput","value","getUserDetail","handleCancel","onOk","onCancel","footer","placeholder","onChange","e","target","Loading2","AddUserInfoModel","identify","setIdentify","lawyerNumber","setLawyerNumber","identifyNumber","setIdentifyNumber","setName","img","setImg","qualificationsNumber","setQualificationsNumber","phone","setPhone","startTime","setStartTime","fileInput","useRef","clear","handleFileChange","files","uploadFile","Array","from","formData","FormData","append","Group","_dateString","selectDate","Date","_d","getTime","toString","ref","click","Option","Select","UserList","userList","setUserList","setCurrent","addVisible","setAddVisible","selectedUserID","setSelectedUserID","num","setNum","handleChange","identifyID","resetPassword","id","password","md5","columns","dataIndex","render","_author","record","isMy","indentify","disabled","defaultValue","width","indentifyList","identifyItem","align","text","size","userListTemp","userItem","length","dataSource","pagination","pageSize","total","Tag","classnames","CaseList","caseList","setCaseList","openModal","_record","caseTypeMap","trial","caseTrialMap","danger","getCaseList","caseItem","Home","activeSiderIndex","mainPageMap","Map","set","HeaderContainer"],"mappings":"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","file":"static/js/7.2e9b15f7.chunk.js","sourcesContent":["import { message } from 'antd';\r\nimport cookies from 'react-cookies'\r\n\r\nexport interface httpConfig {\r\n    code: number\r\n    data: any\r\n    message: string\r\n}\r\n\r\nexport const successToast = (msg: string) => {\r\n    message.success(msg);\r\n}\r\n\r\nexport const errorToast = (msg: string) => {\r\n    message.error(msg);\r\n}\r\n\r\nexport const getToken = (): string => {\r\n    return cookies.load('Authorization')\r\n}\r\n\r\nexport const setToken = (token: string) => {\r\n    cookies.save('Authorization', token, {\r\n        maxAge: 60 * 60 * 24 * 7\r\n    })\r\n}\r\n\r\nexport const removeToken = () => {\r\n    cookies.remove('Authorization')\r\n}\r\n\r\nexport const getHeaders = () => {\r\n    const token: string = getToken()\r\n    return {\r\n        'Authorization': token\r\n    }\r\n}\r\n\r\nexport interface AuthorConfig {\r\n    id: number, // 作者ID\r\n    avatar: string, // 作者的头像\r\n    realname: string, // 作者的真实姓名\r\n}\r\n\r\nexport interface IndentifyConfig {\r\n    id: number\r\n    value: string\r\n}\r\n\r\n// http请求是否正确\r\nexport const httpIsSuccess = (code: number) => {\r\n    return code === 0;\r\n}\r\n\r\nexport const isNull = (value: any) => {\r\n    return value === null;\r\n}\r\n\r\n// 转换时间\r\nexport const formatTime = (date: Date) => {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDay();\r\n    const hour = date.getHours();\r\n    const minute = date.getMinutes();\r\n    const seconds = date.getSeconds();\r\n    return `${year}-${month}-${day} ${hour}:${minute}:${seconds}`\r\n}","import { createFromIconfontCN } from '@ant-design/icons';\r\n\r\nexport const backIP = 'api'\r\n\r\nexport const testIP = 'https://mock.yonyoucloud.com/mock/16533/api'\r\n\r\nexport const IconFont = createFromIconfontCN({\r\n    scriptUrl: 'http://at.alicdn.com/t/font_2274798_m840qtc2j2e.js',\r\n});","import { backIP, testIP } from 'components/common/config'\r\nimport { getHeaders } from 'components/common/utils'\r\nimport Http from './Servies'\r\n\r\ninterface ILoginPassword {\r\n    phoneNumber: string;\r\n    password: string;\r\n    verification_code: string;\r\n    platform: number;\r\n}\r\n\r\ninterface IGetBasicUserInfo {\r\n    userID?: number;\r\n}\r\n\r\ninterface IAlterUserIdentify {\r\n    userID: number;\r\n    identifyID: number;\r\n}\r\n\r\ninterface IResetUserPassword {\r\n    userID: number;\r\n    password: string;\r\n}\r\n\r\ninterface IGetDetailUserInfo {\r\n    userID: number;\r\n}\r\n\r\nexport interface IAlterUserInfo {\r\n    name: string;\r\n    phoneNumber: string;\r\n    weixin_number: string;\r\n    lawyer_number: string;\r\n}\r\n\r\ninterface IAddUser {\r\n    identify: string;\r\n    lawyerNumber: string;\r\n    identifyNumber: string;\r\n    name: string;\r\n    avatar: string;\r\n    qualificationsNumber: string;\r\n    phone: string;\r\n    startTime: string;\r\n}\r\n\r\ninterface ISearchUser {\r\n    value: string;\r\n}\r\n\r\n// 获取图片验证码\r\nexport const get_verify_code_api = async () => {\r\n    return await Http.request(`${backIP}/public/verificationCode/image`, {}, 'GET')\r\n}\r\n\r\n// 管理员手机号密码登录\r\nexport const login_password_api = async (data: ILoginPassword) => {\r\n    return await Http.request(`${backIP}/login/password`, data, 'POST')\r\n}\r\n\r\n// 获取管理员基本信息\r\nexport const get_basic_user_info_api = async (data: IGetBasicUserInfo) => {\r\n    return await Http.request(`${backIP}/user/getBasicInfo`, data, 'GET', getHeaders())\r\n}\r\n\r\n// 获取用户列表\r\nexport const get_user_list_api = async () => {\r\n    return await Http.request(`${testIP}/admin/userList`, {}, 'GET', getHeaders())\r\n}\r\n\r\n// 修改用户身份\r\nexport const alter_user_identify_api = async (data: IAlterUserIdentify) => {\r\n    return await Http.request(`${testIP}/admin/user/identify`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 重置用户密码\r\nexport const reset_user_password_api = async (data: IResetUserPassword) => {\r\n    return await Http.request(`${testIP}/admin/user/password`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 获取用户详细信息\r\nexport const get_user_detail_info_api = async (data: IGetDetailUserInfo) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'GET', getHeaders())\r\n}\r\n\r\n// 修改用户信息\r\nexport const alter_user_info_api = async (data: IAlterUserInfo) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 上传文件\r\nexport const upload_file_api = async (data: FormData) => {\r\n    return await Http.request(`${backIP}/public/upload`, data, 'POST', getHeaders())\r\n}\r\n\r\n// 生成新账号\r\nexport const add_new_user_api = async (data: IAddUser) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'POST', getHeaders())\r\n}\r\n\r\n// 查找数据库用户\r\nexport const search_user_list_api = async (data: ISearchUser) => {\r\n    return await Http.request(`${testIP}/admin/user/tip`, data, 'GET', getHeaders())\r\n}","import axios from \"axios\";\r\n\r\n// 创建axios默认请求\r\n// axios.defaults.baseURL = \"http://106.14.174.206/api\"; // 后端代码\r\n// 配置超时时间\r\naxios.defaults.timeout = 100000;\r\n// 添加响应拦截器\r\naxios.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninterface BaseHttpResponse {\r\n  code: number;\r\n  data: any;\r\n  message: string;\r\n}\r\n\r\n// 请求的方式\r\ntype IMethod = 'GET' | 'POST' | 'PUT' | 'DELETE'\r\n\r\nclass Http {\r\n  static request(url: string, data: object, method: IMethod, headers?: object): Promise<BaseHttpResponse> {\r\n    if (method === 'GET') {\r\n      return new Promise((resolve, reject) => {\r\n        axios\r\n          .get(url, { params: data, headers: headers })\r\n          .then(res => {\r\n            resolve(res.data);\r\n          })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise((resolve, reject) => {\r\n        axios({\r\n          method: method,\r\n          data: data,\r\n          headers: headers,\r\n          url: url\r\n        }).then(res => {\r\n          resolve(res.data);\r\n        })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Http","import { connect } from 'react-redux'\r\nimport { transform_user } from 'redux/actions'\r\nimport Header from 'components/home/Header'\r\nexport default connect(\r\n    state => ({\r\n        user: state\r\n    }),\r\n    {transform_user}\r\n)(Header)","// 包含所有的 action creator\r\nimport {\r\n    USER_DATA,\r\n    REMOVE_USER_DATA\r\n} from './action-types';\r\nimport { UserBasicConfig } from 'components/home/Header';\r\n\r\n// TODO: 需修改\r\n// 从register里传递已登录的用户数据到其余各个组件\r\nexport const transform_user = (user: UserBasicConfig)=>({\r\n    type: USER_DATA,\r\n    data: user\r\n}) \r\n\r\n// 退出登录，删去redux的数据\r\nexport const remove_user = (user: UserBasicConfig)=>({\r\n    type: REMOVE_USER_DATA,\r\n    data: user\r\n}) \r\n\r\n// 异步action\r\n// 如果想返回一个函数，必须应用上异步中间件\r\n// export const incrementAsync = (number) => {\r\n//     return dispatch => {\r\n//         // 异步代码\r\n//         setTimeout(() => {\r\n//             // 一秒之后才去分发一个增加的action\r\n//             dispatch(increment(number))\r\n//         }, 1000)\r\n//     }\r\n// }","import React, { useCallback, useEffect, useState } from 'react'\r\nimport 'styles/home/header.scss'\r\nimport store from 'redux/store'\r\nimport { getToken, removeToken, successToast, errorToast, httpIsSuccess } from 'components/common/utils'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { get_basic_user_info_api } from 'http/UserApi'\r\nimport { IconFont } from 'components/common/config'\r\n\r\nconst stylePrefix = 'home-header'\r\n\r\nexport interface UserBasicConfig {\r\n    avatar: string; // 头像\r\n    name: string; // 真实姓名\r\n    lawyer_number: string;\r\n}\r\n\r\ninterface HeaderConfig {\r\n    transform_user: (user: UserBasicConfig) => {\r\n        type: string;\r\n        data: UserBasicConfig;\r\n    };\r\n    title?: string;\r\n}\r\n\r\nexport default function Header({ transform_user, title }: HeaderConfig) {\r\n    const history = useHistory()\r\n    const [avatar, setAvatar] = useState(store.getState().user?.avatar)\r\n    const [isMouse, setIsMouse] = useState(false)\r\n    const getBasicUser = useCallback(async () => {\r\n        const token: string = getToken()\r\n        if (token && !store.getState().user) {\r\n            const res = await get_basic_user_info_api({});\r\n            if (httpIsSuccess(res.code)) {\r\n                const tempUserData: UserBasicConfig = res.data\r\n                setAvatar(tempUserData.avatar)\r\n                transform_user(tempUserData)\r\n            } else {\r\n                errorToast(res.message)\r\n                history.push('/login')\r\n            }\r\n        }\r\n\r\n        if (!store.getState().user) {\r\n            errorToast('请先登录')\r\n            history.push('/login')\r\n        }\r\n    }, [history, transform_user])\r\n    const exitLogin = () => {\r\n        removeToken()\r\n        successToast('退出登录成功')\r\n        history.push('/login')\r\n    }\r\n    const gotoHome = () => {\r\n        history.push('/home')\r\n    }\r\n\r\n    useEffect(() => {\r\n        store.subscribe(() => {\r\n            getBasicUser();\r\n        })\r\n        getBasicUser();\r\n    }, [getBasicUser])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`}>\r\n            <p className={`${stylePrefix}-logo`} onClick={gotoHome}>律政云</p>\r\n            {\r\n                title && <p className={`${stylePrefix}-title`}>{title}</p>\r\n            }\r\n            <div\r\n                className={`${stylePrefix}-user-layout`}\r\n                onMouseOver={() => setIsMouse(true)}\r\n                onMouseOut={() => setIsMouse(false)}\r\n            >\r\n                <img onClick={() => console.log(avatar)} src={avatar} alt=\"avatar\" className={`${stylePrefix}-avatar`} />\r\n                <IconFont\r\n                    type='icon-xiabiao'\r\n                    className={`${stylePrefix}-icon`}\r\n                    style={{\r\n                        color: isMouse ? '#000' : '#fff'\r\n                    }}\r\n                />\r\n                <div\r\n                    className={`${stylePrefix}-user-operation-layout`}\r\n                    style={{\r\n                        display: isMouse ? 'block' : 'none'\r\n                    }}\r\n                >\r\n                    <p\r\n                        className={`${stylePrefix}-user-operation-word`}\r\n                        onClick={exitLogin}\r\n                    >\r\n                        退出登录\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { testIP } from \"components/common/config\"\r\nimport { getHeaders } from \"components/common/utils\"\r\nimport Http from \"./Servies\"\r\n\r\ninterface IScale {\r\n    id: number;\r\n    scale: number;\r\n}\r\n\r\ninterface IAddCase {\r\n    caseNumber: string;\r\n    accuser: string;\r\n    defendant: string;\r\n    caseTrial: string;\r\n    caseType: string;\r\n    caseReason: string;\r\n    agency: string;\r\n    detail: string;\r\n    host: IScale;\r\n    assiant: IScale[];\r\n}\r\n\r\n// 生成新账号\r\nexport const get_case_list_api = async () => {\r\n    return await Http.request(`${testIP}/admin/case/list`, {}, 'GET', getHeaders())\r\n}\r\n\r\n// 新建案件\r\nexport const add_case_api = async (data: IAddCase) => {\r\n    return await Http.request(`${testIP}/admin/case`, data, 'POST', getHeaders())\r\n}","import React from 'react'\r\nimport 'styles/home/sider.scss'\r\nimport siderData from 'static/sider.json'\r\nimport { IconFont } from 'components/common/config'\r\n\r\nconst stylePrefix = 'home-sider'\r\n\r\ninterface SiderConfig {\r\n    activeIndex: number\r\n    setActiveSiderIndex: React.Dispatch<React.SetStateAction<number>>\r\n}\r\n\r\nexport default function Sider({ activeIndex, setActiveSiderIndex }: SiderConfig) {\r\n    return (\r\n        <div className={`${stylePrefix}-layout`}>\r\n            {\r\n                siderData.map((siderItem, index) => {\r\n                    return <div\r\n                        key={index}\r\n                        className={`${stylePrefix}-sider-item`}\r\n                        onClick={() => setActiveSiderIndex(index)}\r\n                    >\r\n                        <IconFont type={siderItem.icon} className={`${stylePrefix}-sider-icon`} />\r\n                        <p className={`${stylePrefix}-sider-title`}>{siderItem.title}</p>\r\n                    </div>\r\n                })\r\n            }\r\n            <div\r\n                className={`${stylePrefix}-shadow`}\r\n                style={{\r\n                    top: 60 * activeIndex\r\n                }}\r\n            >\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Input, Modal } from 'antd'\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport 'styles/home/alterUserInfoModal.scss'\r\nimport { alter_user_info_api, get_user_detail_info_api, IAlterUserInfo } from 'http/UserApi'\r\nimport { errorToast, httpIsSuccess, successToast } from 'components/common/utils'\r\nimport Loading2 from 'components/common/Loading2'\r\n\r\nconst stylePrefix = 'home-alterUser'\r\n\r\ninterface AlterUserInfoModalConfig {\r\n    visible: boolean\r\n    setVisible: React.Dispatch<React.SetStateAction<boolean>>\r\n    userID: number | null;\r\n    getUserList: (page: number) => Promise<void>\r\n    current: number\r\n}\r\n\r\nexport interface UserDetailConfig {\r\n    name?: string;\r\n    phoneNumber?: string;\r\n    weixin_number?: string;\r\n    lawyer_number?: string;\r\n}\r\n\r\nexport default function AlterUserInfoModal({ visible, setVisible, userID, getUserList, current }: AlterUserInfoModalConfig) {\r\n    const [loading, setLoading] = useState(false)\r\n    const [user, setUser] = useState<UserDetailConfig | null>(null)\r\n    const handleOk = async () => {\r\n        if (user && user.name && user.phoneNumber && user.lawyer_number && user.weixin_number) {\r\n            setLoading(true)\r\n            const res = await alter_user_info_api((user as IAlterUserInfo))\r\n            if (httpIsSuccess(res.code)) {\r\n                getUserList(current)\r\n                successToast('修改成功')\r\n            } else {\r\n                errorToast(res.message)\r\n            }\r\n            setVisible(false)\r\n            setLoading(false)\r\n        }\r\n    }\r\n    // 处理输入框变化\r\n    const handleInput = (key: string, value: string) => {\r\n        if (user) {\r\n            setUser({\r\n                ...user,\r\n                [key]: value\r\n            })\r\n        }\r\n    }\r\n    // 获取用户详细信息\r\n    const getUserDetail = useCallback(async () => {\r\n        if (userID !== null) {\r\n            const res = await get_user_detail_info_api({ userID });\r\n            if (httpIsSuccess(res.code)) {\r\n                setUser(res.data)\r\n            } else {\r\n                errorToast(res.message)\r\n            }\r\n        }\r\n    }, [userID])\r\n    const handleCancel = () => {\r\n        setVisible(false)\r\n    }\r\n    useEffect(() => {\r\n        getUserDetail()\r\n    }, [userID, getUserDetail])\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"修改用户信息\"\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            footer={[\r\n                <Button key=\"back\" onClick={handleCancel}>\r\n                    返回\r\n                </Button>,\r\n                <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}>\r\n                    提交\r\n                </Button>,\r\n            ]}\r\n        >\r\n            {\r\n                user ? <>\r\n                    <Input\r\n                        value={user.name || ''}\r\n                        placeholder='姓名'\r\n                        onChange={(e) => handleInput('name', e.target.value)}\r\n                        className={`${stylePrefix}-input`}\r\n                    />\r\n                    <Input\r\n                        value={user.phoneNumber || ''}\r\n                        placeholder='手机号'\r\n                        onChange={(e) => handleInput('phoneNumber', e.target.value)}\r\n                        className={`${stylePrefix}-input`}\r\n                    />\r\n                    <Input\r\n                        value={user.lawyer_number || ''}\r\n                        placeholder='律师证号'\r\n                        onChange={(e) => handleInput('lawyer_number', e.target.value)}\r\n                        className={`${stylePrefix}-input`}\r\n                    />\r\n                    <Input\r\n                        value={user.weixin_number || ''}\r\n                        placeholder='微信号'\r\n                        onChange={(e) => handleInput('weixin_number', e.target.value)}\r\n                        className={`${stylePrefix}-input`}\r\n                    />\r\n                </>\r\n                    : <Loading2 />\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import { Button, DatePicker, Input, Radio } from 'antd'\r\nimport Modal from 'antd/lib/modal/Modal'\r\nimport { IconFont } from 'components/common/config'\r\nimport { errorToast, httpIsSuccess, successToast } from 'components/common/utils'\r\nimport { add_new_user_api, upload_file_api } from 'http/UserApi'\r\nimport React, { ChangeEvent, useRef, useState } from 'react'\r\nimport 'styles/home/addUserInfoModal.scss'\r\nconst stylePrefix = 'home-addUserModel'\r\n\r\ninterface AddUserInfoModelConfig {\r\n    visible: boolean;\r\n    setVisible: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nexport default function AddUserInfoModel({ visible, setVisible }: AddUserInfoModelConfig) {\r\n    const [loading, setLoading] = useState(false)\r\n    const [identify, setIdentify] = useState('common_lawyer') // 律师、管理员身份选择器\r\n    const [lawyerNumber, setLawyerNumber] = useState('') // 律师证号\r\n    const [identifyNumber, setIdentifyNumber] = useState('') // 身份证号码\r\n    const [name, setName] = useState('') // 真实姓名\r\n    const [img, setImg] = useState<string | null>(null) // 头像\r\n    const [qualificationsNumber, setQualificationsNumber] = useState('') // 法律资格证号\r\n    const [phone, setPhone] = useState('') // 电话号码\r\n    const [startTime, setStartTime] = useState('') // 职业开始时间\r\n    const fileInput = useRef<HTMLInputElement>(null)\r\n    const handleCancel = () => {\r\n        setVisible(false)\r\n        clear()\r\n    }\r\n    const handleOk = async () => {\r\n        if (img) {\r\n            setLoading(true)\r\n            const res = await add_new_user_api({\r\n                identify,\r\n                lawyerNumber,\r\n                identifyNumber,\r\n                name,\r\n                avatar: img,\r\n                qualificationsNumber,\r\n                phone,\r\n                startTime,\r\n            })\r\n            if (httpIsSuccess(res.code)) {\r\n                successToast('操作成功')\r\n                setVisible(false)\r\n                clear()\r\n            } else {\r\n                errorToast(res.message)\r\n            }\r\n            setLoading(true)\r\n        }\r\n    }\r\n    // 清除数据\r\n    const clear = () => {\r\n        setIdentify('')\r\n        setLawyerNumber('')\r\n        setName('')\r\n        setIdentifyNumber('')\r\n        setQualificationsNumber('')\r\n        setPhone('')\r\n        setImg(null)\r\n        setStartTime('')\r\n    }\r\n    // 处理时间选择\r\n    const onChange = (date: any, _dateString: any) => {\r\n        const selectDate = new Date(date._d);\r\n        setStartTime(selectDate.getTime().toString())\r\n    }\r\n    const handleFileChange = async (e: ChangeEvent<HTMLInputElement>) => {\r\n        const files = e.target.files\r\n        if (files) {\r\n            const uploadFile = Array.from(files)[0]\r\n            const formData = new FormData()\r\n            formData.append(uploadFile.name, uploadFile)\r\n            const res = await upload_file_api(formData);\r\n            if (httpIsSuccess(res.code)) {\r\n                setImg(res.data)\r\n            } else {\r\n                errorToast(res.message)\r\n            }\r\n        }\r\n    }\r\n    // TODO: 正则检验\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"修改用户信息\"\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            footer={[\r\n                <Button key=\"back\" onClick={handleCancel}>\r\n                    返回\r\n                </Button>,\r\n                <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}>\r\n                    提交\r\n                </Button>,\r\n            ]}\r\n        >\r\n            <>\r\n                <div className={`${stylePrefix}-radio-layout`} >\r\n                    <Radio.Group\r\n                        onChange={(e) => setIdentify(e.target.value)}\r\n                        value={identify}\r\n                    >\r\n                        <Radio value='common_lawyer'>律师</Radio>\r\n                        <Radio value='administrator'>管理员</Radio>\r\n                    </Radio.Group>\r\n                </div>\r\n                <Input\r\n                    value={lawyerNumber}\r\n                    placeholder='律师证号'\r\n                    onChange={(e) => setLawyerNumber(e.target.value)}\r\n                    className={`${stylePrefix}-input`}\r\n                />\r\n                <Input\r\n                    value={identifyNumber}\r\n                    placeholder='身份证号'\r\n                    onChange={(e) => setIdentifyNumber(e.target.value)}\r\n                    className={`${stylePrefix}-input`}\r\n                />\r\n                <Input\r\n                    value={name}\r\n                    placeholder='姓名'\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    className={`${stylePrefix}-input`}\r\n                />\r\n                <Input\r\n                    value={qualificationsNumber}\r\n                    placeholder='法律资格证号'\r\n                    onChange={(e) => setQualificationsNumber(e.target.value)}\r\n                    className={`${stylePrefix}-input`}\r\n                />\r\n                <Input\r\n                    value={phone}\r\n                    placeholder='电话号码'\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                    className={`${stylePrefix}-input`}\r\n                />\r\n                <div className={`${stylePrefix}-datatime-layout`} >\r\n                    <p className={`${stylePrefix}-datatime-title`} >职业起始时间：</p>\r\n                    <DatePicker\r\n                        onChange={onChange}\r\n                        className={`${stylePrefix}-datatime-main`}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"file\"\r\n                        style={{\r\n                            display: 'none'\r\n                        }}\r\n                        ref={fileInput}\r\n                        onChange={handleFileChange}\r\n                    />\r\n                    <div className={`${stylePrefix}-avatar-layout`} >\r\n                        <p className={`${stylePrefix}-avatar-title`} >头像：</p>\r\n                        {\r\n                            img\r\n                                ? <img\r\n                                    src={img}\r\n                                    alt=\"\"\r\n                                    className={`${stylePrefix}-avatar-main`}\r\n                                    onClick={() => fileInput.current?.click()}\r\n                                />\r\n                                : <div\r\n                                    className={`${stylePrefix}-avatar-main`}\r\n                                    onClick={() => fileInput.current?.click()}\r\n                                >\r\n                                    <IconFont\r\n                                        type='iconjia'\r\n                                        className={`${stylePrefix}-avatar-icon`}\r\n                                    />\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport 'styles/home/userList.scss'\r\nimport { Table, Button, Select, Space } from 'antd';\r\nimport { AuthorConfig, IndentifyConfig, errorToast, successToast, httpIsSuccess } from 'components/common/utils';\r\nimport { get_user_list_api, alter_user_identify_api, reset_user_password_api } from 'http/UserApi';\r\nimport { ColumnsType, TablePaginationConfig } from 'antd/lib/table';\r\nimport AlterUserInfoModal from './AlterUserInfoModal';\r\nimport md5 from 'md5';\r\nimport indentifyList from 'static/identify.json'\r\nimport { useHistory } from 'react-router-dom';\r\nimport AddUserInfoModel from './AddUserInfoModel';\r\n\r\nconst stylePrefix = 'home-userList'\r\nconst { Option } = Select;\r\n\r\nexport interface UserItemConfig {\r\n    id: number;\r\n    key: string;\r\n    isMy: boolean;\r\n    avatar: string;\r\n    name: string;\r\n    identify: IndentifyConfig;\r\n}\r\n\r\nexport default function UserList() {\r\n    const [loading, setLoading] = useState(false)\r\n    const [userList, setUserList] = useState<UserItemConfig[]>([])\r\n    const [current, setCurrent] = useState(1) // 当前page\r\n    const [visible, setVisible] = useState(false) // 修改用户信息visible\r\n    const [addVisible, setAddVisible] = useState(false) // 增加用户信息visible\r\n    const [selectedUserID, setSelectedUserID] = useState<number | null>(null)\r\n    const [num, setNum] = useState(0)\r\n    const history = useHistory()\r\n    // 修改用户身份\r\n    const handleChange = async (userID: number, identifyID: number) => {\r\n        const res = await alter_user_identify_api({\r\n            userID: userID,\r\n            identifyID: identifyID\r\n        })\r\n        httpIsSuccess(res.code) ? successToast('修改成功') : errorToast(res.message)\r\n    }\r\n    // 重置用户密码\r\n    const resetPassword = async (id: number) => {\r\n        const res = await reset_user_password_api({\r\n            userID: id,\r\n            password: md5('123456')\r\n        })\r\n        httpIsSuccess(res.code) ? successToast('重置密码成功') : errorToast(res.message)\r\n    }\r\n    const openModal = (userID: number) => {\r\n        setSelectedUserID(userID)\r\n        setVisible(true)\r\n    }\r\n    const gotoSalaryPage = (userID: number) => {\r\n        history.push(`/salary/${userID}`);\r\n    }\r\n    const columns: ColumnsType<UserItemConfig> = [\r\n        {\r\n            title: '姓名',\r\n            dataIndex: 'author',\r\n            key: 'author',\r\n            render: (_author: AuthorConfig, record: UserItemConfig) => {\r\n                return (\r\n                    <div className={`${stylePrefix}-author`}>\r\n                        <img className={`${stylePrefix}-avatar`} src={record.avatar} alt=\"头像\" />\r\n                        <p className={`${stylePrefix}-realname`} >{record.name}</p>\r\n                        {\r\n                            record.isMy && <div className={`${stylePrefix}-tag`}>我</div>\r\n                        }\r\n                    </div>\r\n                )\r\n            },\r\n        },\r\n        {\r\n            title: '身份',\r\n            key: 'identify',\r\n            dataIndex: 'identify',\r\n            render: (indentify: IndentifyConfig, record: UserItemConfig) => (\r\n                <Select\r\n                    disabled={record.isMy}\r\n                    defaultValue={indentify.id}\r\n                    style={{ width: 120 }}\r\n                    onChange={(identifyID) => handleChange(record.id, identifyID)}\r\n                >\r\n                    {\r\n                        indentifyList.map((identifyItem, index) => {\r\n                            return <Option key={index} value={identifyItem.id}>{identifyItem.value}</Option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            ),\r\n            align: 'center'\r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'action',\r\n            render: (text: UserItemConfig) => {\r\n                return (\r\n                    <Space size='large' >\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={() => openModal(text.id)}\r\n                        >修改</Button>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={() => resetPassword(text.id)}\r\n                        >\r\n                            重置密码\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => gotoSalaryPage(text.id)}\r\n                        >查看收入</Button>\r\n                    </Space>\r\n                )\r\n            },\r\n            align: 'center'\r\n        },\r\n    ];\r\n    const getUserList = useCallback( async () => {\r\n        setLoading(true)\r\n        const res = await get_user_list_api()\r\n        if (httpIsSuccess(res.code)) {\r\n            const userListTemp = res.data.map((userItem: any, index: number) => {\r\n                return {\r\n                    ...userItem,\r\n                    key: index.toString()\r\n                }\r\n            })\r\n            setNum(res.data.length)\r\n            setUserList(userListTemp)\r\n            setLoading(false)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n    }, [])\r\n    const handleTableChange = (pagination: TablePaginationConfig) => {\r\n        if (pagination.current) {\r\n            setCurrent(pagination.current)\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getUserList()\r\n    }, [getUserList])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            <div className={`${stylePrefix}-header`}>\r\n                <p>\r\n                    <span className={`${stylePrefix}-title`} >用户总数：</span>\r\n                    <span>{userList.length}</span>\r\n                </p>\r\n                <Button onClick={() => setAddVisible(true)} type=\"primary\">增加账号</Button>\r\n            </div>\r\n            <Table\r\n                loading={loading}\r\n                className={`${stylePrefix}-table`}\r\n                columns={columns}\r\n                dataSource={userList}\r\n                pagination={{\r\n                    current: current,\r\n                    pageSize: 10, // 一页多少项\r\n                    total: num, // 总共多少项\r\n                }}\r\n                onChange={handleTableChange}\r\n            />\r\n            <AlterUserInfoModal\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                userID={selectedUserID}\r\n                getUserList={getUserList}\r\n                current={current}\r\n            />\r\n            <AddUserInfoModel\r\n                visible={addVisible}\r\n                setVisible={setAddVisible}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport 'styles/common/tag.scss'\r\nimport classnames from 'classnames'\r\nconst stylePrefix = 'common-tag'\r\ntype IType = 'green' | 'blue' | 'red' | 'yellow' | 'orange' | 'purple';\r\ninterface TagConfig {\r\n    text: string;\r\n    type: IType;\r\n}\r\n\r\nexport default function Tag({ text, type }: TagConfig) {\r\n\r\n    return (\r\n        <div className={classnames(`${stylePrefix}-layout`, {\r\n            [`${stylePrefix}-${type}`]: type\r\n        })} >\r\n            {text}\r\n        </div>\r\n    )\r\n}","import React, { useCallback, useEffect, useState } from 'react'\r\nimport 'styles/home/userList.scss'\r\nimport { Table, Button, Space } from 'antd';\r\nimport { errorToast, httpIsSuccess } from 'components/common/utils';\r\nimport { ColumnsType, TablePaginationConfig } from 'antd/lib/table';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { get_case_list_api } from 'http/Case';\r\nimport Tag from 'components/common/Tag';\r\nimport caseTypeMap from 'static/caseTypeTagMap.json'\r\nimport caseTrialMap from 'static/caseTrialTagMap.json'\r\n\r\nconst stylePrefix = 'home-userList'\r\n\r\nexport interface CaseItemConfig {\r\n    id: number;\r\n    key: number;\r\n    name: string;\r\n    type: string;\r\n    trial: string;\r\n    host: string;\r\n}\r\ntype ModalType = 'alter' | 'delete' | 'add' // 按钮跳转的类型\r\n\r\nexport default function CaseList() {\r\n    const [loading, setLoading] = useState(false)\r\n    const [caseList, setCaseList] = useState<CaseItemConfig[]>([])\r\n    const [current, setCurrent] = useState(1) // 当前page\r\n    const [num, setNum] = useState(0)\r\n    const history = useHistory()\r\n    const openModal = (id: number | null, type: ModalType) => {\r\n        if (id === null) {\r\n            history.push('/case')\r\n            return;\r\n        }\r\n\r\n        if (type === 'alter') {\r\n            history.push(`/case/${id}`)\r\n            return;\r\n        }\r\n    }\r\n    const columns: ColumnsType<CaseItemConfig> = [\r\n        {\r\n            title: '名称',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            render: (name: string, _record: CaseItemConfig) => {\r\n                return (\r\n                    <div className={`${stylePrefix}-author`}>\r\n                        <p className={`${stylePrefix}-realname`} >{name}</p>\r\n                    </div>\r\n                )\r\n            },\r\n        },\r\n        {\r\n            title: '类型',\r\n            key: 'type',\r\n            dataIndex: 'type',\r\n            render: (type: string) => (\r\n                <Tag\r\n                    text={type}\r\n                    type={caseTypeMap[type]}\r\n                />\r\n            ),\r\n            align: 'center'\r\n        },\r\n        {\r\n            title: '申级',\r\n            key: 'trial',\r\n            dataIndex: 'trial',\r\n            render: (trial: string) => (\r\n                <Tag\r\n                    text={trial}\r\n                    type={caseTrialMap[trial]}\r\n                />\r\n            ),\r\n            align: 'center'\r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'action',\r\n            render: (text: CaseItemConfig) => {\r\n                return (\r\n                    <Space size='large' >\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={() => openModal(text.id, 'alter')}\r\n                        >修改</Button>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            danger\r\n                        // onClick={() => gotoSalaryPage(text.id)}\r\n                        >删除</Button>\r\n                    </Space>\r\n                )\r\n            },\r\n            align: 'center'\r\n        },\r\n    ];\r\n    const getCaseList = useCallback(async () => {\r\n        setLoading(true)\r\n        const res = await get_case_list_api()\r\n        if (httpIsSuccess(res.code)) {\r\n            const userListTemp = res.data.map((caseItem: any, index: number) => {\r\n                return {\r\n                    ...caseItem,\r\n                    key: index\r\n                }\r\n            })\r\n            setNum(res.data.length)\r\n            setCaseList(userListTemp)\r\n            setLoading(false)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n    }, [])\r\n    const handleTableChange = (pagination: TablePaginationConfig) => {\r\n        if (pagination.current) {\r\n            setCurrent(pagination.current)\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getCaseList()\r\n    }, [getCaseList])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            <div className={`${stylePrefix}-header`}>\r\n                <p>\r\n                    <span className={`${stylePrefix}-title`} >案件总数：</span>\r\n                    <span>{caseList.length}</span>\r\n                </p>\r\n                <Button onClick={() => openModal(null, 'add')} type=\"primary\">增加案件</Button>\r\n            </div>\r\n            <Table\r\n                loading={loading}\r\n                className={`${stylePrefix}-table`}\r\n                columns={columns}\r\n                dataSource={caseList}\r\n                pagination={{\r\n                    current: current,\r\n                    pageSize: 10, // 一页多少项\r\n                    total: num, // 总共多少项\r\n                }}\r\n                onChange={handleTableChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport 'styles/pages/home.scss'\r\nimport { Provider } from 'react-redux'\r\nimport store from 'redux/store'\r\nimport HeaderContainer from 'containers/HeaderContainer'\r\nimport Sider from 'components/home/Sider'\r\nimport UserList from 'components/home/user/UserList'\r\nimport CaseList from 'components/home/lawyer/CaseList'\r\n\r\nconst stylePrefix = 'page-home'\r\n\r\nexport default function Home() {\r\n    const [activeSiderIndex, setActiveSiderIndex] = useState(0)\r\n    const mainPageMap = new Map();\r\n    mainPageMap.set(0, <UserList />)\r\n    mainPageMap.set(1, <CaseList />)\r\n    return (\r\n        <div className={`${stylePrefix}-layout`}>\r\n            <Provider store={store}>\r\n                <HeaderContainer />\r\n            </Provider>\r\n            <div className={`${stylePrefix}-main`} >\r\n                <Sider activeIndex={activeSiderIndex} setActiveSiderIndex={setActiveSiderIndex} />\r\n                {\r\n                    mainPageMap.get(activeSiderIndex)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}