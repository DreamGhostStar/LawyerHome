{"version":3,"sources":["components/common/utils.tsx","http/UserApi.tsx","components/common/config.ts","http/Servies.tsx","containers/HeaderContainer.tsx","redux/actions.ts","components/home/Header.tsx","http/Salary.tsx","components/salary/SalaryList.tsx","components/salary/UserBasicShow.tsx","pages/salary.tsx"],"names":["IconFont","createFromIconfontCN","scriptUrl","successToast","msg","message","success","errorToast","error","getToken","cookies","load","setToken","token","save","maxAge","removeToken","remove","getHeaders","httpIsSuccess","code","getIdentifyListApi","a","axios","method","url","headers","res","data","getUserVerifyListApi","getUserVerifyDetailApi","params","submitUserVerifyResultApi","get_verify_code_api","Http","request","backIP","login_password_api","get_basic_user_info_api","get_user_list_api","testIP","alter_user_identify_api","reset_user_password_api","get_user_detail_info_api","alter_user_info_api","upload_file_api","add_new_user_api","defaults","timeout","interceptors","response","use","Promise","reject","resolve","get","then","catch","err","connect","state","user","transform_user","type","USER_DATA","history","useHistory","useState","store","getState","avatar","setAvatar","isMouse","setIsMouse","getBasicUser","tempUserData","console","log","push","useEffect","subscribe","className","onClick","onMouseOver","onMouseOut","src","alt","style","color","display","get_user_info_in_salary_api","get_salary_list_api","stylePrefix","SalaryList","userID","salaryList","setSalaryList","getSalaryList","map","salary","index","key","year","year_salary","case_list","caseItem","case_name","identity","ratio","UserBasicShow","setUser","loading","setLoading","init","buildOtherInfoItem","value","Loading2","name","salaryNum","phoneNumber","weixin_number","lawyer_number","Salary","useParams","HeaderContainer","parseInt","id"],"mappings":"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","file":"static/js/7.02d187f3.chunk.js","sourcesContent":["import { createFromIconfontCN } from '@ant-design/icons';\r\nimport { message } from 'antd';\r\nimport cookies from 'react-cookies'\r\n\r\nexport const IconFont = createFromIconfontCN({\r\n    scriptUrl: 'http://at.alicdn.com/t/font_2103484_f8ge73a2w6v.js',\r\n});\r\n\r\nexport interface httpConfig {\r\n    code: number\r\n    data: any\r\n    message: string\r\n}\r\n\r\nexport const successToast = (msg: string) => {\r\n    message.success(msg);\r\n}\r\n\r\nexport const errorToast = (msg: string) => {\r\n    message.error(msg);\r\n}\r\n\r\nexport const getToken = (): string => {\r\n    return cookies.load('Authorization')\r\n}\r\n\r\nexport const setToken = (token: string) => {\r\n    cookies.save('Authorization', token, {\r\n        maxAge: 60 * 60 * 24 * 7\r\n    })\r\n}\r\n\r\nexport const removeToken = () => {\r\n    cookies.remove('Authorization')\r\n}\r\n\r\nexport const getHeaders = () => {\r\n    const token: string = getToken()\r\n    return {\r\n        'Authorization': token\r\n    }\r\n}\r\n\r\nexport interface AuthorConfig {\r\n    id: number, // 作者ID\r\n    avatar: string, // 作者的头像\r\n    realname: string, // 作者的真实姓名\r\n}\r\n\r\nexport interface IndentifyConfig {\r\n    id: number\r\n    value: string\r\n}\r\n\r\nexport const httpIsSuccess = (code: number) => {\r\n    return code === 0;\r\n}","import axios from 'axios'\r\nimport { backIP, testIP } from 'components/common/config'\r\nimport { httpConfig, getHeaders } from 'components/common/utils'\r\nimport Http from './Servies'\r\n\r\ninterface loginConfig {\r\n    username: string\r\n    password: string\r\n    isAdmin: boolean\r\n}\r\n\r\ninterface getVerifyDetailConfig {\r\n    id: number\r\n}\r\ninterface alterUserConfig {\r\n    userID: number\r\n    username: string\r\n    realname: string\r\n    phoneNumber: string\r\n}\r\ninterface submitUserVerifyResultConfig {\r\n    id: number\r\n    isAgree: boolean\r\n}\r\ninterface resetPasswordConfig {\r\n    userID: number\r\n    password: string\r\n}\r\ninterface alterUserIdentifyConfig {\r\n    userID: number\r\n    identifyID: number\r\n}\r\n\r\n// 登录\r\nexport const loginApi = async (data: loginConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/user/login`,\r\n        data: data\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取所有身份\r\nexport const getIdentifyListApi = async () => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/user/identify`,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取用户验证列表\r\nexport const getUserVerifyListApi = async () => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/user/verify/list`,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取用户验证材料信息\r\nexport const getUserVerifyDetailApi = async (data: getVerifyDetailConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/user/verify`,\r\n        params: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取用户列表信息\r\nexport const getUserListApi = async () => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/admin/user/list`,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 修改用户信息\r\nexport const alterUserApi = async (data: alterUserConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/admin/realname`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 提交用户审核结果\r\nexport const submitUserVerifyResultApi = async (data: submitUserVerifyResultConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/user/verify`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 重置密码\r\nexport const resetPasswordApi = async (data: resetPasswordConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/admin/password`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 修改用户身份\r\nexport const alterUserIdentifyApi = async (data: alterUserIdentifyConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/admin/indentify`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\ninterface ILoginPassword {\r\n    phoneNumber: string;\r\n    password: string;\r\n    verification_code: string;\r\n    platform: number;\r\n}\r\n\r\ninterface IGetBasicUserInfo {\r\n    userID?: number;\r\n}\r\n\r\ninterface IAlterUserIdentify {\r\n    userID: number;\r\n    identifyID: number;\r\n}\r\n\r\ninterface IResetUserPassword {\r\n    userID: number;\r\n    password: string;\r\n}\r\n\r\ninterface IGetDetailUserInfo {\r\n    userID: number;\r\n}\r\n\r\nexport interface IAlterUserInfo {\r\n    name: string;\r\n    phoneNumber: string;\r\n    weixin_number: string;\r\n    lawyer_number: string;\r\n}\r\n\r\ninterface IAddUser {\r\n    identify: string;\r\n    lawyerNumber: string;\r\n    identifyNumber: string;\r\n    name: string;\r\n    avatar: string;\r\n    qualificationsNumber: string;\r\n    phone: string;\r\n    startTime: string;\r\n}\r\n\r\n// 获取图片验证码\r\nexport const get_verify_code_api = async () => {\r\n    return await Http.request(`${backIP}/public/verificationCode/image`, {}, 'GET')\r\n}\r\n\r\n// 管理员手机号密码登录\r\nexport const login_password_api = async (data: ILoginPassword) => {\r\n    return await Http.request(`${backIP}/login/password`, data, 'POST')\r\n}\r\n\r\n// 获取管理员基本信息\r\nexport const get_basic_user_info_api = async (data: IGetBasicUserInfo) => {\r\n    return await Http.request(`${backIP}/user/getBasicInfo`, data, 'GET', getHeaders())\r\n}\r\n\r\n// 获取用户列表\r\nexport const get_user_list_api = async () => {\r\n    return await Http.request(`${testIP}/admin/userList`, {}, 'GET', getHeaders())\r\n}\r\n\r\n// 修改用户身份\r\nexport const alter_user_identify_api = async (data: IAlterUserIdentify) => {\r\n    return await Http.request(`${testIP}/admin/user/identify`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 重置用户密码\r\nexport const reset_user_password_api = async (data: IResetUserPassword) => {\r\n    return await Http.request(`${testIP}/admin/user/password`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 获取用户详细信息\r\nexport const get_user_detail_info_api = async (data: IGetDetailUserInfo) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'GET', getHeaders())\r\n}\r\n\r\n// 修改用户信息\r\nexport const alter_user_info_api = async (data: IAlterUserInfo) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 上传文件\r\nexport const upload_file_api = async (data: FormData) => {\r\n    return await Http.request(`${backIP}/public/upload`, data, 'POST', getHeaders())\r\n}\r\n\r\n// 生成新账号\r\nexport const add_new_user_api = async (data: IAddUser) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'POST', getHeaders())\r\n}","import { createFromIconfontCN } from '@ant-design/icons';\r\n\r\nexport const backIP = 'api'\r\n\r\nexport const testIP = 'https://mock.yonyoucloud.com/mock/16533/api'\r\n\r\nexport const IconFont = createFromIconfontCN({\r\n    scriptUrl: 'http://at.alicdn.com/t/font_2274798_999ib79sft.js',\r\n});","import axios from \"axios\";\r\n\r\n// 创建axios默认请求\r\n// axios.defaults.baseURL = \"http://106.14.174.206/api\"; // 后端代码\r\n// 配置超时时间\r\naxios.defaults.timeout = 100000;\r\n// 添加响应拦截器\r\naxios.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninterface BaseHttpResponse {\r\n  code: number;\r\n  data: any;\r\n  message: string;\r\n}\r\n\r\n// 请求的方式\r\ntype IMethod = 'GET' | 'POST' | 'PUT' | 'DELETE'\r\n\r\nclass Http {\r\n  static request(url: string, data: object, method: IMethod, headers?: object): Promise<BaseHttpResponse> {\r\n    if (method === 'GET') {\r\n      return new Promise((resolve, reject) => {\r\n        axios\r\n          .get(url, { data: data, headers: headers })\r\n          .then(res => {\r\n            resolve(res.data);\r\n          })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise((resolve, reject) => {\r\n        axios({\r\n          method: method,\r\n          data: data,\r\n          headers: headers,\r\n          url: url\r\n        }).then(res => {\r\n          resolve(res.data);\r\n        })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Http","import { connect } from 'react-redux'\r\nimport { transform_user } from 'redux/actions'\r\nimport Header from 'components/home/Header'\r\nexport default connect(\r\n    state => ({\r\n        user: state\r\n    }),\r\n    {transform_user}\r\n)(Header)","// 包含所有的 action creator\r\nimport {\r\n    USER_DATA,\r\n    REMOVE_USER_DATA\r\n} from './action-types';\r\nimport { UserBasicConfig } from 'components/home/Header';\r\n\r\n// TODO: 需修改\r\n// 从register里传递已登录的用户数据到其余各个组件\r\nexport const transform_user = (user: UserBasicConfig)=>({\r\n    type: USER_DATA,\r\n    data: user\r\n}) \r\n\r\n// 退出登录，删去redux的数据\r\nexport const remove_user = (user: UserBasicConfig)=>({\r\n    type: REMOVE_USER_DATA,\r\n    data: user\r\n}) \r\n\r\n// 异步action\r\n// 如果想返回一个函数，必须应用上异步中间件\r\n// export const incrementAsync = (number) => {\r\n//     return dispatch => {\r\n//         // 异步代码\r\n//         setTimeout(() => {\r\n//             // 一秒之后才去分发一个增加的action\r\n//             dispatch(increment(number))\r\n//         }, 1000)\r\n//     }\r\n// }","import React, { useEffect, useState } from 'react'\r\nimport 'styles/home/header.scss'\r\nimport store from 'redux/store'\r\nimport { getToken, IconFont, removeToken, successToast, errorToast } from 'components/common/utils'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { get_basic_user_info_api } from 'http/UserApi'\r\n\r\nconst stylePrefix = 'home-header'\r\n\r\nexport interface UserBasicConfig {\r\n    avatar: string; // 头像\r\n    name: string; // 真实姓名\r\n    lawyer_number: string;\r\n}\r\n\r\ninterface HeaderConfig {\r\n    transform_user: (user: UserBasicConfig) => {\r\n        type: string;\r\n        data: UserBasicConfig;\r\n    }\r\n}\r\n\r\nexport default function Header({ transform_user }: HeaderConfig) {\r\n    const history = useHistory()\r\n    const [avatar, setAvatar] = useState(store.getState().user?.avatar)\r\n    const [isMouse, setIsMouse] = useState(false)\r\n    const getBasicUser = async () => {\r\n        const token: string = getToken()\r\n        if (token && !store.getState().user) {\r\n            const res = await get_basic_user_info_api({});\r\n            const tempUserData: UserBasicConfig = res.data\r\n            console.log(tempUserData)\r\n            setAvatar(tempUserData.avatar)\r\n            transform_user(tempUserData)\r\n        }\r\n\r\n        if (!store.getState().user) {\r\n            errorToast('请先登录')\r\n            history.push('/login')\r\n        }\r\n    }\r\n    const exitLogin = () => {\r\n        removeToken()\r\n        successToast('退出登录成功')\r\n        history.push('/login')\r\n    }\r\n    const gotoHome = () => {\r\n        history.push('/home')\r\n    }\r\n\r\n    useEffect(() => {\r\n        store.subscribe(()=>{\r\n            getBasicUser();\r\n        })\r\n        getBasicUser();\r\n    }, [])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`}>\r\n            <p className={`${stylePrefix}-title`} onClick={gotoHome}>律政云</p>\r\n            <div\r\n                className={`${stylePrefix}-user-layout`}\r\n                onMouseOver={() => setIsMouse(true)}\r\n                onMouseOut={() => setIsMouse(false)}\r\n            >\r\n                <img onClick={() => console.log(avatar)} src={avatar} alt=\"avatar\" className={`${stylePrefix}-avatar`} />\r\n                <IconFont\r\n                    type='icon-xiabiao'\r\n                    className={`${stylePrefix}-icon`}\r\n                    style={{\r\n                        color: isMouse ? '#000' : '#fff'\r\n                    }}\r\n                />\r\n                <div\r\n                    className={`${stylePrefix}-user-operation-layout`}\r\n                    style={{\r\n                        display: isMouse ? 'block' : 'none'\r\n                    }}\r\n                >\r\n                    <p\r\n                        className={`${stylePrefix}-user-operation-word`}\r\n                        onClick={exitLogin}\r\n                    >\r\n                        退出登录\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { testIP } from \"components/common/config\"\r\nimport { getHeaders } from \"components/common/utils\"\r\nimport Http from \"./Servies\"\r\n\r\ninterface IGetUserInfoInSalary {\r\n    userID: number;\r\n}\r\n\r\n// 收入页面获取用户信息\r\nexport const get_user_info_in_salary_api = async (data: IGetUserInfoInSalary) => {\r\n    return await Http.request(`${testIP}/admin/salary/user`, data, 'GET', getHeaders())\r\n}\r\n\r\n// 获取收入列表\r\nexport const get_salary_list_api = async (data: IGetUserInfoInSalary) => {\r\n    return await Http.request(`${testIP}/admin/salary/list`, data, 'GET', getHeaders())\r\n}","import { errorToast, httpIsSuccess } from 'components/common/utils'\r\nimport { get_salary_list_api } from 'http/Salary'\r\nimport React, { useEffect, useState } from 'react'\r\nimport 'styles/salary/salaryList.scss'\r\nconst stylePrefix = 'salary-salaryList'\r\n\r\ninterface SalaryListConfig {\r\n    userID: number;\r\n}\r\n\r\ninterface CaseItem {\r\n    case_name: string, //案件名称\r\n    identity: string,//主办人还是协办人\r\n    generalSalary: number,//总律师费\r\n    salary: number, //该案件分得的律师费\r\n    ratio: number,//该用户占该案件的金额比例\r\n}\r\n\r\ninterface YearSalaryItem {\r\n    year: number,//年份\r\n    year_salary: number,//该年总收入\r\n    case_list: CaseItem[]\r\n}\r\n\r\nexport default function SalaryList({ userID }: SalaryListConfig) {\r\n    const [salaryList, setSalaryList] = useState<YearSalaryItem[]>([])\r\n    const getSalaryList = async () => {\r\n        const res = await get_salary_list_api({ userID })\r\n        if (httpIsSuccess(res.code)) {\r\n            setSalaryList(res.data)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getSalaryList()\r\n    }, [userID])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            {\r\n                salaryList.map((salary, index) => {\r\n                    return <div\r\n                        key={index}\r\n                        className={`${stylePrefix}-salary-item-layout`}\r\n                    >\r\n                        <p className={`${stylePrefix}-year`}>年份：{salary.year}</p>\r\n                        <p className={`${stylePrefix}-year`}>年度总收入：{salary.year_salary}</p>\r\n                        {\r\n                            salary.case_list.map((caseItem, key) => {\r\n                                return <div\r\n                                    key={key}\r\n                                    className={`${stylePrefix}-case-item`}\r\n                                >\r\n                                    <span>{caseItem.case_name}</span>\r\n                                    <span>{caseItem.identity}</span>\r\n                                    <span>{caseItem.salary}</span>\r\n                                    <span>{caseItem.ratio}</span>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import Loading2 from 'components/common/Loading2';\r\nimport { errorToast, httpIsSuccess } from 'components/common/utils';\r\nimport { UserDetailConfig } from 'components/home/AlterUserInfoModal';\r\nimport { get_user_info_in_salary_api } from 'http/Salary';\r\nimport React, { useEffect, useState } from 'react'\r\nimport 'styles/salary/userBasicShow.scss'\r\n\r\nconst stylePrefix = 'salary-userBasicShow'\r\n\r\ninterface UserBasicShowConfig {\r\n    userID: number;\r\n}\r\n\r\ninterface UserDetailInfoConfig extends UserDetailConfig {\r\n    salaryNum?: string;\r\n    avatar?: string;\r\n}\r\n\r\nexport default function UserBasicShow({ userID }: UserBasicShowConfig) {\r\n    const [user, setUser] = useState<UserDetailInfoConfig>({})\r\n    const [loading, setLoading] = useState(false)\r\n    // 初始化用户信息\r\n    const init = async () => {\r\n        setLoading(true)\r\n        const res = await get_user_info_in_salary_api({ userID })\r\n        if (httpIsSuccess(res.code)) {\r\n            setUser(res.data);\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n        setLoading(false)\r\n    }\r\n    useEffect(() => {\r\n        init()\r\n    }, [userID])\r\n    const buildOtherInfoItem = (key: string, value: string) => {\r\n        return <p>\r\n            <span className={`${stylePrefix}-title`} >{key}：</span>\r\n            <span className={`${stylePrefix}-value`}>{value}</span>\r\n        </p>\r\n    }\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            {\r\n                !loading\r\n                    ? <div className={`${stylePrefix}-main`} >\r\n                        <div className={`${stylePrefix}-name-avatar-layout`} >\r\n                            <img src={user.avatar} className={`${stylePrefix}-avatar`} alt=\"\" />\r\n                            <p className={`${stylePrefix}-name`} >{user.name}</p>\r\n                        </div>\r\n                        <div className={`${stylePrefix}-other-info`} >\r\n                            {buildOtherInfoItem('收入总额', `${user.salaryNum || '0'}元`)}\r\n                            {buildOtherInfoItem('手机号', user.phoneNumber || '无')}\r\n                            {buildOtherInfoItem('微信号', user.weixin_number || '无')}\r\n                            {buildOtherInfoItem('律师证号', user.lawyer_number || '无')}\r\n                        </div>\r\n                    </div>\r\n                    : <Loading2 />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import SalaryList from 'components/salary/SalaryList'\r\nimport UserBasicShow from 'components/salary/UserBasicShow'\r\nimport HeaderContainer from 'containers/HeaderContainer'\r\nimport React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport store from 'redux/store'\r\nimport 'styles/pages/salary.scss'\r\nconst stylePrefix = 'page-salary'\r\n\r\ninterface salaryParams {\r\n    id: string;\r\n}\r\n\r\nexport default function Salary() {\r\n    const params = useParams<salaryParams>()\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            <Provider store={store}>\r\n                <HeaderContainer />\r\n            </Provider>\r\n            <div className={`${stylePrefix}-main`} >\r\n                <UserBasicShow userID={parseInt(params.id)} />\r\n                <SalaryList userID={parseInt(params.id)}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}