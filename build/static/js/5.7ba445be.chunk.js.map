{"version":3,"sources":["redux/actions.ts","containers/HeaderContainer.tsx","components/home/Header.tsx","components/home/Sider.tsx","components/common/AuthorShow.tsx","components/home/UserVerifyDetail.tsx","components/home/UserVerify.tsx","components/home/AlterUserInfoModal.tsx","components/home/UserList.tsx","http/ErrorMessageApi.tsx","components/home/ErrorDetailModel.tsx","components/home/ErrorList.tsx","pages/home.tsx","components/common/utils.tsx","components/common/config.ts","http/Servies.tsx","http/UserApi.tsx"],"names":["transform_user","user","type","USER_DATA","data","connect","state","history","useHistory","useState","avatar","setAvatar","isMouse","setIsMouse","getBasicUser","a","getToken","store","getState","get_basic_user_info_api","res","tempUserData","errorToast","push","useEffect","className","onMouseOver","onMouseOut","onClick","console","log","src","alt","style","color","display","removeToken","successToast","Sider","activeIndex","setActiveSiderIndex","siderData","map","siderItem","index","key","icon","title","top","AuthorShow","realname","createTime","UserVerifyDetail","visible","setVisible","verifyID","getUserVerifyList","verifyDetail","setVerifyDetail","loading","setLoading","handleCancel","getVerifyDetail","getUserVerifyDetailApi","id","code","submit","result","submitUserVerifyResultApi","isAgree","message","onCancel","footer","Loading2","author","content","files","file","danger","UserVerify","userVerifyList","setUserVerifyList","setVerifyID","getUserVerifyListApi","backgroundColor","length","userVerifyItem","abstract","firstPicture","AlterUserInfoModal","userID","getUserList","current","setUser","handleOk","name","phoneNumber","lawyer_number","weixin_number","alter_user_info_api","httpIsSuccess","handleInput","value","getUserDetail","get_user_detail_info_api","onOk","placeholder","onChange","e","target","Option","Select","UserList","userList","setUserList","setCurrent","selectedUserID","setSelectedUserID","num","setNum","handleChange","identifyID","alter_user_identify_api","resetPassword","reset_user_password_api","password","md5","columns","dataIndex","render","_author","record","isMy","indentify","disabled","defaultValue","width","parseInt","indentifyList","identifyItem","text","size","get_user_list_api","userListTemp","userItem","toString","dataSource","pagination","pageSize","total","getErrorListApi","axios","method","url","params","headers","getHeaders","getErrorDetailApi","ErrorDetailModel","errorID","errorDetail","setErrorDetail","getErrorDetail","ErrorList","errorList","setErrorList","radioIdentifyID","setRadioIdentifyID","currentPage","setCurrentPage","pageNum","setPageNum","identifyList","setIdentifyList","setErrorID","getErrorList","page","identityID","list","getIdentifyList","getIdentifyListApi","Group","errorItem","Home","activeSiderIndex","mainPageMap","Map","set","HeaderContainer","get","IconFont","createFromIconfontCN","scriptUrl","msg","success","error","cookies","load","setToken","token","save","maxAge","remove","testIP","defaults","timeout","interceptors","response","use","Promise","reject","Http","resolve","then","catch","err","get_verify_code_api","request","login_password_api"],"mappings":"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","file":"static/js/5.7ba445be.chunk.js","sourcesContent":["// 包含所有的 action creator\r\nimport {\r\n    USER_DATA,\r\n    REMOVE_USER_DATA\r\n} from './action-types';\r\nimport { UserBasicConfig } from 'components/home/Header';\r\n\r\n// TODO: 需修改\r\n// 从register里传递已登录的用户数据到其余各个组件\r\nexport const transform_user = (user: UserBasicConfig)=>({\r\n    type: USER_DATA,\r\n    data: user\r\n}) \r\n\r\n// 退出登录，删去redux的数据\r\nexport const remove_user = (user: UserBasicConfig)=>({\r\n    type: REMOVE_USER_DATA,\r\n    data: user\r\n}) \r\n\r\n// 异步action\r\n// 如果想返回一个函数，必须应用上异步中间件\r\n// export const incrementAsync = (number) => {\r\n//     return dispatch => {\r\n//         // 异步代码\r\n//         setTimeout(() => {\r\n//             // 一秒之后才去分发一个增加的action\r\n//             dispatch(increment(number))\r\n//         }, 1000)\r\n//     }\r\n// }","import { connect } from 'react-redux'\r\nimport { transform_user } from 'redux/actions'\r\nimport Header from 'components/home/Header'\r\nexport default connect(\r\n    state => ({\r\n        user: state\r\n    }),\r\n    {transform_user}\r\n)(Header)","import React, { useEffect, useState } from 'react'\r\nimport 'styles/home/header.scss'\r\nimport store from 'redux/store'\r\nimport { getToken, IconFont, removeToken, successToast, errorToast } from 'components/common/utils'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { get_basic_user_info_api } from 'http/UserApi'\r\n\r\nconst stylePrefix = 'home-header'\r\n\r\nexport interface UserBasicConfig {\r\n    avatar: string; // 头像\r\n    name: string; // 真实姓名\r\n    lawyer_number: string;\r\n}\r\n\r\ninterface HeaderConfig {\r\n    transform_user: (user: UserBasicConfig) => {\r\n        type: string;\r\n        data: UserBasicConfig;\r\n    }\r\n}\r\n\r\nexport default function Header({ transform_user }: HeaderConfig) {\r\n    const history = useHistory()\r\n    const [avatar, setAvatar] = useState('')\r\n    const [isMouse, setIsMouse] = useState(false)\r\n    const getBasicUser = async () => {\r\n        const token: string = getToken()\r\n        if (token && !store.getState().user) {\r\n            const res = await get_basic_user_info_api({});\r\n            const tempUserData: UserBasicConfig = res.data\r\n            setAvatar(tempUserData.avatar)\r\n            transform_user(tempUserData)\r\n        }\r\n\r\n        if (!store.getState().user) {\r\n            errorToast('请先登录')\r\n            history.push('/login')\r\n        }\r\n    }\r\n    const exitLogin = () => {\r\n        removeToken()\r\n        successToast('退出登录成功')\r\n        history.push('/login')\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBasicUser();\r\n    }, [store.getState().user])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`}>\r\n            <p className={`${stylePrefix}-title`}>律政云</p>\r\n            <div\r\n                className={`${stylePrefix}-user-layout`}\r\n                onMouseOver={() => setIsMouse(true)}\r\n                onMouseOut={() => setIsMouse(false)}\r\n            >\r\n                <img onClick={() => console.log(avatar)} src={avatar} alt=\"avatar\" className={`${stylePrefix}-avatar`} />\r\n                <IconFont\r\n                    type='icon-xiabiao'\r\n                    className={`${stylePrefix}-icon`}\r\n                    style={{\r\n                        color: isMouse ? '#000' : '#fff'\r\n                    }}\r\n                />\r\n                <div\r\n                    className={`${stylePrefix}-user-operation-layout`}\r\n                    style={{\r\n                        display: isMouse ? 'block' : 'none'\r\n                    }}\r\n                >\r\n                    <p\r\n                        className={`${stylePrefix}-user-operation-word`}\r\n                        onClick={exitLogin}\r\n                    >\r\n                        退出登录\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport 'styles/home/sider.scss'\r\nimport siderData from 'static/sider.json'\r\nimport { IconFont } from 'components/common/utils'\r\n\r\nconst stylePrefix = 'home-sider'\r\n\r\ninterface SiderConfig {\r\n    activeIndex: number\r\n    setActiveSiderIndex: React.Dispatch<React.SetStateAction<number>>\r\n}\r\n\r\nexport default function Sider({ activeIndex, setActiveSiderIndex }: SiderConfig) {\r\n    return (\r\n        <div className={`${stylePrefix}-layout`}>\r\n            {\r\n                siderData.map((siderItem, index) => {\r\n                    return <div\r\n                        key={index}\r\n                        className={`${stylePrefix}-sider-item`}\r\n                        onClick={() => setActiveSiderIndex(index)}\r\n                    >\r\n                        <IconFont type={siderItem.icon} className={`${stylePrefix}-sider-icon`} />\r\n                        <p className={`${stylePrefix}-sider-title`}>{siderItem.title}</p>\r\n                    </div>\r\n                })\r\n            }\r\n            <div\r\n                className={`${stylePrefix}-shadow`}\r\n                style={{\r\n                    top: 60 * activeIndex\r\n                }}\r\n            >\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport 'styles/common/authorShow.scss'\r\n\r\nconst stylePrefix = 'common-author'\r\n\r\ninterface AuthorShowConfig {\r\n    avatar: string\r\n    realname: string\r\n    createTime: string\r\n}\r\n\r\nexport default function AuthorShow({ avatar, realname, createTime }: AuthorShowConfig) {\r\n    return (\r\n        <div className={`${stylePrefix}-author-layout`} >\r\n            <img src={avatar} alt=\"头像\" className={`${stylePrefix}-avatar`} />\r\n            <div className={`${stylePrefix}-author-info`} >\r\n                <p className={`${stylePrefix}-realname`} >{realname}</p>\r\n                <p className={`${stylePrefix}-createTime`} >{createTime}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Modal, Button } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { AuthorConfig, successToast, errorToast } from 'components/common/utils'\r\nimport AuthorShow from 'components/common/AuthorShow'\r\nimport Loading2 from 'components/common/Loading2'\r\nimport { getUserVerifyDetailApi, submitUserVerifyResultApi } from 'http/UserApi'\r\nimport 'styles/home/userVerifyDetail.scss'\r\n\r\nconst stylePrefix = 'home-verifyDetail'\r\n\r\ninterface UserVerifyDetailConfig {\r\n    visible: boolean\r\n    setVisible: React.Dispatch<React.SetStateAction<boolean>>\r\n    verifyID: number | null\r\n    getUserVerifyList: () => Promise<void>\r\n}\r\n\r\ninterface UserVerifyDetailDataConfig {\r\n    author: AuthorConfig,\r\n    createTime: string, // 创建时间，3个月前\r\n    content: string, // 内容\r\n    files: string[]\r\n}\r\n\r\nexport default function UserVerifyDetail({ visible, setVisible, verifyID, getUserVerifyList }: UserVerifyDetailConfig) {\r\n    const [verifyDetail, setVerifyDetail] = useState<UserVerifyDetailDataConfig | null>(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const handleCancel = () => {\r\n        setVisible(false)\r\n        getUserVerifyList()\r\n    }\r\n    const getVerifyDetail = async () => {\r\n        if (verifyID !== null) {\r\n            setLoading(true)\r\n            const res = await getUserVerifyDetailApi({\r\n                id: verifyID\r\n            })\r\n            if (res.code === 0) {\r\n                setLoading(false)\r\n                setVerifyDetail(res.data)\r\n            }\r\n        }\r\n    }\r\n    const submit = async (result: boolean) => {\r\n        if (verifyID) {\r\n            const res = await submitUserVerifyResultApi({\r\n                id: verifyID,\r\n                isAgree: result\r\n            })\r\n            if (res.code === 0) {\r\n                successToast(res.message)\r\n            } else {\r\n                errorToast(res.message)\r\n            }\r\n            handleCancel()\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getVerifyDetail()\r\n    }, [verifyID])\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"用户审核详情\"\r\n            onCancel={handleCancel}\r\n            footer={[]}\r\n        >\r\n            {\r\n                loading\r\n                    ? <Loading2 />\r\n                    : verifyDetail && <>\r\n                        <AuthorShow\r\n                            avatar={verifyDetail.author.avatar}\r\n                            realname={verifyDetail.author.realname}\r\n                            createTime={verifyDetail.createTime}\r\n                        />\r\n                        <p className={`${stylePrefix}-content`} >{verifyDetail.content}</p>\r\n                        <div className={`${stylePrefix}-image-layout`}>\r\n                            {\r\n                                verifyDetail.files.map((file, index) => {\r\n                                    return <img\r\n                                        key={index}\r\n                                        src={file}\r\n                                        className={`${stylePrefix}-image`}\r\n                                        alt=\"图片\"\r\n                                    />\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className={`${stylePrefix}-btn-layout`} >\r\n                            <Button type=\"primary\" onClick={() => submit(true)} >同意审核</Button>\r\n                            <Button type=\"primary\" danger onClick={() => submit(false)} >不同意审核</Button>\r\n                        </div>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport 'styles/home/userVerify.scss'\r\nimport { getUserVerifyListApi } from 'http/UserApi'\r\nimport { AuthorConfig, errorToast } from 'components/common/utils'\r\nimport Loading2 from 'components/common/Loading2'\r\nimport UserVerifyDetail from './UserVerifyDetail'\r\nimport AuthorShow from 'components/common/AuthorShow'\r\nimport userVerifyModelList from 'model/userVerifyList.json'\r\n\r\nconst stylePrefix = 'home-userverify'\r\n\r\ninterface UserVerifyItemConfig {\r\n    id: number, // 审核ID\r\n    author: AuthorConfig\r\n    createTime: string, // 创建时间（距现在多久），如3个月前\r\n    abstract: string, // 摘要30字\r\n    firstPicture: string, // 第一张图片，如果没有则不传\r\n}\r\n\r\nexport default function UserVerify() {\r\n    const [loading, setLoading] = useState(false)\r\n    const [userVerifyList, setUserVerifyList] = useState<UserVerifyItemConfig[]>([])\r\n    const [visible, setVisible] = useState(false)\r\n    const [verifyID, setVerifyID] = useState<null | number>(null)\r\n\r\n    const getUserVerifyList = async () => {\r\n        setLoading(true)\r\n        const res = await getUserVerifyListApi()\r\n        if (res.code === 0) {\r\n            console.log(res.data);\r\n            setUserVerifyList(res.data)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n    const openModal = (id: number) => {\r\n        setVisible(true)\r\n        setVerifyID(id)\r\n    }\r\n    useEffect(() => {\r\n        getUserVerifyList()\r\n    }, [])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            {\r\n                loading\r\n                    ? <Loading2 backgroundColor='#fff' />\r\n                    : userVerifyList.length !== 0\r\n                        ? userVerifyList.map((userVerifyItem, index) => {\r\n                            return <div\r\n                                key={index}\r\n                                className={`${stylePrefix}-user-verify-item`}\r\n                                onClick={() => openModal(userVerifyItem.id)}\r\n                            >\r\n                                <div className={`${stylePrefix}-user-verify-item-main`}>\r\n                                    <AuthorShow\r\n                                        avatar={userVerifyItem.author.avatar}\r\n                                        realname={userVerifyItem.author.realname}\r\n                                        createTime={userVerifyItem.createTime}\r\n                                    />\r\n                                    <p className={`${stylePrefix}-abstract`}>{userVerifyItem.abstract}</p>\r\n                                </div>\r\n                                {\r\n                                    userVerifyItem.firstPicture &&\r\n                                    <img src={userVerifyItem.firstPicture} alt=\"图片\" className={`${stylePrefix}-picture`} />\r\n                                }\r\n                            </div>\r\n                        })\r\n                        : <p className='empty-tip' >暂无信息</p>\r\n            }\r\n            <UserVerifyDetail\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                verifyID={verifyID}\r\n                getUserVerifyList={getUserVerifyList}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Input, Modal } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport 'styles/home/alterUserInfoModal.scss'\r\nimport { alter_user_info_api, get_user_detail_info_api, IAlterUserInfo } from 'http/UserApi'\r\nimport { errorToast, httpIsSuccess, successToast } from 'components/common/utils'\r\nimport Loading2 from 'components/common/Loading2'\r\n\r\nconst stylePrefix = 'home-alterUser'\r\n\r\ninterface AlterUserInfoModalConfig {\r\n    visible: boolean\r\n    setVisible: React.Dispatch<React.SetStateAction<boolean>>\r\n    userID: number | null;\r\n    getUserList: (page: number) => Promise<void>\r\n    current: number\r\n}\r\n\r\ninterface UserDetailConfig {\r\n    name: string | null;\r\n    phoneNumber: string | null;\r\n    weixin_number: string | null;\r\n    lawyer_number: string | null;\r\n}\r\n\r\nexport default function AlterUserInfoModal({ visible, setVisible, userID, getUserList, current }: AlterUserInfoModalConfig) {\r\n    const [loading, setLoading] = useState(false)\r\n    const [user, setUser] = useState<UserDetailConfig | null>(null)\r\n    const handleOk = async () => {\r\n        if (user && user.name && user.phoneNumber && user.lawyer_number && user.weixin_number) {\r\n            setLoading(true)\r\n            const res = await alter_user_info_api((user as IAlterUserInfo))\r\n            if (httpIsSuccess(res.code)) {\r\n                getUserList(current)\r\n                successToast('修改成功')\r\n            } else {\r\n                errorToast(res.message)\r\n            }\r\n            setVisible(false)\r\n            setLoading(false)\r\n        }\r\n    }\r\n    // 处理输入框变化\r\n    const handleInput = (key: string, value: string) => {\r\n        if (user) {\r\n            setUser({\r\n                ...user,\r\n                [key]: value\r\n            })\r\n        }\r\n    }\r\n    // 获取用户详细信息\r\n    const getUserDetail = async () => {\r\n        if (userID !== null) {\r\n            const res = await get_user_detail_info_api({ userID });\r\n            if (httpIsSuccess(res.code)) {\r\n                setUser(res.data)\r\n            } else {\r\n                errorToast(res.message)\r\n            }\r\n        }\r\n    }\r\n    const handleCancel = () => {\r\n        setVisible(false)\r\n    }\r\n    useEffect(() => {\r\n        getUserDetail()\r\n    }, [userID])\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"修改用户信息\"\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            footer={[\r\n                <Button key=\"back\" onClick={handleCancel}>\r\n                    返回\r\n                </Button>,\r\n                <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}>\r\n                    提交\r\n                </Button>,\r\n            ]}\r\n        >\r\n            {\r\n                user ? <>\r\n                    <Input\r\n                        value={user.name || ''}\r\n                        placeholder='姓名'\r\n                        onChange={(e) => handleInput('name', e.target.value)}\r\n                        className={`${stylePrefix}-input`}\r\n                    />\r\n                    <Input\r\n                        value={user.phoneNumber || ''}\r\n                        placeholder='手机号'\r\n                        onChange={(e) => handleInput('phoneNumber', e.target.value)}\r\n                        className={`${stylePrefix}-input`}\r\n                    />\r\n                    <Input\r\n                        value={user.lawyer_number || ''}\r\n                        placeholder='律师证号'\r\n                        onChange={(e) => handleInput('lawyer_number', e.target.value)}\r\n                        className={`${stylePrefix}-input`}\r\n                    />\r\n                    <Input\r\n                        value={user.weixin_number || ''}\r\n                        placeholder='微信号'\r\n                        onChange={(e) => handleInput('weixin_number', e.target.value)}\r\n                        className={`${stylePrefix}-input`}\r\n                    />\r\n                </>\r\n                    : <Loading2 />\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport 'styles/home/userList.scss'\r\nimport { Table, Button, Select, Space } from 'antd';\r\nimport { AuthorConfig, IndentifyConfig, errorToast, successToast, httpIsSuccess } from 'components/common/utils';\r\nimport { resetPasswordApi, get_user_list_api, alter_user_identify_api, reset_user_password_api } from 'http/UserApi';\r\nimport { TablePaginationConfig } from 'antd/lib/table';\r\nimport AlterUserInfoModal from './AlterUserInfoModal';\r\nimport md5 from 'md5';\r\nimport indentifyList from 'static/identify.json'\r\n\r\nconst stylePrefix = 'home-userList'\r\nconst { Option } = Select;\r\n\r\nexport interface UserItemConfig {\r\n    key: string\r\n    isMy: boolean\r\n    avatar: string,\r\n    name: string,\r\n    identify: IndentifyConfig;\r\n}\r\n\r\nexport default function UserList() {\r\n    const [loading, setLoading] = useState(false)\r\n    const [userList, setUserList] = useState<UserItemConfig[]>([])\r\n    const [current, setCurrent] = useState(1) // 当前page\r\n    const [visible, setVisible] = useState(false)\r\n    const [selectedUserID, setSelectedUserID] = useState<number|null>(null)\r\n    const [num, setNum] = useState(0)\r\n    // 修改用户身份\r\n    const handleChange = async (userID: number, identifyID: number) => {\r\n        const res = await alter_user_identify_api({\r\n            userID: userID,\r\n            identifyID: identifyID\r\n        })\r\n        httpIsSuccess(res.code) ? successToast('修改成功') : errorToast(res.message)\r\n    }\r\n    // 重置用户密码\r\n    const resetPassword = async (id: number) => {\r\n        const res = await reset_user_password_api({\r\n            userID: id,\r\n            password: md5('123456')\r\n        })\r\n        httpIsSuccess(res.code) ? successToast('重置密码成功') : errorToast(res.message)\r\n    }\r\n    const openModal = (userID: number) => {\r\n        setSelectedUserID(userID)\r\n        setVisible(true)\r\n    }\r\n    const columns = [\r\n        {\r\n            title: '姓名',\r\n            dataIndex: 'author',\r\n            key: 'author',\r\n            render: (_author: AuthorConfig, record: UserItemConfig) => {\r\n                return (\r\n                    <div className={`${stylePrefix}-author`}>\r\n                        <img className={`${stylePrefix}-avatar`} src={record.avatar} alt=\"头像\" />\r\n                        <p className={`${stylePrefix}-realname`} >{record.name}</p>\r\n                        {\r\n                            record.isMy && <div className={`${stylePrefix}-tag`}>我</div>\r\n                        }\r\n                    </div>\r\n                )\r\n            },\r\n        },\r\n        {\r\n            title: '身份',\r\n            key: 'identify',\r\n            dataIndex: 'identify',\r\n            render: (indentify: IndentifyConfig, record: UserItemConfig) => (\r\n                <Select\r\n                    disabled={record.isMy}\r\n                    defaultValue={indentify.id}\r\n                    style={{ width: 120 }}\r\n                    onChange={(identifyID) => handleChange(parseInt(record.key), identifyID)}\r\n                >\r\n                    {\r\n                        indentifyList.map((identifyItem, index) => {\r\n                            return <Option key={index} value={identifyItem.id}>{identifyItem.value}</Option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            ),\r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'action',\r\n            render: (text: UserItemConfig) => {\r\n                return (\r\n                    <Space size='large' >\r\n                        <Button type=\"primary\" onClick={() => openModal(parseInt(text.key))} >修改</Button>\r\n                        {\r\n                            <Button\r\n                                type=\"primary\"\r\n                                onClick={() => resetPassword(parseInt(text.key))}\r\n                            >\r\n                                重置密码\r\n                            </Button>\r\n                        }\r\n                    </Space>\r\n                )\r\n            },\r\n        },\r\n    ];\r\n    const getUserList = async () => {\r\n        setLoading(true)\r\n        const res = await get_user_list_api()\r\n        if (httpIsSuccess(res.code)) {\r\n            const userListTemp = res.data.map((userItem: any, index: number) => {\r\n                return {\r\n                    ...userItem,\r\n                    key: index.toString()\r\n                }\r\n            })\r\n            setNum(res.data.length)\r\n            setUserList(userListTemp)\r\n            setLoading(false)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n    }\r\n    const handleTableChange = (pagination: TablePaginationConfig) => {\r\n        if (pagination.current) {\r\n            setCurrent(pagination.current)\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getUserList()\r\n    }, [])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            <Table\r\n                loading={loading}\r\n                className={`${stylePrefix}-table`}\r\n                columns={columns} \r\n                dataSource={userList}\r\n                pagination={{\r\n                    current: current,\r\n                    pageSize: 10, // 一页多少项\r\n                    total: num, // 总共多少项\r\n                }}\r\n                onChange={handleTableChange}\r\n            />\r\n            <AlterUserInfoModal\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                userID={selectedUserID}\r\n                getUserList={getUserList}\r\n                current={current}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios'\r\nimport { httpConfig, getHeaders } from 'components/common/utils'\r\n\r\ninterface getErrorListConfig {\r\n    identityID: number\r\n    page: number\r\n}\r\ninterface getErrorDetailConfig {\r\n    errorID: number\r\n}\r\n\r\n// 获取错误列表\r\nexport const getErrorListApi = async (data: getErrorListConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: '/api/error/list',\r\n        params: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取错误详情\r\nexport const getErrorDetailApi = async (data: getErrorDetailConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: '/api/error',\r\n        params: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Modal } from 'antd'\r\nimport AuthorShow from 'components/common/AuthorShow'\r\nimport { AuthorConfig, errorToast } from 'components/common/utils'\r\nimport Loading2 from 'components/common/Loading2'\r\nimport errorDetailModel from 'model/errorDetail.json'\r\nimport 'styles/home/errorDetailModal.scss'\r\nimport { getErrorDetailApi } from 'http/ErrorMessageApi'\r\n\r\nconst stylePrefix = 'home-errorDetail'\r\n\r\ninterface ErrorDetailConfig {\r\n    visible: boolean\r\n    setVisible: React.Dispatch<React.SetStateAction<boolean>>\r\n    errorID: number | null\r\n}\r\n\r\ninterface ErrorDetailDataConfig {\r\n    author: AuthorConfig,\r\n    createTime: string, // 创建时间，3个月前\r\n    content: string, // 内容\r\n    files: string[]\r\n}\r\n\r\nexport default function ErrorDetailModel({ visible, setVisible, errorID }: ErrorDetailConfig) {\r\n    const [errorDetail, setErrorDetail] = useState<ErrorDetailDataConfig | null>(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const handleCancel = () => {\r\n        setVisible(false)\r\n    }\r\n    const getErrorDetail = async () => {\r\n        if (errorID === null) {\r\n            return\r\n        }\r\n        setLoading(true)\r\n        const res = await getErrorDetailApi({\r\n            errorID: errorID\r\n        })\r\n        if (res.code === 0) {\r\n            setErrorDetail(res.data)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n        setLoading(false)\r\n    }\r\n    useEffect(() => {\r\n        getErrorDetail()\r\n    }, [errorID])\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"查看错误详情\"\r\n            onCancel={handleCancel}\r\n            footer={[]}\r\n        >\r\n            {\r\n                loading\r\n                    ? <Loading2 />\r\n                    : <>\r\n                        {\r\n                            errorDetail && <AuthorShow\r\n                                avatar={errorDetail.author.avatar}\r\n                                realname={errorDetail.author.realname}\r\n                                createTime={errorDetail.createTime}\r\n                            />\r\n                        }\r\n                        <p className={`${stylePrefix}-content`} >{errorDetail?.content}</p>\r\n                        <div className={`${stylePrefix}-img-layout`} >\r\n                            {\r\n                                errorDetail && errorDetail.files.map((file, index) => {\r\n                                    return <img\r\n                                        className={`${stylePrefix}-img`}\r\n                                        key={index}\r\n                                        src={file}\r\n                                        alt=\"图片\"\r\n                                    />\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport 'styles/home/errorList.scss'\r\nimport { AuthorConfig, errorToast, IndentifyConfig } from 'components/common/utils'\r\nimport 'styles/home/errorList.scss'\r\nimport Loading2 from 'components/common/Loading2'\r\nimport AuthorShow from 'components/common/AuthorShow'\r\nimport { Radio, Button } from 'antd';\r\nimport { RadioChangeEvent } from 'antd/lib/radio'\r\nimport { getIdentifyListApi } from 'http/UserApi'\r\nimport ErrorDetailModel from './ErrorDetailModel'\r\nimport { getErrorListApi } from 'http/ErrorMessageApi'\r\n\r\nconst stylePrefix = 'home-error'\r\n\r\ninterface ErrorItem {\r\n    id: number, // 错误单项ID\r\n    author: AuthorConfig,\r\n    createTime: string, // 创建时间\r\n    abstract: string, // 摘要30字\r\n}\r\n\r\nexport default function ErrorList() {\r\n    const [loading, setLoading] = useState(false)\r\n    const [errorList, setErrorList] = useState<ErrorItem[]>([])\r\n    const [radioIdentifyID, setRadioIdentifyID] = useState(-1)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [pageNum, setPageNum] = useState(1)\r\n    const [identifyList, setIdentifyList] = useState<IndentifyConfig[]>([])\r\n    const [visible, setVisible] = useState(false)\r\n    const [errorID, setErrorID] = useState<number | null>(null)\r\n\r\n    const getErrorList = async (page: number) => {\r\n        setLoading(true)\r\n        const res = await getErrorListApi({\r\n            identityID: radioIdentifyID,\r\n            page: page\r\n        })\r\n        console.log(res);\r\n        if (res.code === 0) {\r\n            setErrorList(res.data.list)\r\n            setPageNum(res.data.page)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n        setLoading(false)\r\n    }\r\n    const getIdentifyList = async () => {\r\n        const res = await getIdentifyListApi();\r\n        if (res.code === 0) {\r\n            setIdentifyList(res.data)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n    }\r\n    const onChange = (e: RadioChangeEvent) => {\r\n        setRadioIdentifyID(e.target.value)\r\n        setCurrentPage(1)\r\n    }\r\n    const openModal = (id: number) => {\r\n        setErrorID(id)\r\n        setVisible(true)\r\n    }\r\n    useEffect(() => {\r\n        getErrorList(currentPage)\r\n        getIdentifyList()\r\n    }, [currentPage, radioIdentifyID])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            <Radio.Group className={`${stylePrefix}-radio-group`} onChange={onChange} value={radioIdentifyID}>\r\n                <Radio value={-1}>全部</Radio>\r\n                {\r\n                    identifyList.map((identifyItem, index) => {\r\n                        return <Radio\r\n                            key={index}\r\n                            value={identifyItem.id}\r\n                        >\r\n                            {identifyItem.value}\r\n                        </Radio>\r\n                    })\r\n                }\r\n            </Radio.Group>\r\n            {\r\n                loading\r\n                    ? <Loading2 backgroundColor='#fff' />\r\n                    :\r\n                    errorList.map((errorItem, index) => {\r\n                        return <div\r\n                            key={index}\r\n                            className={`${stylePrefix}-errorItem-layout`}\r\n                            onClick={() => openModal(errorItem.id)}\r\n                        >\r\n                            <AuthorShow\r\n                                avatar={errorItem.author.avatar}\r\n                                realname={errorItem.author.realname}\r\n                                createTime={errorItem.createTime}\r\n                            />\r\n                            <p className={`${stylePrefix}-abstract`} >{errorItem.abstract}</p>\r\n                        </div>\r\n                    })\r\n            }\r\n            {\r\n                errorList.length !== 0\r\n                    ? <div className={`${stylePrefix}-btn-layout`}>\r\n                        <Button size='large' onClick={() => setCurrentPage(currentPage - 1)} disabled={currentPage === 1} >Previous</Button>\r\n                        <Button size='large' onClick={() => setCurrentPage(currentPage + 1)} disabled={currentPage === pageNum} >Next</Button>\r\n                    </div>\r\n                    : <p className='empty-tip' >暂无信息</p>\r\n            }\r\n            <ErrorDetailModel\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                errorID={errorID}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport 'styles/pages/home.scss'\r\nimport { Provider } from 'react-redux'\r\nimport store from 'redux/store'\r\nimport HeaderContainer from 'containers/HeaderContainer'\r\nimport Sider from 'components/home/Sider'\r\nimport UserVerify from 'components/home/UserVerify'\r\nimport UserList from 'components/home/UserList'\r\nimport ErrorList from 'components/home/ErrorList'\r\n\r\nconst stylePrefix = 'page-home'\r\n\r\nexport default function Home() {\r\n    const [activeSiderIndex, setActiveSiderIndex] = useState(0)\r\n    const mainPageMap = new Map();\r\n    mainPageMap.set(0, <UserList />)\r\n    mainPageMap.set(1, <UserVerify />)\r\n    mainPageMap.set(2, <ErrorList />)\r\n    return (\r\n        <div className={`${stylePrefix}-layout`}>\r\n            <Provider store={store}>\r\n                <HeaderContainer />\r\n            </Provider>\r\n            <div className={`${stylePrefix}-main`} >\r\n                <Sider activeIndex={activeSiderIndex} setActiveSiderIndex={setActiveSiderIndex} />\r\n                {\r\n                    mainPageMap.get(activeSiderIndex)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { createFromIconfontCN } from '@ant-design/icons';\r\nimport { message } from 'antd';\r\nimport cookies from 'react-cookies'\r\n\r\nexport const IconFont = createFromIconfontCN({\r\n    scriptUrl: 'http://at.alicdn.com/t/font_2103484_f8ge73a2w6v.js',\r\n});\r\n\r\nexport interface httpConfig {\r\n    code: number\r\n    data: any\r\n    message: string\r\n}\r\n\r\nexport const successToast = (msg: string) => {\r\n    message.success(msg);\r\n}\r\n\r\nexport const errorToast = (msg: string) => {\r\n    message.error(msg);\r\n}\r\n\r\nexport const getToken = (): string => {\r\n    return cookies.load('Authorization')\r\n}\r\n\r\nexport const setToken = (token: string) => {\r\n    cookies.save('Authorization', token, {\r\n        maxAge: 60 * 60 * 24 * 7\r\n    })\r\n}\r\n\r\nexport const removeToken = () => {\r\n    cookies.remove('Authorization')\r\n}\r\n\r\nexport const getHeaders = () => {\r\n    const token: string = getToken()\r\n    return {\r\n        'Authorization': token\r\n    }\r\n}\r\n\r\nexport interface AuthorConfig {\r\n    id: number, // 作者ID\r\n    avatar: string, // 作者的头像\r\n    realname: string, // 作者的真实姓名\r\n}\r\n\r\nexport interface IndentifyConfig {\r\n    id: number\r\n    value: string\r\n}\r\n\r\nexport const httpIsSuccess = (code: number) => {\r\n    return code === 0;\r\n}","export const backIP = 'api'\r\n\r\nexport const testIP = 'https://mock.yonyoucloud.com/mock/16533/api'","import axios from \"axios\";\r\n\r\n// 创建axios默认请求\r\n// axios.defaults.baseURL = \"http://106.14.174.206/api\"; // 后端代码\r\n// 配置超时时间\r\naxios.defaults.timeout = 100000;\r\n// 添加响应拦截器\r\naxios.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninterface BaseHttpResponse {\r\n  code: number;\r\n  data: any;\r\n  message: string;\r\n}\r\n\r\n// 请求的方式\r\ntype IMethod = 'GET' | 'POST' | 'PUT' | 'DELETE'\r\n\r\nclass Http {\r\n  static request(url: string, data: object, method: IMethod, headers?: object): Promise<BaseHttpResponse> {\r\n    if (method === 'GET') {\r\n      return new Promise((resolve, reject) => {\r\n        axios\r\n          .get(url, { data: data, headers: headers })\r\n          .then(res => {\r\n            resolve(res.data);\r\n          })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise((resolve, reject) => {\r\n        axios({\r\n          method: method,\r\n          data: data,\r\n          headers: headers,\r\n          url: url\r\n        }).then(res => {\r\n          resolve(res.data);\r\n        })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Http","import axios from 'axios'\r\nimport { backIP, testIP } from 'components/common/config'\r\nimport { httpConfig, getHeaders } from 'components/common/utils'\r\nimport Http from './Servies'\r\n\r\ninterface loginConfig {\r\n    username: string\r\n    password: string\r\n    isAdmin: boolean\r\n}\r\n\r\ninterface getVerifyDetailConfig {\r\n    id: number\r\n}\r\ninterface alterUserConfig {\r\n    userID: number\r\n    username: string\r\n    realname: string\r\n    phoneNumber: string\r\n}\r\ninterface submitUserVerifyResultConfig {\r\n    id: number\r\n    isAgree: boolean\r\n}\r\ninterface resetPasswordConfig {\r\n    userID: number\r\n    password: string\r\n}\r\ninterface alterUserIdentifyConfig {\r\n    userID: number\r\n    identifyID: number\r\n}\r\n\r\n// 登录\r\nexport const loginApi = async (data: loginConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/user/login`,\r\n        data: data\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取所有身份\r\nexport const getIdentifyListApi = async () => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/user/identify`,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取用户验证列表\r\nexport const getUserVerifyListApi = async () => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/user/verify/list`,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取用户验证材料信息\r\nexport const getUserVerifyDetailApi = async (data: getVerifyDetailConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/user/verify`,\r\n        params: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取用户列表信息\r\nexport const getUserListApi = async () => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/admin/user/list`,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 修改用户信息\r\nexport const alterUserApi = async (data: alterUserConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/admin/realname`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 提交用户审核结果\r\nexport const submitUserVerifyResultApi = async (data: submitUserVerifyResultConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/user/verify`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 重置密码\r\nexport const resetPasswordApi = async (data: resetPasswordConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/admin/password`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 修改用户身份\r\nexport const alterUserIdentifyApi = async (data: alterUserIdentifyConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/admin/indentify`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\ninterface ILoginPassword {\r\n    phoneNumber: string;\r\n    password: string;\r\n    verification_code: string;\r\n    platform: number;\r\n}\r\n\r\ninterface IGetBasicUserInfo {\r\n    userID?: number;\r\n}\r\n\r\ninterface IAlterUserIdentify {\r\n    userID: number;\r\n    identifyID: number;\r\n}\r\n\r\ninterface IResetUserPassword {\r\n    userID: number;\r\n    password: string;\r\n}\r\n\r\ninterface IGetDetailUserInfo {\r\n    userID: number;\r\n}\r\n\r\nexport interface IAlterUserInfo {\r\n    name: string ;\r\n    phoneNumber: string ;\r\n    weixin_number: string ;\r\n    lawyer_number: string ;\r\n}\r\n\r\n// 获取图片验证码\r\nexport const get_verify_code_api = async () => {\r\n    return await Http.request(`${backIP}/public/verificationCode/image`, {}, 'GET')\r\n}\r\n\r\n// 管理员手机号密码登录\r\nexport const login_password_api = async (data: ILoginPassword) => {\r\n    return await Http.request(`${backIP}/login/password`, data, 'POST')\r\n}\r\n\r\n// 获取管理员基本信息\r\nexport const get_basic_user_info_api = async (data: IGetBasicUserInfo) => {\r\n    return await Http.request(`${backIP}/user/getBasicInfo`, data, 'GET', getHeaders())\r\n}\r\n\r\n// 获取用户列表\r\nexport const get_user_list_api = async () => {\r\n    return await Http.request(`${testIP}/admin/userList`, {}, 'GET', getHeaders())\r\n}\r\n\r\n// 修改用户身份\r\nexport const alter_user_identify_api = async (data: IAlterUserIdentify) => {\r\n    return await Http.request(`${testIP}/admin/user/identify`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 重置用户密码\r\nexport const reset_user_password_api = async (data: IResetUserPassword) => {\r\n    return await Http.request(`${testIP}/admin/user/password`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 获取用户详细信息\r\nexport const get_user_detail_info_api = async (data: IGetDetailUserInfo) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'GET', getHeaders())\r\n}\r\n\r\n// 修改用户信息\r\nexport const alter_user_info_api = async (data: IAlterUserInfo) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'PUT', getHeaders())\r\n}"],"sourceRoot":""}