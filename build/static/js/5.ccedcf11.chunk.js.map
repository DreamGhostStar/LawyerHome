{"version":3,"sources":["redux/actions.ts","images/logo.png","images/loading.gif","containers/HeaderContainer.tsx","components/home/Header.tsx","components/home/Sider.tsx","components/common/AuthorShow.tsx","components/home/UserVerifyDetail.tsx","components/home/UserVerify.tsx","components/home/AlterUserInfoModal.tsx","components/home/UserList.tsx","http/ErrorMessageApi.tsx","components/home/ErrorDetailModel.tsx","components/home/ErrorList.tsx","pages/home.tsx","components/common/utils.tsx","http/Servies.tsx","http/UserApi.tsx","components/common/config.ts"],"names":["transform_user","user","type","USER_DATA","data","module","exports","connect","state","history","useHistory","useState","avatar","setAvatar","isMouse","setIsMouse","getBasicUser","a","getToken","store","getState","get_basic_user_info_api","res","tempUserData","errorToast","push","useEffect","className","src","logo","alt","placeholder","loadingImage","onMouseOver","onMouseOut","onClick","console","log","style","color","display","removeToken","successToast","Sider","activeIndex","setActiveSiderIndex","siderData","map","siderItem","index","key","icon","title","top","AuthorShow","realname","createTime","UserVerifyDetail","visible","setVisible","verifyID","getUserVerifyList","verifyDetail","setVerifyDetail","loading","setLoading","handleCancel","getVerifyDetail","getUserVerifyDetailApi","id","code","submit","result","submitUserVerifyResultApi","isAgree","message","onCancel","footer","Loading2","author","content","files","file","danger","UserVerify","userVerifyList","setUserVerifyList","setVerifyID","getUserVerifyListApi","backgroundColor","length","userVerifyItem","abstract","firstPicture","AlterUserInfoModal","getUserList","current","username","setUsername","setRealname","phoneNumber","phone","setPhone","handleOk","alterUserApi","userID","onOk","value","onChange","e","target","Option","Select","UserList","userList","setUserList","identifyList","setIdentifyList","setCurrent","selectedUser","setSelectedUser","num","setNum","handleChange","identifyID","alterUserIdentifyApi","resetPassword","resetPasswordApi","password","md5","columns","dataIndex","render","record","isMy","indentify","disabled","defaultValue","width","identifyItem","text","size","getUserListApi","userListTemp","list","userItem","toString","getIdentifyList","getIdentifyListApi","dataSource","pagination","pageSize","total","getErrorListApi","axios","method","url","params","headers","getHeaders","getErrorDetailApi","ErrorDetailModel","errorID","errorDetail","setErrorDetail","getErrorDetail","ErrorList","errorList","setErrorList","radioIdentifyID","setRadioIdentifyID","currentPage","setCurrentPage","pageNum","setPageNum","setErrorID","getErrorList","page","identityID","Group","errorItem","Home","activeSiderIndex","mainPageMap","Map","set","HeaderContainer","get","IconFont","createFromIconfontCN","scriptUrl","msg","success","error","cookies","load","setToken","token","save","maxAge","remove","httpIsSuccess","defaults","timeout","interceptors","response","use","Promise","reject","Http","resolve","then","catch","err","get_verify_code_api","request","login_password_api"],"mappings":"sHAAA,8CASaA,EAAiB,SAACC,GAAD,MAA0B,CACpDC,KAAMC,IACNC,KAAMH,K,sFCXVI,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,4lBCG5BC,mBACX,SAAAC,GAAK,MAAK,CACNP,KAAMO,KAEV,CAACR,oBAJUO,ECqBA,YAAmD,IAAjCP,EAAgC,EAAhCA,eACvBS,EAAUC,cAD6C,EAEjCC,mBAAS,IAFwB,mBAEtDC,EAFsD,KAE9CC,EAF8C,OAG/BF,oBAAS,GAHsB,mBAGtDG,EAHsD,KAG7CC,EAH6C,KAIvDC,EAAY,uCAAG,8BAAAC,EAAA,0DACKC,eACRC,IAAMC,WAAWnB,KAFd,gCAGKoB,YAAwB,IAH7B,OAGPC,EAHO,OAIPC,EAAgCD,EAAIlB,KAC1CS,EAAUU,EAAaX,QACvBZ,EAAeuB,GANF,OASZJ,IAAMC,WAAWnB,OAClBuB,YAAW,4BACXf,EAAQgB,KAAK,WAXA,2CAAH,qDAuBlB,OAHAC,qBAAU,WACNV,MACD,CAACG,IAAMC,WAAWnB,OAEjB,yBAAK0B,UAAS,UA3CF,cA2CE,YACV,yBAAKA,UAAS,UA5CN,cA4CM,iBACV,yBACIC,IAAKC,IACLC,IAAI,OACJC,YAAaC,IACbL,UAAS,UAjDT,cAiDS,WAEb,uBAAGA,UAAS,UAnDR,cAmDQ,eAAZ,uBAEJ,yBACIA,UAAS,UAtDL,cAsDK,gBACTM,YAAa,kBAAMlB,GAAW,IAC9BmB,WAAY,kBAAMnB,GAAW,KAE7B,yBAAKoB,QAAS,kBAAMC,QAAQC,IAAIzB,IAASgB,IAAKhB,EAAQkB,IAAI,SAASH,UAAS,UA1DxE,cA0DwE,aAC5E,kBAAC,IAAD,CACIzB,KAAK,eACLyB,UAAS,UA7DT,cA6DS,SACTW,MAAO,CACHC,MAAOzB,EAAU,OAAS,UAGlC,yBACIa,UAAS,UAnET,cAmES,0BACTW,MAAO,CACHE,QAAS1B,EAAU,QAAU,SAGjC,uBACIa,UAAS,UAzEb,cAyEa,wBACTQ,QAzCF,WACdM,cACAC,YAAa,wCACbjC,EAAQgB,KAAK,YAoCD,kC,kBCrEL,SAASkB,EAAT,GAAmE,IAAlDC,EAAiD,EAAjDA,YAAaC,EAAoC,EAApCA,oBACzC,OACI,yBAAKlB,UAAS,UATF,aASE,YAENmB,EAAUC,KAAI,SAACC,EAAWC,GACtB,OAAO,yBACHC,IAAKD,EACLtB,UAAS,UAdb,aAca,eACTQ,QAAS,kBAAMU,EAAoBI,KAEnC,kBAAC,IAAD,CAAU/C,KAAM8C,EAAUG,KAAMxB,UAAS,UAjB7C,aAiB6C,iBACzC,uBAAGA,UAAS,UAlBhB,aAkBgB,iBAAiCqB,EAAUI,WAInE,yBACIzB,UAAS,UAvBL,aAuBK,WACTW,MAAO,CACHe,IAAK,GAAKT,M,2CCnBf,SAASU,EAAT,GAAyE,IAAnD1C,EAAkD,EAAlDA,OAAQ2C,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,WACnD,OACI,yBAAK7B,UAAS,UAVF,gBAUE,mBACV,yBAAKC,IAAKhB,EAAQkB,IAAI,eAAKH,UAAS,UAX5B,gBAW4B,aACpC,yBAAKA,UAAS,UAZN,gBAYM,iBACV,uBAAGA,UAAS,UAbR,gBAaQ,cAA+B4B,GAC3C,uBAAG5B,UAAS,UAdR,gBAcQ,gBAAiC6B,K,OCO9C,SAASC,EAAT,GAAyG,IAA7EC,EAA4E,EAA5EA,QAASC,EAAmE,EAAnEA,WAAYC,EAAuD,EAAvDA,SAAUC,EAA6C,EAA7CA,kBAA6C,EAC3ElD,mBAA4C,MAD+B,mBAC5GmD,EAD4G,KAC9FC,EAD8F,OAErFpD,oBAAS,GAF4E,mBAE5GqD,EAF4G,KAEnGC,EAFmG,KAG7GC,EAAe,WACjBP,GAAW,GACXE,KAEEM,EAAe,uCAAG,4BAAAlD,EAAA,yDACH,OAAb2C,EADgB,uBAEhBK,GAAW,GAFK,SAGEG,YAAuB,CACrCC,GAAIT,IAJQ,OAMC,KAHXtC,EAHU,QAMRgD,OACJL,GAAW,GACXF,EAAgBzC,EAAIlB,OARR,2CAAH,qDAYfmE,EAAM,uCAAG,WAAOC,GAAP,eAAAvD,EAAA,0DACP2C,EADO,gCAEWa,YAA0B,CACxCJ,GAAIT,EACJc,QAASF,IAJN,OAMU,KAJXlD,EAFC,QAMCgD,KACJ5B,YAAapB,EAAIqD,SAEjBnD,YAAWF,EAAIqD,SAEnBT,IAXO,2CAAH,sDAiBZ,OAHAxC,qBAAU,WACNyC,MACD,CAACP,IAEA,kBAAC,IAAD,CACIF,QAASA,EACTN,MAAM,uCACNwB,SAAUV,EACVW,OAAQ,IAGJb,EACM,kBAACc,EAAA,EAAD,MACAhB,GAAgB,oCACd,kBAACR,EAAD,CACI1C,OAAQkD,EAAaiB,OAAOnE,OAC5B2C,SAAUO,EAAaiB,OAAOxB,SAC9BC,WAAYM,EAAaN,aAE7B,uBAAG7B,UAAS,UApEhB,oBAoEgB,aAA8BmC,EAAakB,SACvD,yBAAKrD,UAAS,UArElB,oBAqEkB,kBAENmC,EAAamB,MAAMlC,KAAI,SAACmC,EAAMjC,GAC1B,OAAO,yBACHC,IAAKD,EACLrB,IAAKsD,EACLvD,UAAS,UA3E7B,oBA2E6B,UACTG,IAAI,qBAKpB,yBAAKH,UAAS,UAjFlB,oBAiFkB,gBACV,kBAAC,IAAD,CAAQzB,KAAK,UAAUiC,QAAS,kBAAMoC,GAAO,KAA7C,4BACA,kBAAC,IAAD,CAAQrE,KAAK,UAAUiF,QAAM,EAAChD,QAAS,kBAAMoC,GAAO,KAApD,qCCxEb,SAASa,IAAc,IAAD,EACHzE,oBAAS,GADN,mBAC1BqD,EAD0B,KACjBC,EADiB,OAEWtD,mBAAiC,IAF5C,mBAE1B0E,EAF0B,KAEVC,EAFU,OAGH3E,oBAAS,GAHN,mBAG1B+C,EAH0B,KAGjBC,EAHiB,OAIDhD,mBAAwB,MAJvB,mBAI1BiD,EAJ0B,KAIhB2B,EAJgB,KAM3B1B,EAAiB,uCAAG,4BAAA5C,EAAA,6DACtBgD,GAAW,GADW,SAEJuB,cAFI,OAGL,KADXlE,EAFgB,QAGdgD,MACJlC,QAAQC,IAAIf,EAAIlB,MAChBkF,EAAkBhE,EAAIlB,OAEtBoB,YAAWF,EAAIqD,SAGnBV,GAAW,GAVW,2CAAH,qDAmBvB,OAHAvC,qBAAU,WACNmC,MACD,IAEC,yBAAKlC,UAAS,UApCF,kBAoCE,YAENqC,EACM,kBAACc,EAAA,EAAD,CAAUW,gBAAgB,SACA,IAA1BJ,EAAeK,OACXL,EAAetC,KAAI,SAAC4C,EAAgB1C,GAClC,OAAO,yBACHC,IAAKD,EACLtB,UAAS,UA5CrB,kBA4CqB,qBACTQ,QAAS,kBAjBlBkC,EAiBkCsB,EAAetB,GAhBhEV,GAAW,QACX4B,EAAYlB,GAFE,IAACA,IAmBS,yBAAK1C,UAAS,UA/C1B,kBA+C0B,2BACV,kBAAC2B,EAAD,CACI1C,OAAQ+E,EAAeZ,OAAOnE,OAC9B2C,SAAUoC,EAAeZ,OAAOxB,SAChCC,WAAYmC,EAAenC,aAE/B,uBAAG7B,UAAS,UArD5B,kBAqD4B,cAA8BgE,EAAeC,WAGzDD,EAAeE,cACf,yBAAKjE,IAAK+D,EAAeE,aAAc/D,IAAI,eAAKH,UAAS,UAzDzE,kBAyDyE,kBAInE,uBAAGA,UAAU,aAAb,4BAEd,kBAAC8B,EAAD,CACIC,QAASA,EACTC,WAAYA,EACZC,SAAUA,EACVC,kBAAmBA,K,gEC3DpB,SAASiC,EAAT,GAA4G,IAA9EpC,EAA6E,EAA7EA,QAASC,EAAoE,EAApEA,WAAY1D,EAAwD,EAAxDA,KAAM8F,EAAkD,EAAlDA,YAAaC,EAAqC,EAArCA,QAAqC,EACxFrF,oBAAS,GAD+E,mBAC/GqD,EAD+G,KACtGC,EADsG,OAEtFtD,mBAAQ,OAACV,QAAD,IAACA,OAAD,EAACA,EAAMgG,UAFuE,mBAE/GA,EAF+G,KAErGC,EAFqG,OAGtFvF,mBAAQ,OAACV,QAAD,IAACA,OAAD,EAACA,EAAM8E,OAAOxB,UAHgE,mBAG/GA,EAH+G,KAGrG4C,EAHqG,OAI5FxF,mBAAQ,OAACV,QAAD,IAACA,OAAD,EAACA,EAAMmG,aAJ6E,mBAI/GC,EAJ+G,KAIxGC,EAJwG,KAKhHC,EAAQ,uCAAG,4BAAAtF,EAAA,2DACThB,GAAQgG,GAAY1C,GAAY8C,GADvB,uBAETpC,GAAW,GAFF,SAGSuC,YAAa,CAC3BC,OAAM,OAAExG,QAAF,IAAEA,OAAF,EAAEA,EAAM8E,OAAOV,GACrB4B,SAAUA,EACV1C,SAAUA,EACV6C,YAAaC,IAPR,OASQ,KANX/E,EAHG,QASDgD,MACJyB,EAAYC,GACZtD,YAAa,6BAEblB,YAAWF,EAAIqD,SAEnBhB,GAAW,GACXM,GAAW,GAhBF,2CAAH,qDAmBRC,EAAe,WACjBP,GAAW,IAgBf,OALAjC,qBAAU,WACNyE,EAAW,OAAClG,QAAD,IAACA,OAAD,EAACA,EAAM8E,OAAOxB,UACzB2C,EAAW,OAACjG,QAAD,IAACA,OAAD,EAACA,EAAMgG,UAClBK,EAAQ,OAACrG,QAAD,IAACA,OAAD,EAACA,EAAMmG,eAChB,CAACnG,IAEA,kBAAC,IAAD,CACIyD,QAASA,EACTN,MAAM,uCACNsD,KAAMH,EACN3B,SAAUV,EACVW,OAAQ,CACJ,kBAAC,IAAD,CAAQ3B,IAAI,OAAOf,QAAS+B,GAA5B,gBAGA,kBAAC,IAAD,CAAQhB,IAAI,SAAShD,KAAK,UAAU8D,QAASA,EAAS7B,QAASoE,GAA/D,kBAMAtG,GAAQ,oCACJ,kBAAC,IAAD,CAAO0G,MAAOV,EAAUW,SA/BjB,SAACC,GACpBX,EAAYW,EAAEC,OAAOH,QA8ByChF,UAAS,UApE3D,iBAoE2D,YAC3D,kBAAC,IAAD,CAAOgF,MAAOpD,EAAUqD,SA7BjB,SAACC,GACpBV,EAAYU,EAAEC,OAAOH,QA4ByChF,UAAS,UArE3D,iBAqE2D,YAC3D,kBAAC,IAAD,CAAOgF,MAAON,EAAOO,SA3BjB,SAACC,GACjBP,EAASO,EAAEC,OAAOH,QA0BsChF,UAAS,UAtErD,iBAsEqD,c,sBClEjEoF,EAAWC,IAAXD,OAWO,SAASE,IAAY,IAAD,EACDtG,oBAAS,GADR,mBACxBqD,EADwB,KACfC,EADe,OAECtD,mBAA2B,IAF5B,mBAExBuG,EAFwB,KAEdC,EAFc,OAGSxG,mBAA4B,IAHrC,mBAGxByG,EAHwB,KAGVC,EAHU,OAID1G,mBAAS,GAJR,mBAIxBqF,EAJwB,KAIfsB,EAJe,OAKD3G,oBAAS,GALR,mBAKxB+C,EALwB,KAKfC,EALe,OAMShD,mBAAgC,MANzC,mBAMxB4G,EANwB,KAMVC,EANU,OAOT7G,mBAAS,GAPA,mBAOxB8G,EAPwB,KAOnBC,EAPmB,KAQzBC,EAAY,uCAAG,WAAOlB,EAAgBmB,GAAvB,eAAA3G,EAAA,sEAEC4G,YAAqB,CACnCpB,OAAQA,EACRmB,WAAYA,IAJC,OAMJ,KAJPtG,EAFW,QAMbgD,KAAa5B,YAAa,4BAAUlB,YAAWF,EAAIqD,SANtC,2CAAH,wDAQZmD,EAAa,uCAAG,WAAOzD,GAAP,eAAApD,EAAA,sEACA8G,YAAiB,CAC/BtB,OAAQpC,EACR2D,SAAUC,IAAI,YAHA,OAKL,KAJP3G,EADY,QAKdgD,KAAa5B,YAAa,wCAAYlB,YAAWF,EAAIqD,SALvC,2CAAH,sDAWbuD,EAAU,CACZ,CACI9E,MAAO,eACP+E,UAAW,SACXjF,IAAK,SACLkF,OAAQ,SAACrD,EAAsBsD,GAC3B,OACI,yBAAK1G,UAAS,UA9Cd,gBA8Cc,YACV,yBAAKA,UAAS,UA/ClB,gBA+CkB,WAA2BC,IAAKmD,EAAOnE,OAAQkB,IAAI,iBACjE,uBAAGH,UAAS,UAhDhB,gBAgDgB,cAA+BoD,EAAOxB,UAE9C8E,EAAOC,MAAQ,yBAAK3G,UAAS,UAlDrC,gBAkDqC,SAAd,aAMnC,CACIyB,MAAO,qBACP+E,UAAW,WACXjF,IAAK,YAET,CACIE,MAAO,qBACP+E,UAAW,cACXjF,IAAK,eAET,CACIE,MAAO,eACPF,IAAK,WACLiF,UAAW,WACXC,OAAQ,SAACG,EAA4BF,GAA7B,OACJ,kBAAC,IAAD,CACIG,SAAUH,EAAOC,KACjBG,aAAcF,EAAUlE,GACxB/B,MAAO,CAAEoG,MAAO,KAChB9B,SAAU,SAACgB,GAAD,OAAgBD,EAAaU,EAAOtD,OAAOV,GAAIuD,KAGrDR,EAAarE,KAAI,SAAC4F,EAAc1F,GAC5B,OAAO,kBAAC8D,EAAD,CAAQ7D,IAAKD,EAAO0D,MAAOgC,EAAatE,IAAKsE,EAAahC,aAMrF,CACIvD,MAAO,eACPF,IAAK,SACLkF,OAAQ,SAACQ,GACL,OACI,kBAAC,IAAD,CAAOC,KAAK,SACR,kBAAC,IAAD,CAAQ3I,KAAK,UAAUiC,QAAS,kBAvDhDqF,EAuDgEoB,QAtDhEjF,GAAW,KAsDK,gBAEI,kBAAC,IAAD,CACIzD,KAAK,UACLiC,QAAS,kBAAM2F,EAAcc,EAAK7D,OAAOV,MAF7C,gCAYlB0B,EAAW,uCAAG,8BAAA9E,EAAA,6DAChBgD,GAAW,GADK,SAEE6E,cAFF,OAGC,KADXxH,EAFU,QAGRgD,MACEyE,EAAezH,EAAIlB,KAAK4I,KAAKjG,KAAI,SAACkG,EAAehG,GACnD,OAAO,2BACAgG,GADP,IAEI/F,IAAKD,EAAMiG,gBAGnBxB,EAAOpG,EAAIlB,KAAK4I,KAAKtD,QACrByB,EAAY4B,GACZ9E,GAAW,IAEXzC,YAAWF,EAAIqD,SAdH,2CAAH,qDAiBXwE,EAAe,uCAAG,4BAAAlI,EAAA,sEACFmI,cADE,OAEH,KADX9H,EADc,QAEZgD,KACJ+C,EAAgB/F,EAAIlB,MAEpBoB,YAAWF,EAAIqD,SALC,2CAAH,qDAiBrB,OAJAjD,qBAAU,WACNqE,IACAoD,MACD,IAEC,yBAAKxH,UAAS,UA5IF,gBA4IE,YACV,kBAAC,IAAD,CACIqC,QAASA,EACTrC,UAAS,UA/IL,gBA+IK,UACTuG,QAASA,EAASmB,WAAYnC,EAC9BoC,WAAY,CACRtD,QAASA,EACTuD,SAAU,GACVC,MAAO/B,GAEXb,SApBc,SAAC0C,GACnBA,EAAWtD,SACXsB,EAAWgC,EAAWtD,YAoBtB,kBAACF,EAAD,CACIpC,QAASA,EACTC,WAAYA,EACZ1D,KAAMsH,EACNxB,YAAaA,EACbC,QAASA,K,8CC3JZyD,EAAe,uCAAG,WAAOrJ,GAAP,iBAAAa,EAAA,sEACuByI,IAAM,CACpDC,OAAQ,MACRC,IAAK,kBACLC,OAAQzJ,EACR0J,QAASC,gBALc,uBACbzI,EADa,EACnBlB,KADmB,kBAQpBkB,GARoB,2CAAH,sDAYf0I,EAAiB,uCAAG,WAAO5J,GAAP,iBAAAa,EAAA,sEACqByI,IAAM,CACpDC,OAAQ,MACRC,IAAK,aACLC,OAAQzJ,EACR0J,QAASC,gBALgB,uBACfzI,EADe,EACrBlB,KADqB,kBAQtBkB,GARsB,2CAAH,sDCAf,SAAS2I,EAAT,GAAgF,IAApDvG,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,WAAYuG,EAA8B,EAA9BA,QAA8B,EACpDvJ,mBAAuC,MADa,mBACnFwJ,EADmF,KACtEC,EADsE,OAE5DzJ,oBAAS,GAFmD,mBAEnFqD,EAFmF,KAE1EC,EAF0E,KAMpFoG,EAAc,uCAAG,4BAAApJ,EAAA,yDACH,OAAZiJ,EADe,wDAInBjG,GAAW,GAJQ,SAKD+F,EAAkB,CAChCE,QAASA,IANM,OAQF,KAHX5I,EALa,QAQXgD,KACJ8F,EAAe9I,EAAIlB,MAEnBoB,YAAWF,EAAIqD,SAEnBV,GAAW,GAbQ,2CAAH,qDAkBpB,OAHAvC,qBAAU,WACN2I,MACD,CAACH,IAEA,kBAAC,IAAD,CACIxG,QAASA,EACTN,MAAM,uCACNwB,SAzBa,WACjBjB,GAAW,IAyBPkB,OAAQ,IAGJb,EACM,kBAACc,EAAA,EAAD,MACA,oCAEMqF,GAAe,kBAAC7G,EAAD,CACX1C,OAAQuJ,EAAYpF,OAAOnE,OAC3B2C,SAAU4G,EAAYpF,OAAOxB,SAC7BC,WAAY2G,EAAY3G,aAGhC,uBAAG7B,UAAS,UAzDhB,mBAyDgB,aAAZ,OAA0CwI,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAanF,SACvD,yBAAKrD,UAAS,UA1DlB,mBA0DkB,gBAENwI,GAAeA,EAAYlF,MAAMlC,KAAI,SAACmC,EAAMjC,GACxC,OAAO,yBACHtB,UAAS,UA9D7B,mBA8D6B,QACTuB,IAAKD,EACLrB,IAAKsD,EACLpD,IAAI,uBCrD7B,SAASwI,IAAa,IAAD,EACF3J,oBAAS,GADP,mBACzBqD,EADyB,KAChBC,EADgB,OAEEtD,mBAAsB,IAFxB,mBAEzB4J,EAFyB,KAEdC,EAFc,OAGc7J,oBAAU,GAHxB,mBAGzB8J,EAHyB,KAGRC,EAHQ,OAIM/J,mBAAS,GAJf,mBAIzBgK,EAJyB,KAIZC,EAJY,OAKFjK,mBAAS,GALP,mBAKzBkK,EALyB,KAKhBC,EALgB,OAMQnK,mBAA4B,IANpC,mBAMzByG,EANyB,KAMXC,EANW,OAOF1G,oBAAS,GAPP,mBAOzB+C,EAPyB,KAOhBC,EAPgB,OAQFhD,mBAAwB,MARtB,mBAQzBuJ,EARyB,KAQhBa,EARgB,KAU1BC,EAAY,uCAAG,WAAOC,GAAP,eAAAhK,EAAA,6DACjBgD,GAAW,GADM,SAECwF,EAAgB,CAC9ByB,WAAYT,EACZQ,KAAMA,IAJO,OAEX3J,EAFW,OAMjBc,QAAQC,IAAIf,GACK,IAAbA,EAAIgD,MACJkG,EAAalJ,EAAIlB,KAAK4I,MACtB8B,EAAWxJ,EAAIlB,KAAK6K,OAEpBzJ,YAAWF,EAAIqD,SAEnBV,GAAW,GAbM,2CAAH,sDAeZkF,EAAe,uCAAG,4BAAAlI,EAAA,sEACFmI,cADE,OAEH,KADX9H,EADc,QAEZgD,KACJ+C,EAAgB/F,EAAIlB,MAEpBoB,YAAWF,EAAIqD,SALC,2CAAH,qDAoBrB,OAJAjD,qBAAU,WACNsJ,EAAaL,GACbxB,MACD,CAACwB,EAAaF,IAEb,yBAAK9I,UAAS,UAvDF,aAuDE,YACV,kBAAC,IAAMwJ,MAAP,CAAaxJ,UAAS,UAxDd,aAwDc,gBAAgCiF,SAd7C,SAACC,GACd6D,EAAmB7D,EAAEC,OAAOH,OAC5BiE,EAAe,IAY+DjE,MAAO8D,GAC7E,kBAAC,IAAD,CAAO9D,OAAQ,GAAf,gBAEIS,EAAarE,KAAI,SAAC4F,EAAc1F,GAC5B,OAAO,kBAAC,IAAD,CACHC,IAAKD,EACL0D,MAAOgC,EAAatE,IAEnBsE,EAAahC,WAM1B3C,EACM,kBAACc,EAAA,EAAD,CAAUW,gBAAgB,SAE5B8E,EAAUxH,KAAI,SAACqI,EAAWnI,GACtB,OAAO,yBACHC,IAAKD,EACLtB,UAAS,UA5EjB,aA4EiB,qBACTQ,QAAS,kBA/BdkC,EA+B8B+G,EAAU/G,GA9BvD0G,EAAW1G,QACXV,GAAW,GAFG,IAACU,IAiCK,kBAACf,EAAD,CACI1C,OAAQwK,EAAUrG,OAAOnE,OACzB2C,SAAU6H,EAAUrG,OAAOxB,SAC3BC,WAAY4H,EAAU5H,aAE1B,uBAAG7B,UAAS,UApFpB,aAoFoB,cAA+ByJ,EAAUxF,cAK5C,IAArB2E,EAAU7E,OACJ,yBAAK/D,UAAS,UA1FhB,aA0FgB,gBACZ,kBAAC,IAAD,CAAQkH,KAAK,QAAQ1G,QAAS,kBAAMyI,EAAeD,EAAc,IAAInC,SAA0B,IAAhBmC,GAA/E,YACA,kBAAC,IAAD,CAAQ9B,KAAK,QAAQ1G,QAAS,kBAAMyI,EAAeD,EAAc,IAAInC,SAAUmC,IAAgBE,GAA/F,SAEF,uBAAGlJ,UAAU,aAAb,4BAEV,kBAACsI,EAAD,CACIvG,QAASA,EACTC,WAAYA,EACZuG,QAASA,KCnGV,SAASmB,IAAQ,IAAD,EACqB1K,mBAAS,GAD9B,mBACpB2K,EADoB,KACFzI,EADE,KAErB0I,EAAc,IAAIC,IAIxB,OAHAD,EAAYE,IAAI,EAAG,kBAACxE,EAAD,OACnBsE,EAAYE,IAAI,EAAG,kBAACrG,EAAD,OACnBmG,EAAYE,IAAI,EAAG,kBAACnB,EAAD,OAEf,yBAAK3I,UAAS,UATF,YASE,YACV,kBAAC,IAAD,CAAUR,MAAOA,KACb,kBAACuK,EAAD,OAEJ,yBAAK/J,UAAS,UAbN,YAaM,UACV,kBAACgB,EAAD,CAAOC,YAAa0I,EAAkBzI,oBAAqBA,IAEvD0I,EAAYI,IAAIL,O,gCC1BpC,wTAIaM,EAAWC,YAAqB,CACzCC,UAAW,uDASFpJ,EAAe,SAACqJ,GACzBpH,IAAQqH,QAAQD,IAGPvK,EAAa,SAACuK,GACvBpH,IAAQsH,MAAMF,IAGL7K,EAAW,WACpB,OAAOgL,IAAQC,KAAK,kBAGXC,EAAW,SAACC,GACrBH,IAAQI,KAAK,gBAAiBD,EAAO,CACjCE,OAAQ,UAIH9J,EAAc,WACvByJ,IAAQM,OAAO,kBAGNzC,EAAa,WAEtB,MAAO,CACH,cAFkB7I,MAiBbuL,EAAgB,SAACnI,GAC1B,OAAgB,IAATA,I,4dClDXoF,IAAMgD,SAASC,QAAU,IAEzBjD,IAAMkD,aAAaC,SAASC,KAC1B,SAAUD,GACR,OAAOA,KAET,SAAUZ,GACR,OAAOc,QAAQC,OAAOf,M,IA6CXgB,E,qGA/BErD,EAAaxJ,EAAcuJ,EAAiBG,GACzD,OACS,IAAIiD,QADE,QAAXpD,EACiB,SAACuD,EAASF,GAC3BtD,IACGiC,IAAI/B,EAAK,CAAExJ,KAAMA,EAAM0J,QAASA,IAChCqD,MAAK,SAAA7L,GACJ4L,EAAQ5L,EAAIlB,SAEbgN,OAAM,SAAAC,GACLL,EAAOK,OAIM,SAACH,EAASF,GAC3BtD,IAAM,CACJC,OAAQA,EACRvJ,KAAMA,EACN0J,QAASA,EACTF,IAAKA,IACJuD,MAAK,SAAA7L,GACN4L,EAAQ5L,EAAIlB,SAEXgN,OAAM,SAAAC,GACLL,EAAOK,Y,KCJNjE,EAAkB,uCAAG,8BAAAnI,EAAA,sEACoByI,IAAM,CACpDC,OAAQ,MACRC,IAAI,qBACJE,QAASC,gBAJiB,uBAChBzI,EADgB,EACtBlB,KADsB,kBAOvBkB,GAPuB,2CAAH,qDAWlBkE,EAAoB,uCAAG,8BAAAvE,EAAA,sEACkByI,IAAM,CACpDC,OAAQ,MACRC,IAAI,wBACJE,QAASC,gBAJmB,uBAClBzI,EADkB,EACxBlB,KADwB,kBAOzBkB,GAPyB,2CAAH,qDAWpB8C,EAAsB,uCAAG,WAAOhE,GAAP,iBAAAa,EAAA,sEACgByI,IAAM,CACpDC,OAAQ,MACRC,IAAI,mBACJC,OAAQzJ,EACR0J,QAASC,gBALqB,uBACpBzI,EADoB,EAC1BlB,KAD0B,kBAQ3BkB,GAR2B,2CAAH,sDAYtBwH,EAAc,uCAAG,8BAAA7H,EAAA,sEACwByI,IAAM,CACpDC,OAAQ,MACRC,IAAI,uBACJE,QAASC,gBAJa,uBACZzI,EADY,EAClBlB,KADkB,kBAOnBkB,GAPmB,2CAAH,qDAWdkF,EAAY,uCAAG,WAAOpG,GAAP,iBAAAa,EAAA,sEAC0ByI,IAAM,CACpDC,OAAQ,MACRC,IAAI,sBACJxJ,KAAMA,EACN0J,QAASC,gBALW,uBACVzI,EADU,EAChBlB,KADgB,kBAQjBkB,GARiB,2CAAH,sDAYZmD,EAAyB,uCAAG,WAAOrE,GAAP,iBAAAa,EAAA,sEACayI,IAAM,CACpDC,OAAQ,MACRC,IAAI,mBACJxJ,KAAMA,EACN0J,QAASC,gBALwB,uBACvBzI,EADuB,EAC7BlB,KAD6B,kBAQ9BkB,GAR8B,2CAAH,sDAYzByG,EAAgB,uCAAG,WAAO3H,GAAP,iBAAAa,EAAA,sEACsByI,IAAM,CACpDC,OAAQ,MACRC,IAAI,sBACJxJ,KAAMA,EACN0J,QAASC,gBALe,uBACdzI,EADc,EACpBlB,KADoB,kBAQrBkB,GARqB,2CAAH,sDAYhBuG,EAAoB,uCAAG,WAAOzH,GAAP,iBAAAa,EAAA,sEACkByI,IAAM,CACpDC,OAAQ,MACRC,IAAI,uBACJxJ,KAAMA,EACN0J,QAASC,gBALmB,uBAClBzI,EADkB,EACxBlB,KADwB,kBAQzBkB,GARyB,2CAAH,sDAuBpBgM,EAAmB,uCAAG,sBAAArM,EAAA,sEAClBgM,EAAKM,QAAL,UCtJK,MDsJL,kCAAwD,GAAI,OAD1C,mFAAH,qDAKnBC,EAAkB,uCAAG,WAAOpN,GAAP,SAAAa,EAAA,sEACjBgM,EAAKM,QAAL,UC3JK,MD2JL,mBAAyCnN,EAAM,QAD9B,mFAAH,sDAKlBiB,EAAuB,uCAAG,WAAOjB,GAAP,SAAAa,EAAA,sEACtBgM,EAAKM,QAAL,UChKK,MDgKL,sBAA4CnN,EAAM,MAAO2J,eADnC,mFAAH","file":"static/js/5.ccedcf11.chunk.js","sourcesContent":["// 包含所有的 action creator\r\nimport {\r\n    USER_DATA,\r\n    REMOVE_USER_DATA\r\n} from './action-types';\r\nimport { UserBasicConfig } from 'components/home/Header';\r\n\r\n// TODO: 需修改\r\n// 从register里传递已登录的用户数据到其余各个组件\r\nexport const transform_user = (user: UserBasicConfig)=>({\r\n    type: USER_DATA,\r\n    data: user\r\n}) \r\n\r\n// 退出登录，删去redux的数据\r\nexport const remove_user = (user: UserBasicConfig)=>({\r\n    type: REMOVE_USER_DATA,\r\n    data: user\r\n}) \r\n\r\n// 异步action\r\n// 如果想返回一个函数，必须应用上异步中间件\r\n// export const incrementAsync = (number) => {\r\n//     return dispatch => {\r\n//         // 异步代码\r\n//         setTimeout(() => {\r\n//             // 一秒之后才去分发一个增加的action\r\n//             dispatch(increment(number))\r\n//         }, 1000)\r\n//     }\r\n// }","module.exports = __webpack_public_path__ + \"static/media/logo.6488e83c.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.bbb87c32.gif\";","import { connect } from 'react-redux'\r\nimport { transform_user } from 'redux/actions'\r\nimport Header from 'components/home/Header'\r\nexport default connect(\r\n    state => ({\r\n        user: state\r\n    }),\r\n    {transform_user}\r\n)(Header)","import React, { useEffect, useState } from 'react'\r\nimport 'styles/home/header.scss'\r\nimport logo from 'images/logo.png'\r\nimport loadingImage from 'images/loading.gif'\r\nimport store from 'redux/store'\r\nimport { getToken, IconFont, removeToken, successToast, errorToast } from 'components/common/utils'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { get_basic_user_info_api } from 'http/UserApi'\r\n\r\nconst stylePrefix = 'home-header'\r\n\r\nexport interface UserBasicConfig {\r\n    avatar: string; // 头像\r\n    name: string; // 真实姓名\r\n    lawyer_number: string;\r\n}\r\n\r\ninterface HeaderConfig {\r\n    transform_user: (user: UserBasicConfig) => {\r\n        type: string;\r\n        data: UserBasicConfig;\r\n    }\r\n}\r\n\r\nexport default function Header({ transform_user }: HeaderConfig) {\r\n    const history = useHistory()\r\n    const [avatar, setAvatar] = useState('')\r\n    const [isMouse, setIsMouse] = useState(false)\r\n    const getBasicUser = async () => {\r\n        const token: string = getToken()\r\n        if (token && !store.getState().user) {\r\n            const res = await get_basic_user_info_api({});\r\n            const tempUserData: UserBasicConfig = res.data\r\n            setAvatar(tempUserData.avatar)\r\n            transform_user(tempUserData)\r\n        }\r\n\r\n        if (!store.getState().user) {\r\n            errorToast('请先登录')\r\n            history.push('/login')\r\n        }\r\n    }\r\n    const exitLogin = () => {\r\n        removeToken()\r\n        successToast('退出登录成功')\r\n        history.push('/login')\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBasicUser();\r\n    }, [store.getState().user])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`}>\r\n            <div className={`${stylePrefix}-logo-layout`} >\r\n                <img\r\n                    src={logo}\r\n                    alt=\"logo\"\r\n                    placeholder={loadingImage}\r\n                    className={`${stylePrefix}-logo`}\r\n                />\r\n                <p className={`${stylePrefix}-logo-word`}>云家医</p>\r\n            </div>\r\n            <div\r\n                className={`${stylePrefix}-user-layout`}\r\n                onMouseOver={() => setIsMouse(true)}\r\n                onMouseOut={() => setIsMouse(false)}\r\n            >\r\n                <img onClick={() => console.log(avatar)} src={avatar} alt=\"avatar\" className={`${stylePrefix}-avatar`} />\r\n                <IconFont\r\n                    type='icon-xiabiao'\r\n                    className={`${stylePrefix}-icon`}\r\n                    style={{\r\n                        color: isMouse ? '#000' : '#fff'\r\n                    }}\r\n                />\r\n                <div\r\n                    className={`${stylePrefix}-user-operation-layout`}\r\n                    style={{\r\n                        display: isMouse ? 'block' : 'none'\r\n                    }}\r\n                >\r\n                    <p\r\n                        className={`${stylePrefix}-user-operation-word`}\r\n                        onClick={exitLogin}\r\n                    >\r\n                        退出登录\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport 'styles/home/sider.scss'\r\nimport siderData from 'static/sider.json'\r\nimport { IconFont } from 'components/common/utils'\r\n\r\nconst stylePrefix = 'home-sider'\r\n\r\ninterface SiderConfig {\r\n    activeIndex: number\r\n    setActiveSiderIndex: React.Dispatch<React.SetStateAction<number>>\r\n}\r\n\r\nexport default function Sider({ activeIndex, setActiveSiderIndex }: SiderConfig) {\r\n    return (\r\n        <div className={`${stylePrefix}-layout`}>\r\n            {\r\n                siderData.map((siderItem, index) => {\r\n                    return <div\r\n                        key={index}\r\n                        className={`${stylePrefix}-sider-item`}\r\n                        onClick={() => setActiveSiderIndex(index)}\r\n                    >\r\n                        <IconFont type={siderItem.icon} className={`${stylePrefix}-sider-icon`} />\r\n                        <p className={`${stylePrefix}-sider-title`}>{siderItem.title}</p>\r\n                    </div>\r\n                })\r\n            }\r\n            <div\r\n                className={`${stylePrefix}-shadow`}\r\n                style={{\r\n                    top: 60 * activeIndex\r\n                }}\r\n            >\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport 'styles/common/authorShow.scss'\r\n\r\nconst stylePrefix = 'common-author'\r\n\r\ninterface AuthorShowConfig {\r\n    avatar: string\r\n    realname: string\r\n    createTime: string\r\n}\r\n\r\nexport default function AuthorShow({ avatar, realname, createTime }: AuthorShowConfig) {\r\n    return (\r\n        <div className={`${stylePrefix}-author-layout`} >\r\n            <img src={avatar} alt=\"头像\" className={`${stylePrefix}-avatar`} />\r\n            <div className={`${stylePrefix}-author-info`} >\r\n                <p className={`${stylePrefix}-realname`} >{realname}</p>\r\n                <p className={`${stylePrefix}-createTime`} >{createTime}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Modal, Button } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { AuthorConfig, successToast, errorToast } from 'components/common/utils'\r\nimport AuthorShow from 'components/common/AuthorShow'\r\nimport Loading2 from 'components/common/Loading2'\r\nimport { getUserVerifyDetailApi, submitUserVerifyResultApi } from 'http/UserApi'\r\nimport 'styles/home/userVerifyDetail.scss'\r\n\r\nconst stylePrefix = 'home-verifyDetail'\r\n\r\ninterface UserVerifyDetailConfig {\r\n    visible: boolean\r\n    setVisible: React.Dispatch<React.SetStateAction<boolean>>\r\n    verifyID: number | null\r\n    getUserVerifyList: () => Promise<void>\r\n}\r\n\r\ninterface UserVerifyDetailDataConfig {\r\n    author: AuthorConfig,\r\n    createTime: string, // 创建时间，3个月前\r\n    content: string, // 内容\r\n    files: string[]\r\n}\r\n\r\nexport default function UserVerifyDetail({ visible, setVisible, verifyID, getUserVerifyList }: UserVerifyDetailConfig) {\r\n    const [verifyDetail, setVerifyDetail] = useState<UserVerifyDetailDataConfig | null>(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const handleCancel = () => {\r\n        setVisible(false)\r\n        getUserVerifyList()\r\n    }\r\n    const getVerifyDetail = async () => {\r\n        if (verifyID !== null) {\r\n            setLoading(true)\r\n            const res = await getUserVerifyDetailApi({\r\n                id: verifyID\r\n            })\r\n            if (res.code === 0) {\r\n                setLoading(false)\r\n                setVerifyDetail(res.data)\r\n            }\r\n        }\r\n    }\r\n    const submit = async (result: boolean) => {\r\n        if (verifyID) {\r\n            const res = await submitUserVerifyResultApi({\r\n                id: verifyID,\r\n                isAgree: result\r\n            })\r\n            if (res.code === 0) {\r\n                successToast(res.message)\r\n            } else {\r\n                errorToast(res.message)\r\n            }\r\n            handleCancel()\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getVerifyDetail()\r\n    }, [verifyID])\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"用户审核详情\"\r\n            onCancel={handleCancel}\r\n            footer={[]}\r\n        >\r\n            {\r\n                loading\r\n                    ? <Loading2 />\r\n                    : verifyDetail && <>\r\n                        <AuthorShow\r\n                            avatar={verifyDetail.author.avatar}\r\n                            realname={verifyDetail.author.realname}\r\n                            createTime={verifyDetail.createTime}\r\n                        />\r\n                        <p className={`${stylePrefix}-content`} >{verifyDetail.content}</p>\r\n                        <div className={`${stylePrefix}-image-layout`}>\r\n                            {\r\n                                verifyDetail.files.map((file, index) => {\r\n                                    return <img\r\n                                        key={index}\r\n                                        src={file}\r\n                                        className={`${stylePrefix}-image`}\r\n                                        alt=\"图片\"\r\n                                    />\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className={`${stylePrefix}-btn-layout`} >\r\n                            <Button type=\"primary\" onClick={() => submit(true)} >同意审核</Button>\r\n                            <Button type=\"primary\" danger onClick={() => submit(false)} >不同意审核</Button>\r\n                        </div>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport 'styles/home/userVerify.scss'\r\nimport { getUserVerifyListApi } from 'http/UserApi'\r\nimport { AuthorConfig, errorToast } from 'components/common/utils'\r\nimport Loading2 from 'components/common/Loading2'\r\nimport UserVerifyDetail from './UserVerifyDetail'\r\nimport AuthorShow from 'components/common/AuthorShow'\r\nimport userVerifyModelList from 'model/userVerifyList.json'\r\n\r\nconst stylePrefix = 'home-userverify'\r\n\r\ninterface UserVerifyItemConfig {\r\n    id: number, // 审核ID\r\n    author: AuthorConfig\r\n    createTime: string, // 创建时间（距现在多久），如3个月前\r\n    abstract: string, // 摘要30字\r\n    firstPicture: string, // 第一张图片，如果没有则不传\r\n}\r\n\r\nexport default function UserVerify() {\r\n    const [loading, setLoading] = useState(false)\r\n    const [userVerifyList, setUserVerifyList] = useState<UserVerifyItemConfig[]>([])\r\n    const [visible, setVisible] = useState(false)\r\n    const [verifyID, setVerifyID] = useState<null | number>(null)\r\n\r\n    const getUserVerifyList = async () => {\r\n        setLoading(true)\r\n        const res = await getUserVerifyListApi()\r\n        if (res.code === 0) {\r\n            console.log(res.data);\r\n            setUserVerifyList(res.data)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n    const openModal = (id: number) => {\r\n        setVisible(true)\r\n        setVerifyID(id)\r\n    }\r\n    useEffect(() => {\r\n        getUserVerifyList()\r\n    }, [])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            {\r\n                loading\r\n                    ? <Loading2 backgroundColor='#fff' />\r\n                    : userVerifyList.length !== 0\r\n                        ? userVerifyList.map((userVerifyItem, index) => {\r\n                            return <div\r\n                                key={index}\r\n                                className={`${stylePrefix}-user-verify-item`}\r\n                                onClick={() => openModal(userVerifyItem.id)}\r\n                            >\r\n                                <div className={`${stylePrefix}-user-verify-item-main`}>\r\n                                    <AuthorShow\r\n                                        avatar={userVerifyItem.author.avatar}\r\n                                        realname={userVerifyItem.author.realname}\r\n                                        createTime={userVerifyItem.createTime}\r\n                                    />\r\n                                    <p className={`${stylePrefix}-abstract`}>{userVerifyItem.abstract}</p>\r\n                                </div>\r\n                                {\r\n                                    userVerifyItem.firstPicture &&\r\n                                    <img src={userVerifyItem.firstPicture} alt=\"图片\" className={`${stylePrefix}-picture`} />\r\n                                }\r\n                            </div>\r\n                        })\r\n                        : <p className='empty-tip' >暂无信息</p>\r\n            }\r\n            <UserVerifyDetail\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                verifyID={verifyID}\r\n                getUserVerifyList={getUserVerifyList}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Input, Modal } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { UserItemConfig } from './UserList'\r\nimport 'styles/home/alterUserInfoModal.scss'\r\nimport { alterUserApi } from 'http/UserApi'\r\nimport { errorToast, successToast } from 'components/common/utils'\r\n\r\nconst stylePrefix = 'home-alterUser'\r\n\r\ninterface AlterUserInfoModalConfig {\r\n    visible: boolean\r\n    setVisible: React.Dispatch<React.SetStateAction<boolean>>\r\n    user: UserItemConfig | null\r\n    getUserList: (page: number) => Promise<void>\r\n    current: number\r\n}\r\n\r\nexport default function AlterUserInfoModal({ visible, setVisible, user, getUserList, current }: AlterUserInfoModalConfig) {\r\n    const [loading, setLoading] = useState(false)\r\n    const [username, setUsername] = useState(user?.username)\r\n    const [realname, setRealname] = useState(user?.author.realname)\r\n    const [phone, setPhone] = useState(user?.phoneNumber)\r\n    const handleOk = async () => {\r\n        if (user && username && realname && phone) {\r\n            setLoading(true)\r\n            const res = await alterUserApi({\r\n                userID: user?.author.id,\r\n                username: username,\r\n                realname: realname,\r\n                phoneNumber: phone\r\n            })\r\n            if (res.code === 0) {\r\n                getUserList(current)\r\n                successToast('修改成功')\r\n            } else {\r\n                errorToast(res.message)\r\n            }\r\n            setVisible(false)\r\n            setLoading(false)\r\n        }\r\n    }\r\n    const handleCancel = () => {\r\n        setVisible(false)\r\n    }\r\n    const handleUsername = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setUsername(e.target.value)\r\n    }\r\n    const handleRealname = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setRealname(e.target.value)\r\n    }\r\n    const handlePhone = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPhone(e.target.value)\r\n    }\r\n    useEffect(() => {\r\n        setRealname(user?.author.realname)\r\n        setUsername(user?.username)\r\n        setPhone(user?.phoneNumber)\r\n    }, [user])\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"修改用户信息\"\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            footer={[\r\n                <Button key=\"back\" onClick={handleCancel}>\r\n                    返回\r\n                </Button>,\r\n                <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}>\r\n                    提交\r\n                </Button>,\r\n            ]}\r\n        >\r\n            {\r\n                user && <>\r\n                    <Input value={username} onChange={handleUsername} className={`${stylePrefix}-input`} />\r\n                    <Input value={realname} onChange={handleRealname} className={`${stylePrefix}-input`} />\r\n                    <Input value={phone} onChange={handlePhone} className={`${stylePrefix}-input`} />\r\n                </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport 'styles/home/userList.scss'\r\nimport { Table, Button, Select, Space } from 'antd';\r\nimport { AuthorConfig, IndentifyConfig, errorToast, successToast } from 'components/common/utils';\r\nimport { getIdentifyListApi, getUserListApi, resetPasswordApi, alterUserIdentifyApi } from 'http/UserApi';\r\nimport { TablePaginationConfig } from 'antd/lib/table';\r\nimport AlterUserInfoModal from './AlterUserInfoModal';\r\nimport md5 from 'md5';\r\nimport UserListModel from 'model/userList.json'\r\n\r\nconst stylePrefix = 'home-userList'\r\nconst { Option } = Select;\r\n\r\nexport interface UserItemConfig {\r\n    key: string\r\n    isMy: boolean\r\n    author: AuthorConfig,\r\n    username: string,\r\n    phoneNumber: string,\r\n    identify: IndentifyConfig\r\n}\r\n\r\nexport default function UserList() {\r\n    const [loading, setLoading] = useState(false)\r\n    const [userList, setUserList] = useState<UserItemConfig[]>([])\r\n    const [identifyList, setIdentifyList] = useState<IndentifyConfig[]>([])\r\n    const [current, setCurrent] = useState(1)\r\n    const [visible, setVisible] = useState(false)\r\n    const [selectedUser, setSelectedUser] = useState<null | UserItemConfig>(null)\r\n    const [num, setNum] = useState(0)\r\n    const handleChange = async (userID: number, identifyID: number) => {\r\n        // TODO: 修改用户身份\r\n        const res = await alterUserIdentifyApi({\r\n            userID: userID,\r\n            identifyID: identifyID\r\n        })\r\n        res.code === 0 ? successToast('修改成功') : errorToast(res.message)\r\n    }\r\n    const resetPassword = async (id: number) => {\r\n        const res = await resetPasswordApi({\r\n            userID: id,\r\n            password: md5('123456')\r\n        })\r\n        res.code === 0 ? successToast('重置密码成功') : errorToast(res.message)\r\n    }\r\n    const openModal = (user: UserItemConfig) => {\r\n        setSelectedUser(user)\r\n        setVisible(true)\r\n    }\r\n    const columns = [\r\n        {\r\n            title: '昵称',\r\n            dataIndex: 'author',\r\n            key: 'author',\r\n            render: (author: AuthorConfig, record: UserItemConfig) => {\r\n                return (\r\n                    <div className={`${stylePrefix}-author`}>\r\n                        <img className={`${stylePrefix}-avatar`} src={author.avatar} alt=\"头像\" />\r\n                        <p className={`${stylePrefix}-realname`} >{author.realname}</p>\r\n                        {\r\n                            record.isMy && <div className={`${stylePrefix}-tag`}>我</div>\r\n                        }\r\n                    </div>\r\n                )\r\n            },\r\n        },\r\n        {\r\n            title: '用户名',\r\n            dataIndex: 'username',\r\n            key: 'username',\r\n        },\r\n        {\r\n            title: '手机号',\r\n            dataIndex: 'phoneNumber',\r\n            key: 'phoneNumber',\r\n        },\r\n        {\r\n            title: '身份',\r\n            key: 'identify',\r\n            dataIndex: 'identify',\r\n            render: (indentify: IndentifyConfig, record: UserItemConfig) => (\r\n                <Select\r\n                    disabled={record.isMy}\r\n                    defaultValue={indentify.id}\r\n                    style={{ width: 120 }}\r\n                    onChange={(identifyID) => handleChange(record.author.id, identifyID)}\r\n                >\r\n                    {\r\n                        identifyList.map((identifyItem, index) => {\r\n                            return <Option key={index} value={identifyItem.id}>{identifyItem.value}</Option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            ),\r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'action',\r\n            render: (text: UserItemConfig) => {\r\n                return (\r\n                    <Space size='large' >\r\n                        <Button type=\"primary\" onClick={() => openModal(text)} >修改</Button>\r\n                        {\r\n                            <Button\r\n                                type=\"primary\"\r\n                                onClick={() => resetPassword(text.author.id)}\r\n                            >\r\n                                重置密码\r\n                            </Button>\r\n                        }\r\n                    </Space>\r\n                )\r\n            },\r\n        },\r\n    ];\r\n    const getUserList = async () => {\r\n        setLoading(true)\r\n        const res = await getUserListApi()\r\n        if (res.code === 0) {\r\n            const userListTemp = res.data.list.map((userItem: any, index: number) => {\r\n                return {\r\n                    ...userItem,\r\n                    key: index.toString()\r\n                }\r\n            })\r\n            setNum(res.data.list.length)\r\n            setUserList(userListTemp)\r\n            setLoading(false)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n    }\r\n    const getIdentifyList = async () => {\r\n        const res = await getIdentifyListApi();\r\n        if (res.code === 0) {\r\n            setIdentifyList(res.data)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n    }\r\n    const handleTableChange = (pagination: TablePaginationConfig) => {\r\n        if (pagination.current) {\r\n            setCurrent(pagination.current)\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getUserList()\r\n        getIdentifyList()\r\n    }, [])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            <Table\r\n                loading={loading}\r\n                className={`${stylePrefix}-table`}\r\n                columns={columns} dataSource={userList}\r\n                pagination={{\r\n                    current: current,\r\n                    pageSize: 10, // 一页多少项\r\n                    total: num, // 总共多少项\r\n                }}\r\n                onChange={handleTableChange}\r\n            />\r\n            <AlterUserInfoModal\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                user={selectedUser}\r\n                getUserList={getUserList}\r\n                current={current}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios'\r\nimport { httpConfig, getHeaders } from 'components/common/utils'\r\n\r\ninterface getErrorListConfig {\r\n    identityID: number\r\n    page: number\r\n}\r\ninterface getErrorDetailConfig {\r\n    errorID: number\r\n}\r\n\r\n// 获取错误列表\r\nexport const getErrorListApi = async (data: getErrorListConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: '/api/error/list',\r\n        params: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取错误详情\r\nexport const getErrorDetailApi = async (data: getErrorDetailConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: '/api/error',\r\n        params: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Modal } from 'antd'\r\nimport AuthorShow from 'components/common/AuthorShow'\r\nimport { AuthorConfig, errorToast } from 'components/common/utils'\r\nimport Loading2 from 'components/common/Loading2'\r\nimport errorDetailModel from 'model/errorDetail.json'\r\nimport 'styles/home/errorDetailModal.scss'\r\nimport { getErrorDetailApi } from 'http/ErrorMessageApi'\r\n\r\nconst stylePrefix = 'home-errorDetail'\r\n\r\ninterface ErrorDetailConfig {\r\n    visible: boolean\r\n    setVisible: React.Dispatch<React.SetStateAction<boolean>>\r\n    errorID: number | null\r\n}\r\n\r\ninterface ErrorDetailDataConfig {\r\n    author: AuthorConfig,\r\n    createTime: string, // 创建时间，3个月前\r\n    content: string, // 内容\r\n    files: string[]\r\n}\r\n\r\nexport default function ErrorDetailModel({ visible, setVisible, errorID }: ErrorDetailConfig) {\r\n    const [errorDetail, setErrorDetail] = useState<ErrorDetailDataConfig | null>(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const handleCancel = () => {\r\n        setVisible(false)\r\n    }\r\n    const getErrorDetail = async () => {\r\n        if (errorID === null) {\r\n            return\r\n        }\r\n        setLoading(true)\r\n        const res = await getErrorDetailApi({\r\n            errorID: errorID\r\n        })\r\n        if (res.code === 0) {\r\n            setErrorDetail(res.data)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n        setLoading(false)\r\n    }\r\n    useEffect(() => {\r\n        getErrorDetail()\r\n    }, [errorID])\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"查看错误详情\"\r\n            onCancel={handleCancel}\r\n            footer={[]}\r\n        >\r\n            {\r\n                loading\r\n                    ? <Loading2 />\r\n                    : <>\r\n                        {\r\n                            errorDetail && <AuthorShow\r\n                                avatar={errorDetail.author.avatar}\r\n                                realname={errorDetail.author.realname}\r\n                                createTime={errorDetail.createTime}\r\n                            />\r\n                        }\r\n                        <p className={`${stylePrefix}-content`} >{errorDetail?.content}</p>\r\n                        <div className={`${stylePrefix}-img-layout`} >\r\n                            {\r\n                                errorDetail && errorDetail.files.map((file, index) => {\r\n                                    return <img\r\n                                        className={`${stylePrefix}-img`}\r\n                                        key={index}\r\n                                        src={file}\r\n                                        alt=\"图片\"\r\n                                    />\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport 'styles/home/errorList.scss'\r\nimport { AuthorConfig, errorToast, IndentifyConfig } from 'components/common/utils'\r\nimport 'styles/home/errorList.scss'\r\nimport Loading2 from 'components/common/Loading2'\r\nimport AuthorShow from 'components/common/AuthorShow'\r\nimport { Radio, Button } from 'antd';\r\nimport { RadioChangeEvent } from 'antd/lib/radio'\r\nimport { getIdentifyListApi } from 'http/UserApi'\r\nimport ErrorDetailModel from './ErrorDetailModel'\r\nimport { getErrorListApi } from 'http/ErrorMessageApi'\r\n\r\nconst stylePrefix = 'home-error'\r\n\r\ninterface ErrorItem {\r\n    id: number, // 错误单项ID\r\n    author: AuthorConfig,\r\n    createTime: string, // 创建时间\r\n    abstract: string, // 摘要30字\r\n}\r\n\r\nexport default function ErrorList() {\r\n    const [loading, setLoading] = useState(false)\r\n    const [errorList, setErrorList] = useState<ErrorItem[]>([])\r\n    const [radioIdentifyID, setRadioIdentifyID] = useState(-1)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [pageNum, setPageNum] = useState(1)\r\n    const [identifyList, setIdentifyList] = useState<IndentifyConfig[]>([])\r\n    const [visible, setVisible] = useState(false)\r\n    const [errorID, setErrorID] = useState<number | null>(null)\r\n\r\n    const getErrorList = async (page: number) => {\r\n        setLoading(true)\r\n        const res = await getErrorListApi({\r\n            identityID: radioIdentifyID,\r\n            page: page\r\n        })\r\n        console.log(res);\r\n        if (res.code === 0) {\r\n            setErrorList(res.data.list)\r\n            setPageNum(res.data.page)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n        setLoading(false)\r\n    }\r\n    const getIdentifyList = async () => {\r\n        const res = await getIdentifyListApi();\r\n        if (res.code === 0) {\r\n            setIdentifyList(res.data)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n    }\r\n    const onChange = (e: RadioChangeEvent) => {\r\n        setRadioIdentifyID(e.target.value)\r\n        setCurrentPage(1)\r\n    }\r\n    const openModal = (id: number) => {\r\n        setErrorID(id)\r\n        setVisible(true)\r\n    }\r\n    useEffect(() => {\r\n        getErrorList(currentPage)\r\n        getIdentifyList()\r\n    }, [currentPage, radioIdentifyID])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            <Radio.Group className={`${stylePrefix}-radio-group`} onChange={onChange} value={radioIdentifyID}>\r\n                <Radio value={-1}>全部</Radio>\r\n                {\r\n                    identifyList.map((identifyItem, index) => {\r\n                        return <Radio\r\n                            key={index}\r\n                            value={identifyItem.id}\r\n                        >\r\n                            {identifyItem.value}\r\n                        </Radio>\r\n                    })\r\n                }\r\n            </Radio.Group>\r\n            {\r\n                loading\r\n                    ? <Loading2 backgroundColor='#fff' />\r\n                    :\r\n                    errorList.map((errorItem, index) => {\r\n                        return <div\r\n                            key={index}\r\n                            className={`${stylePrefix}-errorItem-layout`}\r\n                            onClick={() => openModal(errorItem.id)}\r\n                        >\r\n                            <AuthorShow\r\n                                avatar={errorItem.author.avatar}\r\n                                realname={errorItem.author.realname}\r\n                                createTime={errorItem.createTime}\r\n                            />\r\n                            <p className={`${stylePrefix}-abstract`} >{errorItem.abstract}</p>\r\n                        </div>\r\n                    })\r\n            }\r\n            {\r\n                errorList.length !== 0\r\n                    ? <div className={`${stylePrefix}-btn-layout`}>\r\n                        <Button size='large' onClick={() => setCurrentPage(currentPage - 1)} disabled={currentPage === 1} >Previous</Button>\r\n                        <Button size='large' onClick={() => setCurrentPage(currentPage + 1)} disabled={currentPage === pageNum} >Next</Button>\r\n                    </div>\r\n                    : <p className='empty-tip' >暂无信息</p>\r\n            }\r\n            <ErrorDetailModel\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                errorID={errorID}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport 'styles/pages/home.scss'\r\nimport { Provider } from 'react-redux'\r\nimport store from 'redux/store'\r\nimport HeaderContainer from 'containers/HeaderContainer'\r\nimport Sider from 'components/home/Sider'\r\nimport UserVerify from 'components/home/UserVerify'\r\nimport UserList from 'components/home/UserList'\r\nimport ErrorList from 'components/home/ErrorList'\r\n\r\nconst stylePrefix = 'page-home'\r\n\r\nexport default function Home() {\r\n    const [activeSiderIndex, setActiveSiderIndex] = useState(0)\r\n    const mainPageMap = new Map();\r\n    mainPageMap.set(0, <UserList />)\r\n    mainPageMap.set(1, <UserVerify />)\r\n    mainPageMap.set(2, <ErrorList />)\r\n    return (\r\n        <div className={`${stylePrefix}-layout`}>\r\n            <Provider store={store}>\r\n                <HeaderContainer />\r\n            </Provider>\r\n            <div className={`${stylePrefix}-main`} >\r\n                <Sider activeIndex={activeSiderIndex} setActiveSiderIndex={setActiveSiderIndex} />\r\n                {\r\n                    mainPageMap.get(activeSiderIndex)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { createFromIconfontCN } from '@ant-design/icons';\r\nimport { message } from 'antd';\r\nimport cookies from 'react-cookies'\r\n\r\nexport const IconFont = createFromIconfontCN({\r\n    scriptUrl: 'http://at.alicdn.com/t/font_2103484_f8ge73a2w6v.js',\r\n});\r\n\r\nexport interface httpConfig {\r\n    code: number\r\n    data: any\r\n    message: string\r\n}\r\n\r\nexport const successToast = (msg: string) => {\r\n    message.success(msg);\r\n}\r\n\r\nexport const errorToast = (msg: string) => {\r\n    message.error(msg);\r\n}\r\n\r\nexport const getToken = (): string => {\r\n    return cookies.load('Authorization')\r\n}\r\n\r\nexport const setToken = (token: string) => {\r\n    cookies.save('Authorization', token, {\r\n        maxAge: 60 * 60 * 24 * 7\r\n    })\r\n}\r\n\r\nexport const removeToken = () => {\r\n    cookies.remove('Authorization')\r\n}\r\n\r\nexport const getHeaders = () => {\r\n    const token: string = getToken()\r\n    return {\r\n        'Authorization': token\r\n    }\r\n}\r\n\r\nexport interface AuthorConfig {\r\n    id: number, // 作者ID\r\n    avatar: string, // 作者的头像\r\n    realname: string, // 作者的真实姓名\r\n}\r\n\r\nexport interface IndentifyConfig {\r\n    id: number\r\n    value: string\r\n}\r\n\r\nexport const httpIsSuccess = (code: number) => {\r\n    return code === 0;\r\n}","import axios from \"axios\";\r\n\r\n// 创建axios默认请求\r\n// axios.defaults.baseURL = \"http://106.14.174.206/api\"; // 后端代码\r\n// 配置超时时间\r\naxios.defaults.timeout = 100000;\r\n// 添加响应拦截器\r\naxios.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninterface BaseHttpResponse {\r\n  code: number;\r\n  data: any;\r\n  message: string;\r\n}\r\n\r\n// 请求的方式\r\ntype IMethod = 'GET' | 'POST' | 'PUT' | 'DELETE'\r\n\r\nclass Http {\r\n  static request(url: string, data: object, method: IMethod, headers?: object): Promise<BaseHttpResponse> {\r\n    if (method === 'GET') {\r\n      return new Promise((resolve, reject) => {\r\n        axios\r\n          .get(url, { data: data, headers: headers })\r\n          .then(res => {\r\n            resolve(res.data);\r\n          })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise((resolve, reject) => {\r\n        axios({\r\n          method: method,\r\n          data: data,\r\n          headers: headers,\r\n          url: url\r\n        }).then(res => {\r\n          resolve(res.data);\r\n        })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Http","import axios from 'axios'\r\nimport { backIP } from 'components/common/config'\r\nimport { httpConfig, getHeaders } from 'components/common/utils'\r\nimport Http from './Servies'\r\n\r\ninterface loginConfig {\r\n    username: string\r\n    password: string\r\n    isAdmin: boolean\r\n}\r\n\r\ninterface getVerifyDetailConfig {\r\n    id: number\r\n}\r\ninterface alterUserConfig {\r\n    userID: number\r\n    username: string\r\n    realname: string\r\n    phoneNumber: string\r\n}\r\ninterface submitUserVerifyResultConfig {\r\n    id: number\r\n    isAgree: boolean\r\n}\r\ninterface resetPasswordConfig {\r\n    userID: number\r\n    password: string\r\n}\r\ninterface alterUserIdentifyConfig {\r\n    userID: number\r\n    identifyID: number\r\n}\r\n\r\n// 登录\r\nexport const loginApi = async (data: loginConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/user/login`,\r\n        data: data\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取所有身份\r\nexport const getIdentifyListApi = async () => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/user/identify`,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取用户验证列表\r\nexport const getUserVerifyListApi = async () => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/user/verify/list`,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取用户验证材料信息\r\nexport const getUserVerifyDetailApi = async (data: getVerifyDetailConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/user/verify`,\r\n        params: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取用户列表信息\r\nexport const getUserListApi = async () => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/admin/user/list`,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 修改用户信息\r\nexport const alterUserApi = async (data: alterUserConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/admin/realname`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 提交用户审核结果\r\nexport const submitUserVerifyResultApi = async (data: submitUserVerifyResultConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/user/verify`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 重置密码\r\nexport const resetPasswordApi = async (data: resetPasswordConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/admin/password`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 修改用户身份\r\nexport const alterUserIdentifyApi = async (data: alterUserIdentifyConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/admin/indentify`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\ninterface ILoginPassword {\r\n    phoneNumber: string;\r\n    password: string;\r\n    verification_code: string;\r\n    platform: number;\r\n}\r\n\r\ninterface IGetBasicUserInfo {\r\n    userID?: number;\r\n}\r\n\r\n// 获取图片验证码\r\nexport const get_verify_code_api = async () => {\r\n    return await Http.request(`${backIP}/public/verificationCode/image`, {}, 'GET')\r\n}\r\n\r\n// 管理员修改用户昵称\r\nexport const login_password_api = async (data: ILoginPassword) => {\r\n    return await Http.request(`${backIP}/login/password`, data, 'POST')\r\n}\r\n\r\n// 管理员修改用户昵称\r\nexport const get_basic_user_info_api = async (data: IGetBasicUserInfo) => {\r\n    return await Http.request(`${backIP}/user/getBasicInfo`, data, 'GET', getHeaders())\r\n}","export const backIP = 'api'"],"sourceRoot":""}