{"version":3,"sources":["components/common/utils.tsx","http/UserApi.tsx","components/common/config.ts","http/Servies.tsx","containers/HeaderContainer.tsx","redux/actions.ts","components/home/Header.tsx","components/home/Sider.tsx","components/common/AuthorShow.tsx","components/home/UserVerifyDetail.tsx","components/home/UserVerify.tsx","components/home/AlterUserInfoModal.tsx","components/home/AddUserInfoModel.tsx","components/home/UserList.tsx","http/ErrorMessageApi.tsx","components/home/ErrorDetailModel.tsx","components/home/ErrorList.tsx","pages/home.tsx"],"names":["IconFont","createFromIconfontCN","scriptUrl","successToast","msg","message","success","errorToast","error","getToken","cookies","load","setToken","token","save","maxAge","removeToken","remove","getHeaders","httpIsSuccess","code","getIdentifyListApi","a","axios","method","url","headers","res","data","getUserVerifyListApi","getUserVerifyDetailApi","params","submitUserVerifyResultApi","get_verify_code_api","Http","request","backIP","login_password_api","get_basic_user_info_api","get_user_list_api","testIP","alter_user_identify_api","reset_user_password_api","get_user_detail_info_api","alter_user_info_api","upload_file_api","add_new_user_api","defaults","timeout","interceptors","response","use","Promise","reject","resolve","get","then","catch","err","connect","state","user","transform_user","type","USER_DATA","history","useHistory","useState","store","getState","avatar","setAvatar","isMouse","setIsMouse","getBasicUser","tempUserData","console","log","push","useEffect","subscribe","className","onClick","onMouseOver","onMouseOut","src","alt","style","color","display","Sider","activeIndex","setActiveSiderIndex","siderData","map","siderItem","index","key","icon","title","top","AuthorShow","realname","createTime","UserVerifyDetail","visible","setVisible","verifyID","getUserVerifyList","verifyDetail","setVerifyDetail","loading","setLoading","handleCancel","getVerifyDetail","id","submit","result","isAgree","onCancel","footer","Loading2","author","content","files","file","danger","UserVerify","userVerifyList","setUserVerifyList","setVerifyID","backgroundColor","length","userVerifyItem","abstract","firstPicture","AlterUserInfoModal","userID","getUserList","current","setUser","handleOk","name","phoneNumber","lawyer_number","weixin_number","handleInput","value","getUserDetail","onOk","placeholder","onChange","e","target","AddUserInfoModel","identify","setIdentify","lawyerNumber","setLawyerNumber","identifyNumber","setIdentifyNumber","setName","img","setImg","qualificationsNumber","setQualificationsNumber","phone","setPhone","startTime","setStartTime","fileInput","useRef","clear","handleFileChange","uploadFile","Array","from","formData","FormData","append","Group","date","_dateString","selectDate","Date","_d","getTime","toString","ref","click","Option","Select","UserList","userList","setUserList","setCurrent","addVisible","setAddVisible","selectedUserID","setSelectedUserID","num","setNum","handleChange","identifyID","resetPassword","password","md5","columns","dataIndex","render","_author","record","isMy","indentify","disabled","defaultValue","width","indentifyList","identifyItem","align","text","size","userListTemp","userItem","dataSource","pagination","pageSize","total","getErrorListApi","getErrorDetailApi","ErrorDetailModel","errorID","errorDetail","setErrorDetail","getErrorDetail","ErrorList","errorList","setErrorList","radioIdentifyID","setRadioIdentifyID","currentPage","setCurrentPage","pageNum","setPageNum","identifyList","setIdentifyList","setErrorID","getErrorList","page","identityID","list","getIdentifyList","errorItem","Home","activeSiderIndex","mainPageMap","Map","set","HeaderContainer"],"mappings":"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","file":"static/js/6.1428df23.chunk.js","sourcesContent":["import { createFromIconfontCN } from '@ant-design/icons';\r\nimport { message } from 'antd';\r\nimport cookies from 'react-cookies'\r\n\r\nexport const IconFont = createFromIconfontCN({\r\n    scriptUrl: 'http://at.alicdn.com/t/font_2103484_f8ge73a2w6v.js',\r\n});\r\n\r\nexport interface httpConfig {\r\n    code: number\r\n    data: any\r\n    message: string\r\n}\r\n\r\nexport const successToast = (msg: string) => {\r\n    message.success(msg);\r\n}\r\n\r\nexport const errorToast = (msg: string) => {\r\n    message.error(msg);\r\n}\r\n\r\nexport const getToken = (): string => {\r\n    return cookies.load('Authorization')\r\n}\r\n\r\nexport const setToken = (token: string) => {\r\n    cookies.save('Authorization', token, {\r\n        maxAge: 60 * 60 * 24 * 7\r\n    })\r\n}\r\n\r\nexport const removeToken = () => {\r\n    cookies.remove('Authorization')\r\n}\r\n\r\nexport const getHeaders = () => {\r\n    const token: string = getToken()\r\n    return {\r\n        'Authorization': token\r\n    }\r\n}\r\n\r\nexport interface AuthorConfig {\r\n    id: number, // 作者ID\r\n    avatar: string, // 作者的头像\r\n    realname: string, // 作者的真实姓名\r\n}\r\n\r\nexport interface IndentifyConfig {\r\n    id: number\r\n    value: string\r\n}\r\n\r\nexport const httpIsSuccess = (code: number) => {\r\n    return code === 0;\r\n}","import axios from 'axios'\r\nimport { backIP, testIP } from 'components/common/config'\r\nimport { httpConfig, getHeaders } from 'components/common/utils'\r\nimport Http from './Servies'\r\n\r\ninterface loginConfig {\r\n    username: string\r\n    password: string\r\n    isAdmin: boolean\r\n}\r\n\r\ninterface getVerifyDetailConfig {\r\n    id: number\r\n}\r\ninterface alterUserConfig {\r\n    userID: number\r\n    username: string\r\n    realname: string\r\n    phoneNumber: string\r\n}\r\ninterface submitUserVerifyResultConfig {\r\n    id: number\r\n    isAgree: boolean\r\n}\r\ninterface resetPasswordConfig {\r\n    userID: number\r\n    password: string\r\n}\r\ninterface alterUserIdentifyConfig {\r\n    userID: number\r\n    identifyID: number\r\n}\r\n\r\n// 登录\r\nexport const loginApi = async (data: loginConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/user/login`,\r\n        data: data\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取所有身份\r\nexport const getIdentifyListApi = async () => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/user/identify`,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取用户验证列表\r\nexport const getUserVerifyListApi = async () => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/user/verify/list`,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取用户验证材料信息\r\nexport const getUserVerifyDetailApi = async (data: getVerifyDetailConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/user/verify`,\r\n        params: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取用户列表信息\r\nexport const getUserListApi = async () => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: `/api/admin/user/list`,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 修改用户信息\r\nexport const alterUserApi = async (data: alterUserConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/admin/realname`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 提交用户审核结果\r\nexport const submitUserVerifyResultApi = async (data: submitUserVerifyResultConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/user/verify`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 重置密码\r\nexport const resetPasswordApi = async (data: resetPasswordConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/admin/password`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 修改用户身份\r\nexport const alterUserIdentifyApi = async (data: alterUserIdentifyConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'PUT',\r\n        url: `/api/admin/indentify`,\r\n        data: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\ninterface ILoginPassword {\r\n    phoneNumber: string;\r\n    password: string;\r\n    verification_code: string;\r\n    platform: number;\r\n}\r\n\r\ninterface IGetBasicUserInfo {\r\n    userID?: number;\r\n}\r\n\r\ninterface IAlterUserIdentify {\r\n    userID: number;\r\n    identifyID: number;\r\n}\r\n\r\ninterface IResetUserPassword {\r\n    userID: number;\r\n    password: string;\r\n}\r\n\r\ninterface IGetDetailUserInfo {\r\n    userID: number;\r\n}\r\n\r\nexport interface IAlterUserInfo {\r\n    name: string;\r\n    phoneNumber: string;\r\n    weixin_number: string;\r\n    lawyer_number: string;\r\n}\r\n\r\ninterface IAddUser {\r\n    identify: string;\r\n    lawyerNumber: string;\r\n    identifyNumber: string;\r\n    name: string;\r\n    avatar: string;\r\n    qualificationsNumber: string;\r\n    phone: string;\r\n    startTime: string;\r\n}\r\n\r\n// 获取图片验证码\r\nexport const get_verify_code_api = async () => {\r\n    return await Http.request(`${backIP}/public/verificationCode/image`, {}, 'GET')\r\n}\r\n\r\n// 管理员手机号密码登录\r\nexport const login_password_api = async (data: ILoginPassword) => {\r\n    return await Http.request(`${backIP}/login/password`, data, 'POST')\r\n}\r\n\r\n// 获取管理员基本信息\r\nexport const get_basic_user_info_api = async (data: IGetBasicUserInfo) => {\r\n    return await Http.request(`${backIP}/user/getBasicInfo`, data, 'GET', getHeaders())\r\n}\r\n\r\n// 获取用户列表\r\nexport const get_user_list_api = async () => {\r\n    return await Http.request(`${testIP}/admin/userList`, {}, 'GET', getHeaders())\r\n}\r\n\r\n// 修改用户身份\r\nexport const alter_user_identify_api = async (data: IAlterUserIdentify) => {\r\n    return await Http.request(`${testIP}/admin/user/identify`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 重置用户密码\r\nexport const reset_user_password_api = async (data: IResetUserPassword) => {\r\n    return await Http.request(`${testIP}/admin/user/password`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 获取用户详细信息\r\nexport const get_user_detail_info_api = async (data: IGetDetailUserInfo) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'GET', getHeaders())\r\n}\r\n\r\n// 修改用户信息\r\nexport const alter_user_info_api = async (data: IAlterUserInfo) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 上传文件\r\nexport const upload_file_api = async (data: FormData) => {\r\n    return await Http.request(`${backIP}/public/upload`, data, 'POST', getHeaders())\r\n}\r\n\r\n// 生成新账号\r\nexport const add_new_user_api = async (data: IAddUser) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'POST', getHeaders())\r\n}","import { createFromIconfontCN } from '@ant-design/icons';\r\n\r\nexport const backIP = 'api'\r\n\r\nexport const testIP = 'https://mock.yonyoucloud.com/mock/16533/api'\r\n\r\nexport const IconFont = createFromIconfontCN({\r\n    scriptUrl: 'http://at.alicdn.com/t/font_2274798_999ib79sft.js',\r\n});","import axios from \"axios\";\r\n\r\n// 创建axios默认请求\r\n// axios.defaults.baseURL = \"http://106.14.174.206/api\"; // 后端代码\r\n// 配置超时时间\r\naxios.defaults.timeout = 100000;\r\n// 添加响应拦截器\r\naxios.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninterface BaseHttpResponse {\r\n  code: number;\r\n  data: any;\r\n  message: string;\r\n}\r\n\r\n// 请求的方式\r\ntype IMethod = 'GET' | 'POST' | 'PUT' | 'DELETE'\r\n\r\nclass Http {\r\n  static request(url: string, data: object, method: IMethod, headers?: object): Promise<BaseHttpResponse> {\r\n    if (method === 'GET') {\r\n      return new Promise((resolve, reject) => {\r\n        axios\r\n          .get(url, { data: data, headers: headers })\r\n          .then(res => {\r\n            resolve(res.data);\r\n          })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise((resolve, reject) => {\r\n        axios({\r\n          method: method,\r\n          data: data,\r\n          headers: headers,\r\n          url: url\r\n        }).then(res => {\r\n          resolve(res.data);\r\n        })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Http","import { connect } from 'react-redux'\r\nimport { transform_user } from 'redux/actions'\r\nimport Header from 'components/home/Header'\r\nexport default connect(\r\n    state => ({\r\n        user: state\r\n    }),\r\n    {transform_user}\r\n)(Header)","// 包含所有的 action creator\r\nimport {\r\n    USER_DATA,\r\n    REMOVE_USER_DATA\r\n} from './action-types';\r\nimport { UserBasicConfig } from 'components/home/Header';\r\n\r\n// TODO: 需修改\r\n// 从register里传递已登录的用户数据到其余各个组件\r\nexport const transform_user = (user: UserBasicConfig)=>({\r\n    type: USER_DATA,\r\n    data: user\r\n}) \r\n\r\n// 退出登录，删去redux的数据\r\nexport const remove_user = (user: UserBasicConfig)=>({\r\n    type: REMOVE_USER_DATA,\r\n    data: user\r\n}) \r\n\r\n// 异步action\r\n// 如果想返回一个函数，必须应用上异步中间件\r\n// export const incrementAsync = (number) => {\r\n//     return dispatch => {\r\n//         // 异步代码\r\n//         setTimeout(() => {\r\n//             // 一秒之后才去分发一个增加的action\r\n//             dispatch(increment(number))\r\n//         }, 1000)\r\n//     }\r\n// }","import React, { useEffect, useState } from 'react'\r\nimport 'styles/home/header.scss'\r\nimport store from 'redux/store'\r\nimport { getToken, IconFont, removeToken, successToast, errorToast } from 'components/common/utils'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { get_basic_user_info_api } from 'http/UserApi'\r\n\r\nconst stylePrefix = 'home-header'\r\n\r\nexport interface UserBasicConfig {\r\n    avatar: string; // 头像\r\n    name: string; // 真实姓名\r\n    lawyer_number: string;\r\n}\r\n\r\ninterface HeaderConfig {\r\n    transform_user: (user: UserBasicConfig) => {\r\n        type: string;\r\n        data: UserBasicConfig;\r\n    }\r\n}\r\n\r\nexport default function Header({ transform_user }: HeaderConfig) {\r\n    const history = useHistory()\r\n    const [avatar, setAvatar] = useState(store.getState().user?.avatar)\r\n    const [isMouse, setIsMouse] = useState(false)\r\n    const getBasicUser = async () => {\r\n        const token: string = getToken()\r\n        if (token && !store.getState().user) {\r\n            const res = await get_basic_user_info_api({});\r\n            const tempUserData: UserBasicConfig = res.data\r\n            console.log(tempUserData)\r\n            setAvatar(tempUserData.avatar)\r\n            transform_user(tempUserData)\r\n        }\r\n\r\n        if (!store.getState().user) {\r\n            errorToast('请先登录')\r\n            history.push('/login')\r\n        }\r\n    }\r\n    const exitLogin = () => {\r\n        removeToken()\r\n        successToast('退出登录成功')\r\n        history.push('/login')\r\n    }\r\n    const gotoHome = () => {\r\n        history.push('/home')\r\n    }\r\n\r\n    useEffect(() => {\r\n        store.subscribe(()=>{\r\n            getBasicUser();\r\n        })\r\n        getBasicUser();\r\n    }, [])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`}>\r\n            <p className={`${stylePrefix}-title`} onClick={gotoHome}>律政云</p>\r\n            <div\r\n                className={`${stylePrefix}-user-layout`}\r\n                onMouseOver={() => setIsMouse(true)}\r\n                onMouseOut={() => setIsMouse(false)}\r\n            >\r\n                <img onClick={() => console.log(avatar)} src={avatar} alt=\"avatar\" className={`${stylePrefix}-avatar`} />\r\n                <IconFont\r\n                    type='icon-xiabiao'\r\n                    className={`${stylePrefix}-icon`}\r\n                    style={{\r\n                        color: isMouse ? '#000' : '#fff'\r\n                    }}\r\n                />\r\n                <div\r\n                    className={`${stylePrefix}-user-operation-layout`}\r\n                    style={{\r\n                        display: isMouse ? 'block' : 'none'\r\n                    }}\r\n                >\r\n                    <p\r\n                        className={`${stylePrefix}-user-operation-word`}\r\n                        onClick={exitLogin}\r\n                    >\r\n                        退出登录\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport 'styles/home/sider.scss'\r\nimport siderData from 'static/sider.json'\r\nimport { IconFont } from 'components/common/utils'\r\n\r\nconst stylePrefix = 'home-sider'\r\n\r\ninterface SiderConfig {\r\n    activeIndex: number\r\n    setActiveSiderIndex: React.Dispatch<React.SetStateAction<number>>\r\n}\r\n\r\nexport default function Sider({ activeIndex, setActiveSiderIndex }: SiderConfig) {\r\n    return (\r\n        <div className={`${stylePrefix}-layout`}>\r\n            {\r\n                siderData.map((siderItem, index) => {\r\n                    return <div\r\n                        key={index}\r\n                        className={`${stylePrefix}-sider-item`}\r\n                        onClick={() => setActiveSiderIndex(index)}\r\n                    >\r\n                        <IconFont type={siderItem.icon} className={`${stylePrefix}-sider-icon`} />\r\n                        <p className={`${stylePrefix}-sider-title`}>{siderItem.title}</p>\r\n                    </div>\r\n                })\r\n            }\r\n            <div\r\n                className={`${stylePrefix}-shadow`}\r\n                style={{\r\n                    top: 60 * activeIndex\r\n                }}\r\n            >\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport 'styles/common/authorShow.scss'\r\n\r\nconst stylePrefix = 'common-author'\r\n\r\ninterface AuthorShowConfig {\r\n    avatar: string\r\n    realname: string\r\n    createTime: string\r\n}\r\n\r\nexport default function AuthorShow({ avatar, realname, createTime }: AuthorShowConfig) {\r\n    return (\r\n        <div className={`${stylePrefix}-author-layout`} >\r\n            <img src={avatar} alt=\"头像\" className={`${stylePrefix}-avatar`} />\r\n            <div className={`${stylePrefix}-author-info`} >\r\n                <p className={`${stylePrefix}-realname`} >{realname}</p>\r\n                <p className={`${stylePrefix}-createTime`} >{createTime}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Modal, Button } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { AuthorConfig, successToast, errorToast } from 'components/common/utils'\r\nimport AuthorShow from 'components/common/AuthorShow'\r\nimport Loading2 from 'components/common/Loading2'\r\nimport { getUserVerifyDetailApi, submitUserVerifyResultApi } from 'http/UserApi'\r\nimport 'styles/home/userVerifyDetail.scss'\r\n\r\nconst stylePrefix = 'home-verifyDetail'\r\n\r\ninterface UserVerifyDetailConfig {\r\n    visible: boolean\r\n    setVisible: React.Dispatch<React.SetStateAction<boolean>>\r\n    verifyID: number | null\r\n    getUserVerifyList: () => Promise<void>\r\n}\r\n\r\ninterface UserVerifyDetailDataConfig {\r\n    author: AuthorConfig,\r\n    createTime: string, // 创建时间，3个月前\r\n    content: string, // 内容\r\n    files: string[]\r\n}\r\n\r\nexport default function UserVerifyDetail({ visible, setVisible, verifyID, getUserVerifyList }: UserVerifyDetailConfig) {\r\n    const [verifyDetail, setVerifyDetail] = useState<UserVerifyDetailDataConfig | null>(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const handleCancel = () => {\r\n        setVisible(false)\r\n        getUserVerifyList()\r\n    }\r\n    const getVerifyDetail = async () => {\r\n        if (verifyID !== null) {\r\n            setLoading(true)\r\n            const res = await getUserVerifyDetailApi({\r\n                id: verifyID\r\n            })\r\n            if (res.code === 0) {\r\n                setLoading(false)\r\n                setVerifyDetail(res.data)\r\n            }\r\n        }\r\n    }\r\n    const submit = async (result: boolean) => {\r\n        if (verifyID) {\r\n            const res = await submitUserVerifyResultApi({\r\n                id: verifyID,\r\n                isAgree: result\r\n            })\r\n            if (res.code === 0) {\r\n                successToast(res.message)\r\n            } else {\r\n                errorToast(res.message)\r\n            }\r\n            handleCancel()\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getVerifyDetail()\r\n    }, [verifyID])\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"用户审核详情\"\r\n            onCancel={handleCancel}\r\n            footer={[]}\r\n        >\r\n            {\r\n                loading\r\n                    ? <Loading2 />\r\n                    : verifyDetail && <>\r\n                        <AuthorShow\r\n                            avatar={verifyDetail.author.avatar}\r\n                            realname={verifyDetail.author.realname}\r\n                            createTime={verifyDetail.createTime}\r\n                        />\r\n                        <p className={`${stylePrefix}-content`} >{verifyDetail.content}</p>\r\n                        <div className={`${stylePrefix}-image-layout`}>\r\n                            {\r\n                                verifyDetail.files.map((file, index) => {\r\n                                    return <img\r\n                                        key={index}\r\n                                        src={file}\r\n                                        className={`${stylePrefix}-image`}\r\n                                        alt=\"图片\"\r\n                                    />\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className={`${stylePrefix}-btn-layout`} >\r\n                            <Button type=\"primary\" onClick={() => submit(true)} >同意审核</Button>\r\n                            <Button type=\"primary\" danger onClick={() => submit(false)} >不同意审核</Button>\r\n                        </div>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport 'styles/home/userVerify.scss'\r\nimport { getUserVerifyListApi } from 'http/UserApi'\r\nimport { AuthorConfig, errorToast } from 'components/common/utils'\r\nimport Loading2 from 'components/common/Loading2'\r\nimport UserVerifyDetail from './UserVerifyDetail'\r\nimport AuthorShow from 'components/common/AuthorShow'\r\nimport userVerifyModelList from 'model/userVerifyList.json'\r\n\r\nconst stylePrefix = 'home-userverify'\r\n\r\ninterface UserVerifyItemConfig {\r\n    id: number, // 审核ID\r\n    author: AuthorConfig\r\n    createTime: string, // 创建时间（距现在多久），如3个月前\r\n    abstract: string, // 摘要30字\r\n    firstPicture: string, // 第一张图片，如果没有则不传\r\n}\r\n\r\nexport default function UserVerify() {\r\n    const [loading, setLoading] = useState(false)\r\n    const [userVerifyList, setUserVerifyList] = useState<UserVerifyItemConfig[]>([])\r\n    const [visible, setVisible] = useState(false)\r\n    const [verifyID, setVerifyID] = useState<null | number>(null)\r\n\r\n    const getUserVerifyList = async () => {\r\n        setLoading(true)\r\n        const res = await getUserVerifyListApi()\r\n        if (res.code === 0) {\r\n            console.log(res.data);\r\n            setUserVerifyList(res.data)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n    const openModal = (id: number) => {\r\n        setVisible(true)\r\n        setVerifyID(id)\r\n    }\r\n    useEffect(() => {\r\n        getUserVerifyList()\r\n    }, [])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            {\r\n                loading\r\n                    ? <Loading2 backgroundColor='#fff' />\r\n                    : userVerifyList.length !== 0\r\n                        ? userVerifyList.map((userVerifyItem, index) => {\r\n                            return <div\r\n                                key={index}\r\n                                className={`${stylePrefix}-user-verify-item`}\r\n                                onClick={() => openModal(userVerifyItem.id)}\r\n                            >\r\n                                <div className={`${stylePrefix}-user-verify-item-main`}>\r\n                                    <AuthorShow\r\n                                        avatar={userVerifyItem.author.avatar}\r\n                                        realname={userVerifyItem.author.realname}\r\n                                        createTime={userVerifyItem.createTime}\r\n                                    />\r\n                                    <p className={`${stylePrefix}-abstract`}>{userVerifyItem.abstract}</p>\r\n                                </div>\r\n                                {\r\n                                    userVerifyItem.firstPicture &&\r\n                                    <img src={userVerifyItem.firstPicture} alt=\"图片\" className={`${stylePrefix}-picture`} />\r\n                                }\r\n                            </div>\r\n                        })\r\n                        : <p className='empty-tip' >暂无信息</p>\r\n            }\r\n            <UserVerifyDetail\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                verifyID={verifyID}\r\n                getUserVerifyList={getUserVerifyList}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Input, Modal } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport 'styles/home/alterUserInfoModal.scss'\r\nimport { alter_user_info_api, get_user_detail_info_api, IAlterUserInfo } from 'http/UserApi'\r\nimport { errorToast, httpIsSuccess, successToast } from 'components/common/utils'\r\nimport Loading2 from 'components/common/Loading2'\r\n\r\nconst stylePrefix = 'home-alterUser'\r\n\r\ninterface AlterUserInfoModalConfig {\r\n    visible: boolean\r\n    setVisible: React.Dispatch<React.SetStateAction<boolean>>\r\n    userID: number | null;\r\n    getUserList: (page: number) => Promise<void>\r\n    current: number\r\n}\r\n\r\nexport interface UserDetailConfig {\r\n    name?: string;\r\n    phoneNumber?: string;\r\n    weixin_number?: string;\r\n    lawyer_number?: string;\r\n}\r\n\r\nexport default function AlterUserInfoModal({ visible, setVisible, userID, getUserList, current }: AlterUserInfoModalConfig) {\r\n    const [loading, setLoading] = useState(false)\r\n    const [user, setUser] = useState<UserDetailConfig | null>(null)\r\n    const handleOk = async () => {\r\n        if (user && user.name && user.phoneNumber && user.lawyer_number && user.weixin_number) {\r\n            setLoading(true)\r\n            const res = await alter_user_info_api((user as IAlterUserInfo))\r\n            if (httpIsSuccess(res.code)) {\r\n                getUserList(current)\r\n                successToast('修改成功')\r\n            } else {\r\n                errorToast(res.message)\r\n            }\r\n            setVisible(false)\r\n            setLoading(false)\r\n        }\r\n    }\r\n    // 处理输入框变化\r\n    const handleInput = (key: string, value: string) => {\r\n        if (user) {\r\n            setUser({\r\n                ...user,\r\n                [key]: value\r\n            })\r\n        }\r\n    }\r\n    // 获取用户详细信息\r\n    const getUserDetail = async () => {\r\n        if (userID !== null) {\r\n            const res = await get_user_detail_info_api({ userID });\r\n            if (httpIsSuccess(res.code)) {\r\n                setUser(res.data)\r\n            } else {\r\n                errorToast(res.message)\r\n            }\r\n        }\r\n    }\r\n    const handleCancel = () => {\r\n        setVisible(false)\r\n    }\r\n    useEffect(() => {\r\n        getUserDetail()\r\n    }, [userID])\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"修改用户信息\"\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            footer={[\r\n                <Button key=\"back\" onClick={handleCancel}>\r\n                    返回\r\n                </Button>,\r\n                <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}>\r\n                    提交\r\n                </Button>,\r\n            ]}\r\n        >\r\n            {\r\n                user ? <>\r\n                    <Input\r\n                        value={user.name || ''}\r\n                        placeholder='姓名'\r\n                        onChange={(e) => handleInput('name', e.target.value)}\r\n                        className={`${stylePrefix}-input`}\r\n                    />\r\n                    <Input\r\n                        value={user.phoneNumber || ''}\r\n                        placeholder='手机号'\r\n                        onChange={(e) => handleInput('phoneNumber', e.target.value)}\r\n                        className={`${stylePrefix}-input`}\r\n                    />\r\n                    <Input\r\n                        value={user.lawyer_number || ''}\r\n                        placeholder='律师证号'\r\n                        onChange={(e) => handleInput('lawyer_number', e.target.value)}\r\n                        className={`${stylePrefix}-input`}\r\n                    />\r\n                    <Input\r\n                        value={user.weixin_number || ''}\r\n                        placeholder='微信号'\r\n                        onChange={(e) => handleInput('weixin_number', e.target.value)}\r\n                        className={`${stylePrefix}-input`}\r\n                    />\r\n                </>\r\n                    : <Loading2 />\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import { Button, DatePicker, Input, Radio } from 'antd'\r\nimport Modal from 'antd/lib/modal/Modal'\r\nimport { errorToast, httpIsSuccess, IconFont, successToast } from 'components/common/utils'\r\nimport { add_new_user_api, upload_file_api } from 'http/UserApi'\r\nimport React, { ChangeEvent, useRef, useState } from 'react'\r\nimport 'styles/home/addUserInfoModal.scss'\r\nconst stylePrefix = 'home-addUserModel'\r\n\r\ninterface AddUserInfoModelConfig {\r\n    visible: boolean;\r\n    setVisible: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nexport default function AddUserInfoModel({ visible, setVisible }: AddUserInfoModelConfig) {\r\n    const [loading, setLoading] = useState(false)\r\n    const [identify, setIdentify] = useState('common_lawyer') // 律师、管理员身份选择器\r\n    const [lawyerNumber, setLawyerNumber] = useState('') // 律师证号\r\n    const [identifyNumber, setIdentifyNumber] = useState('') // 身份证号码\r\n    const [name, setName] = useState('') // 真实姓名\r\n    const [img, setImg] = useState<string | null>(null) // 头像\r\n    const [qualificationsNumber, setQualificationsNumber] = useState('') // 法律资格证号\r\n    const [phone, setPhone] = useState('') // 电话号码\r\n    const [startTime, setStartTime] = useState('') // 职业开始时间\r\n    const fileInput = useRef<HTMLInputElement>(null)\r\n    const handleCancel = () => {\r\n        setVisible(false)\r\n        clear()\r\n    }\r\n    const handleOk = async () => {\r\n        if (img) {\r\n            const res = await add_new_user_api({\r\n                identify,\r\n                lawyerNumber,\r\n                identifyNumber,\r\n                name,\r\n                avatar: img,\r\n                qualificationsNumber,\r\n                phone,\r\n                startTime,\r\n            })\r\n            if (httpIsSuccess(res.code)) {\r\n                successToast('操作成功')\r\n                setVisible(false)\r\n                clear()\r\n            } else {\r\n                errorToast(res.message)\r\n            }\r\n        }\r\n    }\r\n    // 清除数据\r\n    const clear = () => {\r\n        setIdentify('')\r\n        setLawyerNumber('')\r\n        setName('')\r\n        setIdentifyNumber('')\r\n        setQualificationsNumber('')\r\n        setPhone('')\r\n        setImg(null)\r\n        setStartTime('')\r\n    }\r\n    // 处理时间选择\r\n    const onChange = (date: any, _dateString: any) => {\r\n        const selectDate = new Date(date._d);\r\n        setStartTime(selectDate.getTime().toString())\r\n    }\r\n    const handleFileChange = async (e: ChangeEvent<HTMLInputElement>) => {\r\n        const files = e.target.files\r\n        if (files) {\r\n            const uploadFile = Array.from(files)[0]\r\n            const formData = new FormData()\r\n            formData.append(uploadFile.name, uploadFile)\r\n            const res = await upload_file_api(formData);\r\n            if (httpIsSuccess(res.code)) {\r\n                setImg(res.data)\r\n            } else {\r\n                errorToast(res.message)\r\n            }\r\n        }\r\n    }\r\n    // TODO: 正则检验\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"修改用户信息\"\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            footer={[\r\n                <Button key=\"back\" onClick={handleCancel}>\r\n                    返回\r\n                </Button>,\r\n                <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}>\r\n                    提交\r\n                </Button>,\r\n            ]}\r\n        >\r\n            <>\r\n                <div className={`${stylePrefix}-radio-layout`} >\r\n                    <Radio.Group\r\n                        onChange={(e) => setIdentify(e.target.value)}\r\n                        value={identify}\r\n                    >\r\n                        <Radio value='common_lawyer'>律师</Radio>\r\n                        <Radio value='administrator'>管理员</Radio>\r\n                    </Radio.Group>\r\n                </div>\r\n                <Input\r\n                    value={lawyerNumber}\r\n                    placeholder='律师证号'\r\n                    onChange={(e) => setLawyerNumber(e.target.value)}\r\n                    className={`${stylePrefix}-input`}\r\n                />\r\n                <Input\r\n                    value={identifyNumber}\r\n                    placeholder='身份证号'\r\n                    onChange={(e) => setIdentifyNumber(e.target.value)}\r\n                    className={`${stylePrefix}-input`}\r\n                />\r\n                <Input\r\n                    value={name}\r\n                    placeholder='姓名'\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    className={`${stylePrefix}-input`}\r\n                />\r\n                <Input\r\n                    value={qualificationsNumber}\r\n                    placeholder='法律资格证号'\r\n                    onChange={(e) => setQualificationsNumber(e.target.value)}\r\n                    className={`${stylePrefix}-input`}\r\n                />\r\n                <Input\r\n                    value={phone}\r\n                    placeholder='电话号码'\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                    className={`${stylePrefix}-input`}\r\n                />\r\n                <div className={`${stylePrefix}-datatime-layout`} >\r\n                    <p className={`${stylePrefix}-datatime-title`} >职业起始时间：</p>\r\n                    <DatePicker\r\n                        onChange={onChange}\r\n                        className={`${stylePrefix}-datatime-main`}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"file\"\r\n                        style={{\r\n                            display: 'none'\r\n                        }}\r\n                        ref={fileInput}\r\n                        onChange={handleFileChange}\r\n                    />\r\n                    <div className={`${stylePrefix}-avatar-layout`} >\r\n                        <p className={`${stylePrefix}-avatar-title`} >头像：</p>\r\n                        {\r\n                            img\r\n                                ? <img\r\n                                    src={img}\r\n                                    alt=\"\"\r\n                                    className={`${stylePrefix}-avatar-main`}\r\n                                    onClick={() => fileInput.current?.click()}\r\n                                />\r\n                                : <div\r\n                                    className={`${stylePrefix}-avatar-main`}\r\n                                    onClick={() => fileInput.current?.click()}\r\n                                >\r\n                                    <IconFont\r\n                                        type='iconjia'\r\n                                        className={`${stylePrefix}-avatar-icon`}\r\n                                    />\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport 'styles/home/userList.scss'\r\nimport { Table, Button, Select, Space } from 'antd';\r\nimport { AuthorConfig, IndentifyConfig, errorToast, successToast, httpIsSuccess } from 'components/common/utils';\r\nimport { get_user_list_api, alter_user_identify_api, reset_user_password_api } from 'http/UserApi';\r\nimport { ColumnsType, TablePaginationConfig } from 'antd/lib/table';\r\nimport AlterUserInfoModal from './AlterUserInfoModal';\r\nimport md5 from 'md5';\r\nimport indentifyList from 'static/identify.json'\r\nimport { useHistory } from 'react-router-dom';\r\nimport AddUserInfoModel from './AddUserInfoModel';\r\n\r\nconst stylePrefix = 'home-userList'\r\nconst { Option } = Select;\r\n\r\nexport interface UserItemConfig {\r\n    id: number;\r\n    key: string\r\n    isMy: boolean\r\n    avatar: string,\r\n    name: string,\r\n    identify: IndentifyConfig;\r\n}\r\n\r\nexport default function UserList() {\r\n    const [loading, setLoading] = useState(false)\r\n    const [userList, setUserList] = useState<UserItemConfig[]>([])\r\n    const [current, setCurrent] = useState(1) // 当前page\r\n    const [visible, setVisible] = useState(false) // 修改用户信息visible\r\n    const [addVisible, setAddVisible] = useState(false) // 增加用户信息visible\r\n    const [selectedUserID, setSelectedUserID] = useState<number | null>(null)\r\n    const [num, setNum] = useState(0)\r\n    const history = useHistory()\r\n    // 修改用户身份\r\n    const handleChange = async (userID: number, identifyID: number) => {\r\n        const res = await alter_user_identify_api({\r\n            userID: userID,\r\n            identifyID: identifyID\r\n        })\r\n        httpIsSuccess(res.code) ? successToast('修改成功') : errorToast(res.message)\r\n    }\r\n    // 重置用户密码\r\n    const resetPassword = async (id: number) => {\r\n        const res = await reset_user_password_api({\r\n            userID: id,\r\n            password: md5('123456')\r\n        })\r\n        httpIsSuccess(res.code) ? successToast('重置密码成功') : errorToast(res.message)\r\n    }\r\n    const openModal = (userID: number) => {\r\n        setSelectedUserID(userID)\r\n        setVisible(true)\r\n    }\r\n    const gotoSalaryPage = (userID: number) => {\r\n        history.push(`/salary/${userID}`);\r\n    }\r\n    const columns: ColumnsType<UserItemConfig> = [\r\n        {\r\n            title: '姓名',\r\n            dataIndex: 'author',\r\n            key: 'author',\r\n            render: (_author: AuthorConfig, record: UserItemConfig) => {\r\n                return (\r\n                    <div className={`${stylePrefix}-author`}>\r\n                        <img className={`${stylePrefix}-avatar`} src={record.avatar} alt=\"头像\" />\r\n                        <p className={`${stylePrefix}-realname`} >{record.name}</p>\r\n                        {\r\n                            record.isMy && <div className={`${stylePrefix}-tag`}>我</div>\r\n                        }\r\n                    </div>\r\n                )\r\n            },\r\n        },\r\n        {\r\n            title: '身份',\r\n            key: 'identify',\r\n            dataIndex: 'identify',\r\n            render: (indentify: IndentifyConfig, record: UserItemConfig) => (\r\n                <Select\r\n                    disabled={record.isMy}\r\n                    defaultValue={indentify.id}\r\n                    style={{ width: 120 }}\r\n                    onChange={(identifyID) => handleChange(record.id, identifyID)}\r\n                >\r\n                    {\r\n                        indentifyList.map((identifyItem, index) => {\r\n                            return <Option key={index} value={identifyItem.id}>{identifyItem.value}</Option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            ),\r\n            align: 'center'\r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'action',\r\n            render: (text: UserItemConfig) => {\r\n                return (\r\n                    <Space size='large' >\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={() => openModal(text.id)}\r\n                        >修改</Button>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={() => resetPassword(text.id)}\r\n                        >\r\n                            重置密码\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => gotoSalaryPage(text.id)}\r\n                        >查看收入</Button>\r\n                    </Space>\r\n                )\r\n            },\r\n            align: 'center'\r\n        },\r\n    ];\r\n    const getUserList = async () => {\r\n        setLoading(true)\r\n        const res = await get_user_list_api()\r\n        if (httpIsSuccess(res.code)) {\r\n            const userListTemp = res.data.map((userItem: any, index: number) => {\r\n                return {\r\n                    ...userItem,\r\n                    key: index.toString()\r\n                }\r\n            })\r\n            setNum(res.data.length)\r\n            setUserList(userListTemp)\r\n            setLoading(false)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n    }\r\n    const handleTableChange = (pagination: TablePaginationConfig) => {\r\n        if (pagination.current) {\r\n            setCurrent(pagination.current)\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getUserList()\r\n    }, [])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            <div className={`${stylePrefix}-header`}>\r\n                <p>\r\n                    <span className={`${stylePrefix}-title`} >用户总数：</span>\r\n                    <span>{userList.length}</span>\r\n                </p>\r\n                <Button onClick={() => setAddVisible(true)} type=\"primary\">增加账号</Button>\r\n            </div>\r\n            <Table\r\n                loading={loading}\r\n                className={`${stylePrefix}-table`}\r\n                columns={columns}\r\n                dataSource={userList}\r\n                pagination={{\r\n                    current: current,\r\n                    pageSize: 10, // 一页多少项\r\n                    total: num, // 总共多少项\r\n                }}\r\n                onChange={handleTableChange}\r\n            />\r\n            <AlterUserInfoModal\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                userID={selectedUserID}\r\n                getUserList={getUserList}\r\n                current={current}\r\n            />\r\n            <AddUserInfoModel\r\n                visible={addVisible}\r\n                setVisible={setAddVisible}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios'\r\nimport { httpConfig, getHeaders } from 'components/common/utils'\r\n\r\ninterface getErrorListConfig {\r\n    identityID: number\r\n    page: number\r\n}\r\ninterface getErrorDetailConfig {\r\n    errorID: number\r\n}\r\n\r\n// 获取错误列表\r\nexport const getErrorListApi = async (data: getErrorListConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: '/api/error/list',\r\n        params: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n// 获取错误详情\r\nexport const getErrorDetailApi = async (data: getErrorDetailConfig) => {\r\n    const { data: res }: { data: httpConfig } = await axios({\r\n        method: 'GET',\r\n        url: '/api/error',\r\n        params: data,\r\n        headers: getHeaders()\r\n    })\r\n\r\n    return res\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Modal } from 'antd'\r\nimport AuthorShow from 'components/common/AuthorShow'\r\nimport { AuthorConfig, errorToast } from 'components/common/utils'\r\nimport Loading2 from 'components/common/Loading2'\r\nimport errorDetailModel from 'model/errorDetail.json'\r\nimport 'styles/home/errorDetailModal.scss'\r\nimport { getErrorDetailApi } from 'http/ErrorMessageApi'\r\n\r\nconst stylePrefix = 'home-errorDetail'\r\n\r\ninterface ErrorDetailConfig {\r\n    visible: boolean\r\n    setVisible: React.Dispatch<React.SetStateAction<boolean>>\r\n    errorID: number | null\r\n}\r\n\r\ninterface ErrorDetailDataConfig {\r\n    author: AuthorConfig,\r\n    createTime: string, // 创建时间，3个月前\r\n    content: string, // 内容\r\n    files: string[]\r\n}\r\n\r\nexport default function ErrorDetailModel({ visible, setVisible, errorID }: ErrorDetailConfig) {\r\n    const [errorDetail, setErrorDetail] = useState<ErrorDetailDataConfig | null>(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const handleCancel = () => {\r\n        setVisible(false)\r\n    }\r\n    const getErrorDetail = async () => {\r\n        if (errorID === null) {\r\n            return\r\n        }\r\n        setLoading(true)\r\n        const res = await getErrorDetailApi({\r\n            errorID: errorID\r\n        })\r\n        if (res.code === 0) {\r\n            setErrorDetail(res.data)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n        setLoading(false)\r\n    }\r\n    useEffect(() => {\r\n        getErrorDetail()\r\n    }, [errorID])\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"查看错误详情\"\r\n            onCancel={handleCancel}\r\n            footer={[]}\r\n        >\r\n            {\r\n                loading\r\n                    ? <Loading2 />\r\n                    : <>\r\n                        {\r\n                            errorDetail && <AuthorShow\r\n                                avatar={errorDetail.author.avatar}\r\n                                realname={errorDetail.author.realname}\r\n                                createTime={errorDetail.createTime}\r\n                            />\r\n                        }\r\n                        <p className={`${stylePrefix}-content`} >{errorDetail?.content}</p>\r\n                        <div className={`${stylePrefix}-img-layout`} >\r\n                            {\r\n                                errorDetail && errorDetail.files.map((file, index) => {\r\n                                    return <img\r\n                                        className={`${stylePrefix}-img`}\r\n                                        key={index}\r\n                                        src={file}\r\n                                        alt=\"图片\"\r\n                                    />\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport 'styles/home/errorList.scss'\r\nimport { AuthorConfig, errorToast, IndentifyConfig } from 'components/common/utils'\r\nimport 'styles/home/errorList.scss'\r\nimport Loading2 from 'components/common/Loading2'\r\nimport AuthorShow from 'components/common/AuthorShow'\r\nimport { Radio, Button } from 'antd';\r\nimport { RadioChangeEvent } from 'antd/lib/radio'\r\nimport { getIdentifyListApi } from 'http/UserApi'\r\nimport ErrorDetailModel from './ErrorDetailModel'\r\nimport { getErrorListApi } from 'http/ErrorMessageApi'\r\n\r\nconst stylePrefix = 'home-error'\r\n\r\ninterface ErrorItem {\r\n    id: number, // 错误单项ID\r\n    author: AuthorConfig,\r\n    createTime: string, // 创建时间\r\n    abstract: string, // 摘要30字\r\n}\r\n\r\nexport default function ErrorList() {\r\n    const [loading, setLoading] = useState(false)\r\n    const [errorList, setErrorList] = useState<ErrorItem[]>([])\r\n    const [radioIdentifyID, setRadioIdentifyID] = useState(-1)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [pageNum, setPageNum] = useState(1)\r\n    const [identifyList, setIdentifyList] = useState<IndentifyConfig[]>([])\r\n    const [visible, setVisible] = useState(false)\r\n    const [errorID, setErrorID] = useState<number | null>(null)\r\n\r\n    const getErrorList = async (page: number) => {\r\n        setLoading(true)\r\n        const res = await getErrorListApi({\r\n            identityID: radioIdentifyID,\r\n            page: page\r\n        })\r\n        console.log(res);\r\n        if (res.code === 0) {\r\n            setErrorList(res.data.list)\r\n            setPageNum(res.data.page)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n        setLoading(false)\r\n    }\r\n    const getIdentifyList = async () => {\r\n        const res = await getIdentifyListApi();\r\n        if (res.code === 0) {\r\n            setIdentifyList(res.data)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n    }\r\n    const onChange = (e: RadioChangeEvent) => {\r\n        setRadioIdentifyID(e.target.value)\r\n        setCurrentPage(1)\r\n    }\r\n    const openModal = (id: number) => {\r\n        setErrorID(id)\r\n        setVisible(true)\r\n    }\r\n    useEffect(() => {\r\n        getErrorList(currentPage)\r\n        getIdentifyList()\r\n    }, [currentPage, radioIdentifyID])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            <Radio.Group className={`${stylePrefix}-radio-group`} onChange={onChange} value={radioIdentifyID}>\r\n                <Radio value={-1}>全部</Radio>\r\n                {\r\n                    identifyList.map((identifyItem, index) => {\r\n                        return <Radio\r\n                            key={index}\r\n                            value={identifyItem.id}\r\n                        >\r\n                            {identifyItem.value}\r\n                        </Radio>\r\n                    })\r\n                }\r\n            </Radio.Group>\r\n            {\r\n                loading\r\n                    ? <Loading2 backgroundColor='#fff' />\r\n                    :\r\n                    errorList.map((errorItem, index) => {\r\n                        return <div\r\n                            key={index}\r\n                            className={`${stylePrefix}-errorItem-layout`}\r\n                            onClick={() => openModal(errorItem.id)}\r\n                        >\r\n                            <AuthorShow\r\n                                avatar={errorItem.author.avatar}\r\n                                realname={errorItem.author.realname}\r\n                                createTime={errorItem.createTime}\r\n                            />\r\n                            <p className={`${stylePrefix}-abstract`} >{errorItem.abstract}</p>\r\n                        </div>\r\n                    })\r\n            }\r\n            {\r\n                errorList.length !== 0\r\n                    ? <div className={`${stylePrefix}-btn-layout`}>\r\n                        <Button size='large' onClick={() => setCurrentPage(currentPage - 1)} disabled={currentPage === 1} >Previous</Button>\r\n                        <Button size='large' onClick={() => setCurrentPage(currentPage + 1)} disabled={currentPage === pageNum} >Next</Button>\r\n                    </div>\r\n                    : <p className='empty-tip' >暂无信息</p>\r\n            }\r\n            <ErrorDetailModel\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                errorID={errorID}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport 'styles/pages/home.scss'\r\nimport { Provider } from 'react-redux'\r\nimport store from 'redux/store'\r\nimport HeaderContainer from 'containers/HeaderContainer'\r\nimport Sider from 'components/home/Sider'\r\nimport UserVerify from 'components/home/UserVerify'\r\nimport UserList from 'components/home/UserList'\r\nimport ErrorList from 'components/home/ErrorList'\r\n\r\nconst stylePrefix = 'page-home'\r\n\r\nexport default function Home() {\r\n    const [activeSiderIndex, setActiveSiderIndex] = useState(0)\r\n    const mainPageMap = new Map();\r\n    mainPageMap.set(0, <UserList />)\r\n    mainPageMap.set(1, <UserVerify />)\r\n    mainPageMap.set(2, <ErrorList />)\r\n    return (\r\n        <div className={`${stylePrefix}-layout`}>\r\n            <Provider store={store}>\r\n                <HeaderContainer />\r\n            </Provider>\r\n            <div className={`${stylePrefix}-main`} >\r\n                <Sider activeIndex={activeSiderIndex} setActiveSiderIndex={setActiveSiderIndex} />\r\n                {\r\n                    mainPageMap.get(activeSiderIndex)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}