{"version":3,"sources":["components/common/utils.tsx","components/common/config.ts","http/UserApi.tsx","http/Servies.tsx","containers/HeaderContainer.tsx","redux/actions.ts","components/home/Header.tsx","http/Salary.tsx","components/salary/SalaryList.tsx","components/salary/UserBasicShow.tsx","pages/salary.tsx"],"names":["successToast","msg","message","success","errorToast","error","getToken","cookies","load","setToken","token","save","maxAge","removeToken","remove","getHeaders","httpIsSuccess","code","formatTime","date","year","getFullYear","month","getMonth","day","getDay","hour","getHours","minute","getMinutes","seconds","getSeconds","backIP","testIP","IconFont","createFromIconfontCN","scriptUrl","get_verify_code_api","a","Http","request","login_password_api","data","get_basic_user_info_api","get_user_list_api","alter_user_identify_api","reset_user_password_api","get_user_detail_info_api","alter_user_info_api","upload_file_api","add_new_user_api","search_user_list_api","axios","defaults","timeout","interceptors","response","use","Promise","reject","url","method","headers","resolve","get","params","then","res","catch","err","connect","state","user","transform_user","type","USER_DATA","title","history","useHistory","useState","store","getState","avatar","setAvatar","isMouse","setIsMouse","getBasicUser","useCallback","tempUserData","push","useEffect","subscribe","className","onClick","onMouseOver","onMouseOut","console","log","src","alt","style","color","display","get_user_info_in_salary_api","get_salary_list_api","stylePrefix","SalaryList","userID","salaryList","setSalaryList","getSalaryList","map","salary","index","key","year_salary","case_list","caseItem","case_name","identity","ratio","UserBasicShow","setUser","loading","setLoading","init","buildOtherInfoItem","value","Loading2","name","salaryNum","phoneNumber","weixin_number","lawyer_number","Salary","useParams","HeaderContainer","parseInt","id"],"mappings":"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","file":"static/js/10.7cf2c7cc.chunk.js","sourcesContent":["import { message } from 'antd';\r\nimport cookies from 'react-cookies'\r\n\r\nexport interface httpConfig {\r\n    code: number\r\n    data: any\r\n    message: string\r\n}\r\n\r\nexport const successToast = (msg: string) => {\r\n    message.success(msg);\r\n}\r\n\r\nexport const errorToast = (msg: string) => {\r\n    message.error(msg);\r\n}\r\n\r\nexport const getToken = (): string => {\r\n    return cookies.load('Authorization')\r\n}\r\n\r\nexport const setToken = (token: string) => {\r\n    cookies.save('Authorization', token, {\r\n        maxAge: 60 * 60 * 24 * 7\r\n    })\r\n}\r\n\r\nexport const removeToken = () => {\r\n    cookies.remove('Authorization')\r\n}\r\n\r\nexport const getHeaders = () => {\r\n    const token: string = getToken()\r\n    return {\r\n        'Authorization': token\r\n    }\r\n}\r\n\r\nexport interface AuthorConfig {\r\n    id: number, // 作者ID\r\n    avatar: string, // 作者的头像\r\n    realname: string, // 作者的真实姓名\r\n}\r\n\r\nexport interface IndentifyConfig {\r\n    id: number\r\n    value: string\r\n}\r\n\r\n// http请求是否正确\r\nexport const httpIsSuccess = (code: number) => {\r\n    return code === 0;\r\n}\r\n\r\nexport const isNull = (value: any) => {\r\n    return value === null;\r\n}\r\n\r\n// 转换时间\r\nexport const formatTime = (date: Date) => {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDay();\r\n    const hour = date.getHours();\r\n    const minute = date.getMinutes();\r\n    const seconds = date.getSeconds();\r\n    return `${year}-${month}-${day} ${hour}:${minute}:${seconds}`\r\n}","import { createFromIconfontCN } from '@ant-design/icons';\r\n\r\nexport const backIP = 'api'\r\n\r\nexport const testIP = 'https://mock.yonyoucloud.com/mock/16533/api'\r\n\r\nexport const IconFont = createFromIconfontCN({\r\n    scriptUrl: 'http://at.alicdn.com/t/font_2274798_m840qtc2j2e.js',\r\n});","import { backIP, testIP } from 'components/common/config'\r\nimport { getHeaders } from 'components/common/utils'\r\nimport Http from './Servies'\r\n\r\ninterface ILoginPassword {\r\n    phoneNumber: string;\r\n    password: string;\r\n    verification_code: string;\r\n    platform: number;\r\n}\r\n\r\ninterface IGetBasicUserInfo {\r\n    userID?: number;\r\n}\r\n\r\ninterface IAlterUserIdentify {\r\n    userID: number;\r\n    identifyID: number;\r\n}\r\n\r\ninterface IResetUserPassword {\r\n    userID: number;\r\n    password: string;\r\n}\r\n\r\ninterface IGetDetailUserInfo {\r\n    userID: number;\r\n}\r\n\r\nexport interface IAlterUserInfo {\r\n    name: string;\r\n    phoneNumber: string;\r\n    weixin_number: string;\r\n    lawyer_number: string;\r\n}\r\n\r\ninterface IAddUser {\r\n    identify: string;\r\n    lawyerNumber: string;\r\n    identifyNumber: string;\r\n    name: string;\r\n    avatar: string;\r\n    qualificationsNumber: string;\r\n    phone: string;\r\n    startTime: string;\r\n}\r\n\r\ninterface ISearchUser {\r\n    value: string;\r\n}\r\n\r\n// 获取图片验证码\r\nexport const get_verify_code_api = async () => {\r\n    return await Http.request(`${backIP}/public/verificationCode/image`, {}, 'GET')\r\n}\r\n\r\n// 管理员手机号密码登录\r\nexport const login_password_api = async (data: ILoginPassword) => {\r\n    return await Http.request(`${backIP}/login/password`, data, 'POST')\r\n}\r\n\r\n// 获取管理员基本信息\r\nexport const get_basic_user_info_api = async (data: IGetBasicUserInfo) => {\r\n    return await Http.request(`${backIP}/user/getBasicInfo`, data, 'GET', getHeaders())\r\n}\r\n\r\n// 获取用户列表\r\nexport const get_user_list_api = async () => {\r\n    return await Http.request(`${testIP}/admin/userList`, {}, 'GET', getHeaders())\r\n}\r\n\r\n// 修改用户身份\r\nexport const alter_user_identify_api = async (data: IAlterUserIdentify) => {\r\n    return await Http.request(`${testIP}/admin/user/identify`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 重置用户密码\r\nexport const reset_user_password_api = async (data: IResetUserPassword) => {\r\n    return await Http.request(`${testIP}/admin/user/password`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 获取用户详细信息\r\nexport const get_user_detail_info_api = async (data: IGetDetailUserInfo) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'GET', getHeaders())\r\n}\r\n\r\n// 修改用户信息\r\nexport const alter_user_info_api = async (data: IAlterUserInfo) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'PUT', getHeaders())\r\n}\r\n\r\n// 上传文件\r\nexport const upload_file_api = async (data: FormData) => {\r\n    return await Http.request(`${backIP}/public/upload`, data, 'POST', getHeaders())\r\n}\r\n\r\n// 生成新账号\r\nexport const add_new_user_api = async (data: IAddUser) => {\r\n    return await Http.request(`${testIP}/admin/user`, data, 'POST', getHeaders())\r\n}\r\n\r\n// 查找数据库用户\r\nexport const search_user_list_api = async (data: ISearchUser) => {\r\n    return await Http.request(`${testIP}/admin/user/tip`, data, 'GET', getHeaders())\r\n}","import axios from \"axios\";\r\n\r\n// 创建axios默认请求\r\n// axios.defaults.baseURL = \"http://106.14.174.206/api\"; // 后端代码\r\n// 配置超时时间\r\naxios.defaults.timeout = 100000;\r\n// 添加响应拦截器\r\naxios.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninterface BaseHttpResponse {\r\n  code: number;\r\n  data: any;\r\n  message: string;\r\n}\r\n\r\n// 请求的方式\r\ntype IMethod = 'GET' | 'POST' | 'PUT' | 'DELETE'\r\n\r\nclass Http {\r\n  static request(url: string, data: object, method: IMethod, headers?: object): Promise<BaseHttpResponse> {\r\n    if (method === 'GET') {\r\n      return new Promise((resolve, reject) => {\r\n        axios\r\n          .get(url, { params: data, headers: headers })\r\n          .then(res => {\r\n            resolve(res.data);\r\n          })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise((resolve, reject) => {\r\n        axios({\r\n          method: method,\r\n          data: data,\r\n          headers: headers,\r\n          url: url\r\n        }).then(res => {\r\n          resolve(res.data);\r\n        })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Http","import { connect } from 'react-redux'\r\nimport { transform_user } from 'redux/actions'\r\nimport Header from 'components/home/Header'\r\nexport default connect(\r\n    state => ({\r\n        user: state\r\n    }),\r\n    {transform_user}\r\n)(Header)","// 包含所有的 action creator\r\nimport {\r\n    USER_DATA,\r\n    REMOVE_USER_DATA\r\n} from './action-types';\r\nimport { UserBasicConfig } from 'components/home/Header';\r\n\r\n// TODO: 需修改\r\n// 从register里传递已登录的用户数据到其余各个组件\r\nexport const transform_user = (user: UserBasicConfig)=>({\r\n    type: USER_DATA,\r\n    data: user\r\n}) \r\n\r\n// 退出登录，删去redux的数据\r\nexport const remove_user = (user: UserBasicConfig)=>({\r\n    type: REMOVE_USER_DATA,\r\n    data: user\r\n}) \r\n\r\n// 异步action\r\n// 如果想返回一个函数，必须应用上异步中间件\r\n// export const incrementAsync = (number) => {\r\n//     return dispatch => {\r\n//         // 异步代码\r\n//         setTimeout(() => {\r\n//             // 一秒之后才去分发一个增加的action\r\n//             dispatch(increment(number))\r\n//         }, 1000)\r\n//     }\r\n// }","import React, { useCallback, useEffect, useState } from 'react'\r\nimport 'styles/home/header.scss'\r\nimport store from 'redux/store'\r\nimport { getToken, removeToken, successToast, errorToast, httpIsSuccess } from 'components/common/utils'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { get_basic_user_info_api } from 'http/UserApi'\r\nimport { IconFont } from 'components/common/config'\r\n\r\nconst stylePrefix = 'home-header'\r\n\r\nexport interface UserBasicConfig {\r\n    avatar: string; // 头像\r\n    name: string; // 真实姓名\r\n    lawyer_number: string;\r\n}\r\n\r\ninterface HeaderConfig {\r\n    transform_user: (user: UserBasicConfig) => {\r\n        type: string;\r\n        data: UserBasicConfig;\r\n    };\r\n    title?: string;\r\n}\r\n\r\nexport default function Header({ transform_user, title }: HeaderConfig) {\r\n    const history = useHistory()\r\n    const [avatar, setAvatar] = useState(store.getState().user?.avatar)\r\n    const [isMouse, setIsMouse] = useState(false)\r\n    const getBasicUser = useCallback(async () => {\r\n        const token: string = getToken()\r\n        if (token && !store.getState().user) {\r\n            const res = await get_basic_user_info_api({});\r\n            if (httpIsSuccess(res.code)) {\r\n                const tempUserData: UserBasicConfig = res.data\r\n                setAvatar(tempUserData.avatar)\r\n                transform_user(tempUserData)\r\n            } else {\r\n                errorToast(res.message)\r\n                history.push('/login')\r\n            }\r\n        }\r\n\r\n        if (!store.getState().user) {\r\n            errorToast('请先登录')\r\n            history.push('/login')\r\n        }\r\n    }, [history, transform_user])\r\n    const exitLogin = () => {\r\n        removeToken()\r\n        successToast('退出登录成功')\r\n        history.push('/login')\r\n    }\r\n    const gotoHome = () => {\r\n        history.push('/home')\r\n    }\r\n\r\n    useEffect(() => {\r\n        store.subscribe(() => {\r\n            getBasicUser();\r\n        })\r\n        getBasicUser();\r\n    }, [getBasicUser])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`}>\r\n            <p className={`${stylePrefix}-logo`} onClick={gotoHome}>律政云</p>\r\n            {\r\n                title && <p className={`${stylePrefix}-title`}>{title}</p>\r\n            }\r\n            <div\r\n                className={`${stylePrefix}-user-layout`}\r\n                onMouseOver={() => setIsMouse(true)}\r\n                onMouseOut={() => setIsMouse(false)}\r\n            >\r\n                <img onClick={() => console.log(avatar)} src={avatar} alt=\"avatar\" className={`${stylePrefix}-avatar`} />\r\n                <IconFont\r\n                    type='icon-xiabiao'\r\n                    className={`${stylePrefix}-icon`}\r\n                    style={{\r\n                        color: isMouse ? '#000' : '#fff'\r\n                    }}\r\n                />\r\n                <div\r\n                    className={`${stylePrefix}-user-operation-layout`}\r\n                    style={{\r\n                        display: isMouse ? 'block' : 'none'\r\n                    }}\r\n                >\r\n                    <p\r\n                        className={`${stylePrefix}-user-operation-word`}\r\n                        onClick={exitLogin}\r\n                    >\r\n                        退出登录\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { testIP } from \"components/common/config\"\r\nimport { getHeaders } from \"components/common/utils\"\r\nimport Http from \"./Servies\"\r\n\r\ninterface IGetUserInfoInSalary {\r\n    userID: number;\r\n}\r\n\r\n// 收入页面获取用户信息\r\nexport const get_user_info_in_salary_api = async (data: IGetUserInfoInSalary) => {\r\n    return await Http.request(`${testIP}/admin/salary/user`, data, 'GET', getHeaders())\r\n}\r\n\r\n// 获取收入列表\r\nexport const get_salary_list_api = async (data: IGetUserInfoInSalary) => {\r\n    return await Http.request(`${testIP}/admin/salary/list`, data, 'GET', getHeaders())\r\n}","import { errorToast, httpIsSuccess } from 'components/common/utils'\r\nimport { get_salary_list_api } from 'http/Salary'\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport 'styles/salary/salaryList.scss'\r\nconst stylePrefix = 'salary-salaryList'\r\n\r\ninterface SalaryListConfig {\r\n    userID: number;\r\n}\r\n\r\ninterface CaseItem {\r\n    case_name: string, //案件名称\r\n    identity: string,//主办人还是协办人\r\n    generalSalary: number,//总律师费\r\n    salary: number, //该案件分得的律师费\r\n    ratio: number,//该用户占该案件的金额比例\r\n}\r\n\r\ninterface YearSalaryItem {\r\n    year: number,//年份\r\n    year_salary: number,//该年总收入\r\n    case_list: CaseItem[]\r\n}\r\n\r\nexport default function SalaryList({ userID }: SalaryListConfig) {\r\n    const [salaryList, setSalaryList] = useState<YearSalaryItem[]>([])\r\n    const getSalaryList = useCallback(async () => {\r\n        const res = await get_salary_list_api({ userID })\r\n        if (httpIsSuccess(res.code)) {\r\n            setSalaryList(res.data)\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n    }, [userID])\r\n    useEffect(() => {\r\n        getSalaryList()\r\n    }, [userID, getSalaryList])\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            {\r\n                salaryList.map((salary, index) => {\r\n                    return <div\r\n                        key={index}\r\n                        className={`${stylePrefix}-salary-item-layout`}\r\n                    >\r\n                        <p className={`${stylePrefix}-year`}>年份：{salary.year}</p>\r\n                        <p className={`${stylePrefix}-year`}>年度总收入：{salary.year_salary}</p>\r\n                        {\r\n                            salary.case_list.map((caseItem, key) => {\r\n                                return <div\r\n                                    key={key}\r\n                                    className={`${stylePrefix}-case-item`}\r\n                                >\r\n                                    <span>{caseItem.case_name}</span>\r\n                                    <span>{caseItem.identity}</span>\r\n                                    <span>{caseItem.salary}</span>\r\n                                    <span>{caseItem.ratio}</span>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import Loading2 from 'components/common/Loading2';\r\nimport { errorToast, httpIsSuccess } from 'components/common/utils';\r\nimport { UserDetailConfig } from 'components/home/user/AlterUserInfoModal';\r\nimport { get_user_info_in_salary_api } from 'http/Salary';\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport 'styles/salary/userBasicShow.scss'\r\n\r\nconst stylePrefix = 'salary-userBasicShow'\r\n\r\ninterface UserBasicShowConfig {\r\n    userID: number;\r\n}\r\n\r\ninterface UserDetailInfoConfig extends UserDetailConfig {\r\n    salaryNum?: string;\r\n    avatar?: string;\r\n}\r\n\r\nexport default function UserBasicShow({ userID }: UserBasicShowConfig) {\r\n    const [user, setUser] = useState<UserDetailInfoConfig>({})\r\n    const [loading, setLoading] = useState(false)\r\n    // 初始化用户信息\r\n    const init = useCallback( async () => {\r\n        setLoading(true)\r\n        const res = await get_user_info_in_salary_api({ userID })\r\n        if (httpIsSuccess(res.code)) {\r\n            setUser(res.data);\r\n        } else {\r\n            errorToast(res.message)\r\n        }\r\n        setLoading(false)\r\n    }, [userID])\r\n    useEffect(() => {\r\n        init()\r\n    }, [userID, init])\r\n    const buildOtherInfoItem = (key: string, value: string) => {\r\n        return <p>\r\n            <span className={`${stylePrefix}-title`} >{key}：</span>\r\n            <span className={`${stylePrefix}-value`}>{value}</span>\r\n        </p>\r\n    }\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            {\r\n                !loading\r\n                    ? <div className={`${stylePrefix}-main`} >\r\n                        <div className={`${stylePrefix}-name-avatar-layout`} >\r\n                            <img src={user.avatar} className={`${stylePrefix}-avatar`} alt=\"\" />\r\n                            <p className={`${stylePrefix}-name`} >{user.name}</p>\r\n                        </div>\r\n                        <div className={`${stylePrefix}-other-info`} >\r\n                            {buildOtherInfoItem('收入总额', `${user.salaryNum || '0'}元`)}\r\n                            {buildOtherInfoItem('手机号', user.phoneNumber || '无')}\r\n                            {buildOtherInfoItem('微信号', user.weixin_number || '无')}\r\n                            {buildOtherInfoItem('律师证号', user.lawyer_number || '无')}\r\n                        </div>\r\n                    </div>\r\n                    : <Loading2 />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import SalaryList from 'components/salary/SalaryList'\r\nimport UserBasicShow from 'components/salary/UserBasicShow'\r\nimport HeaderContainer from 'containers/HeaderContainer'\r\nimport React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport store from 'redux/store'\r\nimport 'styles/pages/salary.scss'\r\nconst stylePrefix = 'page-salary'\r\n\r\ninterface salaryParams {\r\n    id: string;\r\n}\r\n\r\nexport default function Salary() {\r\n    const params = useParams<salaryParams>()\r\n    return (\r\n        <div className={`${stylePrefix}-layout`} >\r\n            <Provider store={store}>\r\n                <HeaderContainer />\r\n            </Provider>\r\n            <div className={`${stylePrefix}-main`} >\r\n                <UserBasicShow userID={parseInt(params.id)} />\r\n                <SalaryList userID={parseInt(params.id)}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}